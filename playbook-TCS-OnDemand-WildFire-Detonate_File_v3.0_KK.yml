contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
description: |-
  Detonate one or more files using the Wildfire integration. This playbook
  returns relevant reports to the War Room and file reputations to the context data.
  The detonation supports the following file types -
  APK, JAR, DOC, DOCX, RTF, XLS, XLSX, PPT, PPTX, OOXML, PE32, PDF, DMG, PKG, RAR, 7Z
id: f6c63e73-b7a8-4dec-813b-cca83d83f590
inputs:
- description: File object of the file to detonate. The File is taken from the context.
  key: File
  playbookInputQuery: null
  required: false
  value:
    complex:
      root: File
- description: Duration for executing the pooling (in minutes)
  key: Interval
  playbookInputQuery: null
  required: false
  value:
    simple: "1"
- description: The duration after which to stop pooling and to resume the playbook
    (in minutes)
  key: Timeout
  playbookInputQuery: null
  required: false
  value:
    simple: "15"
- description: The resource type to download. Default is pdf. xml is also possible.
  key: ReportFileType
  playbookInputQuery: null
  required: false
  value: {}
name: TCS-OnDemand-WildFire-Detonate File v3.0_KK
outputs:
- contextPath: DBotScore.Score
  description: The actual score
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator
  type: string
- contextPath: File.Type
  description: File type e.g. "PE"
  type: string
- contextPath: File.Size
  description: File size
  type: number
- contextPath: File.MD5
  description: MD5 hash of the file
  type: string
- contextPath: File.Name
  description: Filename
  type: string
- contextPath: File.SHA1
  description: SHA1 hash of the file
  type: string
- contextPath: File
  description: The File object
  type: unknown
- contextPath: File.SHA256
  description: SHA256 hash of the file
  type: string
- contextPath: File.Malicious
  description: The Malicious object
  type: unknown
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: DBotScore
  description: The DBot object
  type: unknown
- contextPath: DBotScore.Indicator
  description: The indicator we tested
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score
  type: string
- contextPath: WildFire.Report
  description: The submission object
  type: unknown
- contextPath: WildFire.Report.Status
  description: The status of the submission
  type: string
- contextPath: WildFire.Report.SHA256
  description: SHA256 of the submission
  type: string
- contextPath: InfoFile
  description: The report file object
  type: unknown
- contextPath: InfoFile.EntryID
  description: The EntryID of the report file
  type: string
- contextPath: InfoFile.Extension
  description: The extension of the report file
  type: string
- contextPath: InfoFile.Name
  description: The name of the report file
  type: string
- contextPath: InfoFile.Info
  description: The info of the report file
  type: string
- contextPath: InfoFile.Size
  description: The size of the report file
  type: number
- contextPath: InfoFile.Type
  description: The type of the report file
  type: string
- contextPath: WildFire.Report.MD5
  description: MD5 of the submission
  type: string
- contextPath: WildFire.Report.FileType
  description: The type of the submission
  type: string
- contextPath: WildFire.Report.Size
  description: The size of the submission
  type: number
sourceplaybookid: WildFire - Detonate file
starttaskid: "0"
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2e921f48-459f-40d6-84cf-6eaee06a07ba
      iscommand: false
      name: ""
      version: -1
    taskid: 2e921f48-459f-40d6-84cf-6eaee06a07ba
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 265,
          "y": -130
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    scriptarguments:
      Ids:
        complex:
          accessor: Report.SHA256
          root: WildFire
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: hash
      PollingCommandName:
        simple: wildfire-report
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: WildFire.Report(val.Status != 'Success').SHA256
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: c8f6e8cf-e44f-47f7-8a44-d7f9d5b7203d
      iscommand: false
      name: GenericPolling
      playbookId: GenericPolling
      type: playbook
      version: -1
    taskid: c8f6e8cf-e44f-47f7-8a44-d7f9d5b7203d
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
  "3":
    continueonerrortype: ""
    evidencedata:
      customfields: {}
      description:
        simple: Sandbox - Wild Fire Report
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      sha256:
        complex:
          accessor: SHA256
          root: WildFire.Report
      using:
        simple: WildFire-v2_instance_1
    separatecontext: false
    skipunavailable: false
    task:
      brand: WildFire-v2
      description: Retrieves results for a file hash using WildFire.
      id: a7d56ce5-87a0-44d5-83ca-f2beb308723d
      iscommand: true
      name: WildFire Get Report
      script: WildFire-v2|||wildfire-report
      type: regular
      version: -1
    taskid: a7d56ce5-87a0-44d5-83ca-f2beb308723d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1070
        }
      }
  "5":
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2e6c4a45-0ed3-42b5-8b29-7201d9d64850
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 2e6c4a45-0ed3-42b5-8b29-7201d9d64850
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 265,
          "y": 1245
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      upload:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: File.Name
              operator: inList
              right:
                iscontext: true
                value:
                  simple: ExtractedFiles
          root: File
          transformers:
          - args:
              field:
                value:
                  simple: EntryID
            operator: getField
    separatecontext: false
    skipunavailable: false
    task:
      brand: WildFire-v2
      description: Uploads a file to WildFire for analysis.
      id: 163b3076-3b5b-4b58-8ec0-6ed17da9049d
      iscommand: true
      name: WildFire Upload File
      script: WildFire-v2|||wildfire-upload
      type: regular
      version: -1
    taskid: 163b3076-3b5b-4b58-8ec0-6ed17da9049d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 545
        }
      }
  "13":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Report.SHA256
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: WildFire.Report.Status
                    operator: isEqualString
                    right:
                      value:
                        simple: Pending
                root: WildFire
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "18"
      "yes":
      - "2"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d91fa581-c9bc-4ac9-8a64-1fed6ff24eab
      iscommand: false
      name: Was upload finished successfully?
      type: condition
      version: -1
    taskid: d91fa581-c9bc-4ac9-8a64-1fed6ff24eab
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 265,
          "y": 720
        }
      }
  "15":
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      entryID:
        complex:
          accessor: EntryID
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: File.Extension
              operator: inList
              right:
                value:
                  simple: zip,7z
          root: File
      lastZipFileInWarroom:
        simple: "true"
      password:
        simple: '{TOMMED}n8A6JipibKQrr85JEwNKHj33WXz7xoZtqoBvBtR0LfkhUe0BWsLFWxNVc9j79do1EeaH9TK3dxZbBu1z5T9HYg=='
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Unzip a file using fileName or entryID to specify a file. Unzipped
        files will be loaded to the War Room and names will be put into the context.
      id: c682f48f-ec78-4900-84db-ec378b95488f
      iscommand: false
      name: Unzip File
      script: UnzipFile
      type: regular
      version: -1
    taskid: c682f48f-ec78-4900-84db-ec378b95488f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 290
        }
      }
  "18":
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      value:
        simple: Error File Upload Failed
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Prints text to war room (Markdown supported)
      id: c1de1043-1ebf-4a4d-8450-db35b85e227a
      iscommand: false
      name: Notify 'Error File Upload Failed'
      script: Print
      type: regular
      version: -1
    taskid: c1de1043-1ebf-4a4d-8450-db35b85e227a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1070
        }
      }
  "19":
    continueonerrortype: ""
    form:
      description: ""
      expired: false
      questions:
      - defaultrows: []
        fieldassociated: artifacts
        gridcolumns: []
        id: "0"
        label: ""
        labelarg:
          simple: Upload File For Sandbox Analysis (in .zip or .7z format)
        options: []
        optionsarg: []
        placeholder: ""
        readonly: false
        required: false
        tooltip: ""
        type: attachments
      sender: Your SOC team
      title: Upload File For Sandboxing
      totalanswers: 0
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    message:
      bcc: null
      body: null
      cc: null
      format: ""
      methods: []
      subject: null
      timings:
        completeafterreplies: 1
        completeaftersla: false
        completeafterv2: true
        retriescount: 2
        retriesinterval: 360
      to: null
    nexttasks:
      '#none#':
      - "15"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 6b058485-6316-463d-8635-0a0099af416a
      iscommand: false
      name: Upload File For Sandboxing (the password protected file in standard format)
      type: collection
      version: -1
    taskid: 6b058485-6316-463d-8635-0a0099af416a
    timertriggers: []
    type: collection
    view: |-
      {
        "position": {
          "x": 265,
          "y": 70
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1440,
        "width": 810,
        "x": 50,
        "y": -130
      }
    }
  }
