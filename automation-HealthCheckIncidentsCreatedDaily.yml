comment: Trend graph for incidents created per day.
commonfields:
  id: HealthCheckIncidentsCreatedDaily
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 2.1.3
    packID: HealthCheck
    packName: System Diagnostics and Health Check
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.83255
enabled: true
engineinfo: {}
mainengineinfo: {}
name: HealthCheckIncidentsCreatedDaily
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('HealthCheckIncidentsCreatedDaily', 'start', __line__())
  demisto.debug('pack name = System Diagnostics and Health Check, pack version = 2.1.3')



  ctx = demisto.context()
  dataFromCtx = ctx.get("widgets")
  if not dataFromCtx:
      incident = demisto.incidents()[0]
      accountName = incident.get('account')
      accountName = f"acc_{accountName}/" if accountName != "" else ""

      stats = demisto.executeCommand(
          "core-api-post",
          {
              "uri": f"{accountName}statistics/widgets/query",
              "body": {
                  "size": 31,
                  "dataType": "incidents",
                  "query": "",
                  "dateRange": {
                      "period": {
                          "byFrom": "days",
                          "fromValue": 30
                      }
                  },
                  "widgetType": "line",
                  "params": {
                      "groupBy": [
                          "occurred(d)",
                          "null"
                      ],
                      "timeFrame": "days"
                  },
              },
          })

      res = stats[0]["Contents"]["response"]
      data = {
          "Type": 17,
          "ContentsFormat": "line",
          "Contents": {
              "stats": res,
              "params": {
                  "timeFrame": "days"
              }
          }
      }
      demisto.results(data)
  else:
      data = {
          "Type": 17,
          "ContentsFormat": "line",
          "Contents": {
              "stats": dataFromCtx['IncidentsCreatedDaily'],
              "params": {
                  "timeFrame": "days"
              }
          }
      }
      demisto.results(data)

  register_module_line('HealthCheckIncidentsCreatedDaily', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
