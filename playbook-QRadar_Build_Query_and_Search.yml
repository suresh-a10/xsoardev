contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.2.0
    itemVersion: 2.5.2
    packID: QRadar
    packName: IBM QRadar
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: |-
  The QRadar Build Query and Search playbook creates an AQL query for the QRadar SIEM using the QRadarCreateAQLQuery automation queries. Complex queries take into consideration several inputs and allow including or excluding each of the values as well as performing a full or partial search. Each of the values can be searched across several fields.

  The playbook supports 3 separate conditions to be evaluated.
  For example, in the first condition, inputs will evaluate several user names that may or may not exist in several fields. The second input, can for example, evaluate for IP addresses in several fields that may or may not exist in several fields, and a third value can search for an event ID that may or may not exist in several fields. The results of all of the inputs will create an AQL query that covers all of the inputs combining all of the different conditions.

  Each of the inputs is validated so in case the inputs are not set correctly, the user can review and run them again.
  Also, populated inputs will be combined, meaning by populating the first and second values the resulting AQL query will be a combination of all of the values and not 3 separate searches. In addition, make sure to populate the inputs in order according to the indexed fields in QRadar (indexed fields should be provided before non indexed ones).
id: QRadar Build Query and Search
inputs:
- description: The values of the first field to search. This can be a single value
    or a comma-separated list of values. For example, admin1,admin2
  key: BaseValuesToSearch
  playbookInputQuery: null
  required: false
  value: {}
- description: The field names of the first field to search. This can be a single
    value or a comma-separated list of values. For example, username,user
  key: BaseFieldsToSearch
  playbookInputQuery: null
  required: false
  value: {}
- description: The state of the first field to search, meaning whether the values
    in the field be included or excluded. Valid options are include or exclude.
  key: BaseFieldState
  playbookInputQuery: null
  required: false
  value:
    simple: include
- description: Whether the values of the first field should be an exact match or a
    partial match. Valid options are exact or partial. When choosing exact, the AQL
    query will use the = operator. When choosing partial, the AQL query will ILIKE
    and add '%%' to the values. Notice that if you choose exact you will have to specify
    the BaseFieldsToSearch as well.
  key: BaseFieldMatch
  playbookInputQuery: null
  required: false
  value:
    simple: exact
- description: The values of the second field to search. This can be a single value
    or a comma-separated list of values. For example admin1,admin2
  key: FirstAdditionalValues
  playbookInputQuery: null
  required: false
  value: {}
- description: The field names of the second field to search. This can be a single
    value or a comma-separated list of values. For example admin1,admin2
  key: FirstAdditionalFields
  playbookInputQuery: null
  required: false
  value: {}
- description: The state of the second field to search, meaning whether the values
    in the field should be included or excluded. Valid options are include or exclude.
    Notice that if you choose exact you will have to specify the FirstAdditionalFields
    as well.
  key: FirstAdditionalFieldState
  playbookInputQuery: null
  required: false
  value:
    simple: include
- description: Whether the values of the second field should be an exact match or
    a partial match. Valid options are exact or partial.
  key: FirstAdditionalFieldMatch
  playbookInputQuery: null
  required: false
  value:
    simple: exact
- description: The values of the third field to search. This can be a single value
    or a comma-separated list of values. For example admin1,admin2
  key: SecondAdditionalValues
  playbookInputQuery: null
  required: false
  value: {}
- description: The field names of the third field to search. This can be a single
    value or a comma-separated list of values. For example username,user
  key: SecondAdditionalFields
  playbookInputQuery: null
  required: false
  value: {}
- description: The state of the third field to search, meaning should the values in
    the field be included or excluded. Valid options are include or exclude.
  key: SecondAdditionalFieldState
  playbookInputQuery: null
  required: false
  value:
    simple: include
- description: Should the values of the third field be an exact match or a partial
    match. Valid options are exact or partial. When choosing exact, the AQL query
    will use the = operator. When choosing partial, the AQL query will ILIKE and add
    '%%' to the values. Notice that if you choose exact you will have to specify the
    SecondAdditionalFields as well.
  key: SecondAdditionalFieldMatch
  playbookInputQuery: null
  required: false
  value:
    simple: exact
- description: |-
    The list of fields to select within the AQL query.
    The default fields are
    DATEFORMAT(devicetime,'dd-MM-yyyy hh:mm'),LOGSOURCENAME(logsourceid),CATEGORYNAME(category),QIDNAME(qid),sourceip,destinationip,username
  key: SelectFields
  playbookInputQuery: null
  required: false
  value:
    simple: DATEFORMAT(devicetime,'dd-MM-yyyy hh:mm'),LOGSOURCENAME(logsourceid),CATEGORYNAME(category),QIDNAME(qid),sourceip,destinationip,username
- description: |-
    Time frame as used in AQL.
    For example:
    LAST 7 DAYS
    START '2019-09-25 15:51' STOP '2019-09-25 17:51'
    For more examples, see IBM's AQL documentation.
  key: TimeFrame
  playbookInputQuery: null
  required: false
  value:
    simple: LAST 1 HOURS
- description: The QRadar Get Hunting Results playbook outputs the detected hosts,
    users, and IP addresses detected in the QRadar search results.
  key: UseHuntingResults
  playbookInputQuery: null
  required: false
  value:
    simple: "false"
name: QRadar Build Query and Search
outputs:
- contextPath: QRadar.SearchEvents
  description: The result of the search.
  type: string
- contextPath: QRadar.DetectedUsers
  description: Users detected based on the username field in your search.
  type: string
- contextPath: QRadar.DetectedInternalIPs
  description: Internal IP addresses detected based on fields and inputs in your search.
  type: string
- contextPath: QRadar.DetectedExternalIPs
  description: External IP addresses detected based on fields and inputs in your search.
  type: string
- contextPath: QRadar.DetectedInternalHosts
  description: Internal host names detected based on hosts in your assets table. Note
    that the data accuracy depends on how the asset mapping is configured in QRadar.
  type: string
- contextPath: QRadar.DetectedExternalHosts
  description: External host names detected based on hosts in your assets table. Note
    that the data accuracy depends on how the asset mapping is configured in QRadar.
  type: string
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 882c13a2-1780-4100-8c2b-59b6c1895d54
      iscommand: false
      name: ""
      version: -1
    taskid: 882c13a2-1780-4100-8c2b-59b6c1895d54
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 660,
          "y": -60
        }
      }
  "3":
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    quietmode: 0
    scriptarguments:
      base_field_match:
        simple: ${inputs.BaseFieldMatch}
      base_field_state:
        simple: ${inputs.BaseFieldState}
      base_fields_to_search:
        simple: ${inputs.BaseFieldsToSearch}
      base_values_to_search:
        simple: ${inputs.BaseValuesToSearch}
      first_additional_field_match:
        simple: ${inputs.FirstAdditionalFieldMatch}
      first_additional_field_state:
        simple: ${inputs.FirstAdditionalFieldState}
      first_additional_fields:
        simple: ${inputs.FirstAdditionalFields}
      first_additional_values:
        simple: ${inputs.FirstAdditionalValues}
      second_additional_field_match:
        simple: ${inputs.SecondAdditionalFieldMatch}
      second_additional_field_state:
        simple: ${inputs.SecondAdditionalFieldState}
      second_additional_fields:
        simple: ${inputs.SecondAdditionalFields}
      second_additional_values:
        simple: ${inputs.SecondAdditionalValues}
      select_fields:
        simple: ${inputs.SelectFields}
      time_frame:
        simple: ${inputs.TimeFrame}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Builds a QRadar AQL Query.
      id: 78da1d78-a6bc-4d0f-8f72-15d89f3d89a5
      iscommand: false
      name: Build AQL query
      script: QRadarCreateAQLQuery
      type: regular
      version: -1
    taskid: 78da1d78-a6bc-4d0f-8f72-15d89f3d89a5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 280
        }
      }
  "4":
    continueonerrortype: ""
    id: "4"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "6"
    note: false
    quietmode: 0
    scriptarguments:
      SearchResults:
        simple: ${QRadar.SearchEvents}
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      id: 111c651c-5335-40d6-8222-c9466407b062
      iscommand: false
      name: QRadar Get Hunting Results
      playbookId: QRadar Get Hunting Results
      type: playbook
      version: -1
    taskid: 111c651c-5335-40d6-8222-c9466407b062
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 90,
          "y": 1020
        }
      }
  "5":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: inputs.UseHuntingResults
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "4"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Use hunting results?
      id: 359cdad3-32d5-4567-8f22-031b29b653d7
      iscommand: false
      name: Use hunting results?
      type: condition
      version: -1
    taskid: 359cdad3-32d5-4567-8f22-031b29b653d7
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 240,
          "y": 830
        }
      }
  "6":
    continueonerrortype: ""
    id: "6"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 5821881c-e6bf-434e-8083-dff50e033291
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 5821881c-e6bf-434e-8083-dff50e033291
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1190
        }
      }
  "7":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: QRadar.SearchEvents
          operator: isNotEmpty
          right:
            value:
              simple: "true"
      label: "yes"
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "5"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Are there search results?
      id: 6495339d-e834-4a62-85a3-f1ea7ce69570
      iscommand: false
      name: Are there search results?
      type: condition
      version: -1
    taskid: 6495339d-e834-4a62-85a3-f1ea7ce69570
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 660
        }
      }
  "8":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: inputs.BaseValuesToSearch
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              simple: inputs.FirstAdditionalValues
          operator: isNotEmpty
        - left:
            iscontext: true
            value:
              simple: inputs.SecondAdditionalValues
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "3"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Are there values to search?
      id: 0087cb56-87db-48de-88db-818d93628828
      iscommand: false
      name: Are there values to search?
      type: condition
      version: -1
    taskid: 0087cb56-87db-48de-88db-818d93628828
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 660,
          "y": 100
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    quietmode: 0
    scriptarguments:
      interval_in_seconds:
        simple: "1"
      polling:
        simple: "true"
      query_expression:
        complex:
          root: QRadarQuery
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Polling command to search for events of a specific offense.
      id: 127dc2fd-bff9-4043-845b-20a32e005be6
      iscommand: true
      name: Run Qradar Query
      script: '|||qradar-search-retrieve-events'
      type: regular
      version: -1
    taskid: 127dc2fd-bff9-4043-845b-20a32e005be6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 470
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1315,
        "width": 950,
        "x": 90,
        "y": -60
      }
    }
  }
