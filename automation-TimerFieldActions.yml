args:
- auto: PREDEFINED
  description: Select the type of action want to perform on TimerField
  isArray: true
  name: Action
  predefined:
  - startTimer
  - stopTimer
  - pauseTimer
  - resetTimer
  required: true
- description: Provide the comma separated list of TimerFields
  isArray: true
  name: TimerFields
  required: true
comment: This script can used to take action like (Start,Stop,Pause & Reset) on TimerFields
commonfields:
  id: 8a1fd595-6284-4c83-830b-de194ad1bb97
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.11.54132
enabled: true
engineinfo: {}
mainengineinfo: {}
name: TimerFieldActions
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2+


  from typing import Dict, Any
  import traceback



  ''' COMMAND FUNCTION '''



  ''' MAIN FUNCTION '''
  def take_action_on_timer(action_type,timerfield_list):

      for i in range(len(timerfield_list)):
          demisto.executeCommand(action_type,{"timerField":timerfield_list[i]})

  def main():
      #try:
          action_type = demisto.args()['Action']
          timerfield_list = (demisto.args()['TimerFields']).split(",")
          take_action_on_timer(action_type,timerfield_list)
      #except Exception as ex:
          #demisto.error(traceback.format_exc())  # print the traceback
          #return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags: []
type: python
