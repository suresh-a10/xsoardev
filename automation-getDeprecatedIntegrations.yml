comment: Get the list of deprecated integrations.
commonfields:
  id: getDeprecatedIntegrations
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.10.0
    itemVersion: 3.0.0
    packID: HealthCheck
    packName: System Diagnostics and Health Check
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.111526
enabled: true
engineinfo: {}
mainengineinfo: {}
name: getDeprecatedIntegrations
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('getDeprecatedIntegrations', 'start', __line__())
  demisto.debug('pack name = System Diagnostics and Health Check, pack version = 3.0.0')



  res = demisto.executeCommand("core-api-get", {"uri": "contentpacks/installed-expired"})[0]["Contents"]["response"]

  wList = []
  for item in res:
      if item['deprecated'] is True:
          wList.append({'Name': item['name']})
      if item['integrations']:
          if len(item['integrations']) > 0:
              for val in item['integrations']:
                  if 'Deprecated' in val['name']:
                      wList.append({'Name': val['name']})

  md = tableToMarkdown('List of Deprecated Integrations', wList)
  return_results({
      'Contents': wList,
      'ContentsFormat': formats['text'],
      'HumanReadable': md,
      'EntryContext': {'DeprecatedContentPacks': [wList]}
  })

  register_module_line('getDeprecatedIntegrations', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- statusreview
type: python
