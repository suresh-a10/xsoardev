args:
- description: The value to modify
  name: value
  required: true
- description: A JSON dictionary that contains key:value pairs that represent the
    "Outcome":"Regex".
  name: json_regex
comment: |-
  This transformer will take in a value and transform it based on multiple regular expressions defined in a JSON dictionary structure. The key:value pair of the JSON dictionary should be:

  "desired outcome": "regex to match"

  For example:

  {
      "Match 1": ".*match 1.*",
      "Match 2": ".*match 2.*",
      "Catch all": ".*"
  }

  The transformer will match in order of dictionary entries.
commonfields:
  id: MapRegex
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.3.8
    packID: CommunityCommonScripts
    packName: Community Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.115186
enabled: true
engineinfo: {}
mainengineinfo: {}
name: MapRegex
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('MapRegex', 'start', __line__())
  demisto.debug('pack name = Community Common Scripts, pack version = 1.3.8')


  import re


  # Get the arguments
  args = demisto.args()

  # Get the input value
  value = args.get('value')
  results = value

  # Get and parse the JSON input
  try:
      json_regex = json.loads(args.get('json_regex'))
  except Exception as err:
      return_error(err)

  for k, v in json_regex.items():
      if re.search(v, value):
          results = k
          break

  return_results(results)

  register_module_line('MapRegex', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- transformer
- string
type: python
