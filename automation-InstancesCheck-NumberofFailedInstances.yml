comment: Health Check dynamic section, showing the total number of failed integrations.
commonfields:
  id: InstancesCheck-NumberofFailedInstances
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.3.20
    packID: IntegrationsAndIncidentsHealthCheck
    packName: Integrations & Incidents Health Check
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.83255
enabled: true
engineinfo: {}
mainengineinfo: {}
name: InstancesCheck-NumberofFailedInstances
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('InstancesCheck-NumberofFailedInstances', 'start', __line__())
  ### pack version: 1.3.20



  RED_HTML_STYLE = "color:#FF1744;text-align:center;font-size:800%;>"
  GREEN_HTML_STYLE = "color:#00CD33;text-align:center;font-size:800%;>"


  def main():
      incident = demisto.incidents()
      query = incident[0].get('CustomFields', {}).get('totalfailedinstances', 0)

      if not query:
          html = f"<h1 style={GREEN_HTML_STYLE}0</h1>"

      else:
          html = f"<h1 style={RED_HTML_STYLE}{str(query)}</h1>"

      demisto.results({
          'ContentsFormat': formats['html'],
          'Type': entryTypes['note'],
          'Contents': html
      })


  if __name__ in ["__main__", "builtin", "builtins"]:
      main()

  register_module_line('InstancesCheck-NumberofFailedInstances', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
- failedInstances
type: python
