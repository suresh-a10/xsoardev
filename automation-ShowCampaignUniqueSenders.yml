comment: Displays the number of unique senders of an email campaign.
commonfields:
  id: ShowCampaignUniqueSenders
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 3.4.7
    packID: Campaign
    packName: Phishing Campaign
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.86272
enabled: true
engineinfo: {}
mainengineinfo: {}
name: ShowCampaignUniqueSenders
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('ShowCampaignUniqueSenders', 'start', __line__())
  ### pack version: 3.4.7



  # Variable initialization:
  html = ""
  campaign_incidents = ""

  try:
      incident_id = demisto.incidents()[0].get('id', {})
      context = demisto.executeCommand("getContext", {'id': incident_id})
      campaign_incidents = demisto.get(context[0], "Contents.context.EmailCampaign.incidents")
      unique_senders = {incident.get("emailfrom") for incident in campaign_incidents}  # type: ignore[attr-defined]
      html = f"<div style='font-size:17px; text-align:center; padding-top: 20px;'> " \
             f"Unique Senders <div style='font-size:32px;'> <div> {len(unique_senders)} </div></div>"
  except Exception:
      html = "<div style='text-align:center; padding-top: 20px;'> <div> No senders </div>"

  # Return the data to the layout:
  demisto.results({
      'ContentsFormat': EntryFormat.HTML,
      'Type': EntryType.NOTE,
      'Contents': html
  })

  register_module_line('ShowCampaignUniqueSenders', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
