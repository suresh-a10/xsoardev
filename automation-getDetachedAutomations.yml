comment: Get the list of detached automations.
commonfields:
  id: getDetachedAutomations
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.10.0
    itemVersion: 3.0.3
    packID: HealthCheck
    packName: System Diagnostics and Health Check
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.115186
enabled: true
engineinfo: {}
mainengineinfo: {}
name: getDetachedAutomations
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('getDetachedAutomations', 'start', __line__())
  demisto.debug('pack name = System Diagnostics and Health Check, pack version = 3.0.3')



  payload = {'query': 'system:T'}
  res = demisto.executeCommand("core-api-post", {"uri": "automation/search",
                               "body": json.dumps(payload)})[0]["Contents"]["response"]

  if not res['scripts']:
      res['scripts'] = []

  scriptsList = []
  for item in res["scripts"]:
      script = {}
      if not (item.get('detached') is None):
          if item['detached'] is True:
              script['name'] = item['name']
              scriptsList.append(script)


  return_results({"total": len(scriptsList), "data": scriptsList})

  register_module_line('getDetachedAutomations', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- statusreview
- widget
type: python
