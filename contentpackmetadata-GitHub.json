{
	"author": "Cortex XSOAR",
	"authorImage": "content/packs/Base/Author_image.png",
	"beta": false,
	"cacheVersn": 0,
	"categories": [
		"Code Repositories"
	],
	"certification": "certified",
	"contentItemTypes": [
		"integration"
	],
	"contentItems": {
		"automation": null,
		"classifier": null,
		"dashboard": null,
		"genericfield": null,
		"generictype": null,
		"incidentfield": null,
		"incidenttype": null,
		"indicatorfield": null,
		"integration": [
			{
				"category": "Utilities",
				"commands": [
					{
						"description": "Lists team members.",
						"name": "GitHub-list-team-members"
					},
					{
						"description": "Gets a branch.",
						"name": "GitHub-get-branch"
					},
					{
						"description": "Updates a pull request in a repository.",
						"name": "GitHub-update-pull-request"
					},
					{
						"description": "Lists the pull request files.",
						"name": "GitHub-list-pr-files"
					},
					{
						"description": "Gets the content of a file from GitHub.",
						"name": "GitHub-get-file-content"
					},
					{
						"description": "Lists all the review comments for a pull request.",
						"name": "GitHub-list-pr-review-comments"
					},
					{
						"description": "Gets a check run details.",
						"name": "Github-get-check-run"
					},
					{
						"description": "Cancels a GitHub workflow.",
						"name": "GitHub-cancel-workflow"
					},
					{
						"description": "Gets releases data from a given repository and organization.",
						"name": "GitHub-releases-list"
					},
					{
						"description": "Returns a list of GitHub workflows on a given repository.",
						"name": "GitHub-list-workflows"
					},
					{
						"description": "Gets the usage details of GitHub action workflows of private repositories by repository owner.",
						"name": "Github-get-github-actions-usage"
					},
					{
						"description": "Searches for and returns issues that match a given query.",
						"name": "GitHub-search-issues"
					},
					{
						"description": "Create a new branch.",
						"name": "GitHub-create-branch"
					},
					{
						"description": "Creates a new pull request.",
						"name": "GitHub-create-pull-request"
					},
					{
						"description": "Adds up to 10 assignees to an issue/PR. Users already assigned to an issue are not replaced.",
						"name": "GitHub-add-assignee"
					},
					{
						"description": "Returns events corresponding to the given issue.",
						"name": "Github-list-issue-events"
					},
					{
						"description": "Gets inactive pull requests.",
						"name": "GitHub-get-stale-prs"
					},
					{
						"description": "Searches for code in repositories that match a given query.",
						"name": "GitHub-search-code"
					},
					{
						"description": "Create a release.",
						"name": "GitHub-create-release"
					},
					{
						"description": "Adds labels to an issue.",
						"name": "GitHub-add-label"
					},
					{
						"description": "Lists all issues that the user has access to view.",
						"name": "GitHub-list-all-issues"
					},
					{
						"description": "Deletes a branch.",
						"name": "GitHub-delete-branch"
					},
					{
						"description": "Gets pull requests corresponding to the given branch name.",
						"name": "GitHub-list-branch-pull-requests"
					},
					{
						"description": "Deletes a comment.",
						"name": "GitHub-delete-comment"
					},
					{
						"description": "Retrieves a user membership status with a team.",
						"name": "GitHub-get-team-membership"
					},
					{
						"description": "Closes an existing issue.",
						"name": "GitHub-close-issue"
					},
					{
						"description": "Lists all issues that the user has access to view.",
						"name": "GitHub-list-all-projects"
					},
					{
						"description": "Gets a commit.",
						"name": "GitHub-get-commit"
					},
					{
						"description": "Lists reviews on a pull request.",
						"name": "GitHub-list-pr-reviews"
					},
					{
						"description": "Lists comments on an issue.",
						"name": "GitHub-list-issue-comments"
					},
					{
						"description": "Lists the teams for an organization. Note that this API call is only available to authenticated members of the organization.",
						"name": "GitHub-list-teams"
					},
					{
						"description": "Creates an issue in GitHub.",
						"name": "GitHub-create-issue"
					},
					{
						"description": "Updates the parameters of a specified issue.",
						"name": "GitHub-update-issue"
					},
					{
						"description": "Returns a merged pull request. If the pull request has been merged, the API returns 'Status: 204 No Content'. If the pull request has not been merged the API returns 'Status: 404 Not Found'.",
						"name": "GitHub-is-pr-merged"
					},
					{
						"description": "Gets a pull request.",
						"name": "GitHub-get-pull-request"
					},
					{
						"description": "Triggers a GitHub workflow on a given repository and workflow.",
						"name": "GitHub-trigger-workflow"
					},
					{
						"description": "Returns the total number of downloads for all releases for the specified repository.",
						"name": "GitHub-get-download-count"
					},
					{
						"description": "Update an already existing comment.",
						"name": "GitHub-update-comment"
					},
					{
						"description": "Adds an Issue as a card in column of a spesific project.",
						"name": "GitHub-add-issue-to-project-board"
					},
					{
						"description": "Creates a comment for a given issue.",
						"name": "GitHub-create-comment"
					},
					{
						"description": "Requests reviews from GitHub users for a given pull request.",
						"name": "GitHub-request-review"
					},
					{
						"description": "Gets list of files from the given path in the repository.",
						"name": "Github-list-files"
					},
					{
						"description": "Gets the data of the a given path.",
						"name": "GitHub-get-path-data"
					},
					{
						"description": "Commits a given file.",
						"name": "Github-commit-file"
					}
				],
				"description": "Integration to GitHub API.",
				"id": "GitHub",
				"name": "GitHub"
			},
			{
				"category": "Identity and Access Management",
				"commands": [
					{
						"description": "Disable an active user.",
						"name": "iam-disable-user"
					},
					{
						"description": "Updates an existing user with the data passed in the user-profile argument.",
						"name": "iam-update-user"
					},
					{
						"description": "Creates a user.",
						"name": "iam-create-user"
					},
					{
						"description": "Retrieves a User Profile schema which holds all of the user fields within the application. Used for outgoing-mapping through the Get Schema option.",
						"name": "get-mapping-fields"
					},
					{
						"description": "Retrieves a single user resource.",
						"name": "iam-get-user"
					}
				],
				"description": "Integrate with GitHub services to perform Identity Lifecycle Management operations.",
				"id": "GitHub IAM",
				"name": "GitHub IAM"
			}
		],
		"layoutscontainer": null,
		"list": null,
		"playbook": null,
		"report": null,
		"reputation": null,
		"widget": null,
		"wizard": null
	},
	"currentVersion": "2.1.4",
	"definitionId": "",
	"dependencies": {
		"Base": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.37.0",
			"name": "Base"
		},
		"IAM-SCIM": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.1.1",
			"name": "IAM SCIM"
		}
	},
	"deprecated": false,
	"description": "Manage GitHub issues and pull requests directly from Cortex XSOAR",
	"disabledMonthly": false,
	"downloads": 8945,
	"eulaLink": "https://github.com/demisto/content/blob/master/LICENSE",
	"fromServerVersion": "5.0.0",
	"general": [
		"generalFieldCertified",
		"generalFieldByCortexXSOAR",
		"generalFieldFree",
		"generalFieldSupportIncluded"
	],
	"id": "GitHub",
	"installMessage": "",
	"integrations": [
		{
			"imagePath": "content/packs/GitHub/GitHub_image.png",
			"name": "GitHub"
		},
		{
			"imagePath": "content/packs/GitHub/GitHubIAM_image.png",
			"name": "GitHub IAM"
		}
	],
	"itemVersion": "2.1.4",
	"keywords": [],
	"legacy": true,
	"name": "GitHub",
	"packID": "GitHub",
	"packName": "",
	"premium": false,
	"previewOnly": false,
	"price": 0,
	"propagationLabels": [
		"all"
	],
	"rawKeywords": null,
	"rawTags": null,
	"rawUseCases": null,
	"readme": "Use the GitHub integration to manage GitHub issues and pull requests directly from Cortex XSOAR.\n\n## What does this pack do\nAmong other things, this integration enables you to:\n- Create, close, or update a GitHub issue.\n- Get a list of all GitHub issues you have access to.\n- Create a branch in GitHub.\n- Get a list of a GitHub issue's comments.\n- Create or update a GitHub pull request.\n- Search for a GitHub pull request.\n- Get a list of files for a GitHub pull request.\n- Get a list of inactive GitHub pull requests.\n- Get the contents of a file in GitHub.\n- Create a release.\n",
	"searchRank": 10,
	"serverMaxVersion": "",
	"serverMinVersion": "5.0.0",
	"support": "xsoar",
	"supportDetails": {
		"email": "",
		"url": "https://www.paloaltonetworks.com/cortex"
	},
	"tags": [],
	"toServerVersion": "",
	"updated": "2024-12-03T10:37:59Z",
	"useCases": [],
	"version": -1,
	"versionInfo": "1741355",
	"videos": []
}