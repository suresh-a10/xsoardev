args:
- default: true
  description: The list to apply the transformer to.
  name: value
  required: true
- auto: PREDEFINED
  description: The field to extract from each item (Optional).
  name: getField
  predefined:
  - ""
- auto: PREDEFINED
  defaultValue: "false"
  description: Whether the argument should be saved as a string (Optional).
  name: stringify
  predefined:
  - "true"
  - "false"
comment: Retrieves fields from an object using dot notation
commonfields:
  id: GetFields
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.3.8
    packID: CommunityCommonScripts
    packName: Community Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.115186
enabled: true
engineinfo: {}
mainengineinfo: {}
name: GetFields
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('GetFields', 'start', __line__())
  demisto.debug('pack name = Community Common Scripts, pack version = 1.3.8')




  def get_fields(args):
      """
      Retrieves fields from an object using dot notation by leveraging demisto.get().
      :param args: dictionary containing the Demisto arguments object.
      :return: hr_string as a human readable string. entry_context as a dictionary containing the
      results.
      """
      values_to_search = argToList(args.get('value'))
      get_field = args.get('getField')

      reduced_dicts = []
      for dict_item in values_to_search:
          if isinstance(dict_item, dict):
              if get_field:
                  fields_to_get = get_field.split(",")
                  value = {field: demisto.get(dict_item, field) for field in fields_to_get}
                  if value:
                      reduced_dicts.append(value)
              else:
                  reduced_dicts.append(dict_item)

      if len(reduced_dicts) == 1:
          return reduced_dicts[0]

      if argToBoolean(args.get('stringify', 'false')):
          return json.dumps(reduced_dicts, ensure_ascii=False)
      else:
          return reduced_dicts


  def main():
      args = demisto.args()
      return_results(get_fields(args))


  # python2 uses __builtin__ python3 uses builtins
  if __name__ == "__builtin__" or __name__ == "builtins":
      main()

  register_module_line('GetFields', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- transformer
- general
- entirelist
type: python
