{
	"author": "",
	"authorImage": "",
	"beta": false,
	"cacheVersn": 0,
	"categories": [
		"Utilities"
	],
	"certification": "",
	"contentItemTypes": [
		"automation"
	],
	"contentItems": {
		"automation": [
			{
				"description": "The automation removes evidence based on a query performed on the evidence content,\nif the provided string is found within the evidence- it will be removed.",
				"name": "RemoveEmptyEvidence",
				"tags": []
			},
			{
				"description": "An automation script to return subnet collision result",
				"name": "IPCalcCheckSubnetCollision",
				"tags": []
			},
			{
				"description": "Use this automation to delete incidents using query parameter with the same format as used in incidents search. Core REST API integration instance should be created.",
				"name": "DeleteIncidentsByQuery",
				"tags": []
			},
			{
				"description": "Deprecated. Use RetrievePlaybookDependencies instead. Retrieves all Playbook (and Sub-Playbook) Names and Integrations for a provided Playbook name",
				"name": "RetrievePlaybooksAndIntegrations",
				"tags": []
			},
			{
				"description": "An automation script to return subnet addresses",
				"name": "IPCalcReturnSubnetAddresses",
				"tags": []
			},
			{
				"description": "Converts JSON objects to HTML tables.",
				"name": "Json2HtmlTable",
				"tags": [
					"basescript",
					"tansformer"
				]
			},
			{
				"description": "This transformer will get an index of an element from an array.\nex:[\"phishing\",\"Malware\"], if we provide \"Malware\" to array_value argument, will get index as 1.",
				"name": "GetIndexOfArrayValue",
				"tags": []
			},
			{
				"description": "Gets the maximum value from list\ne.g. [\"25\", \"10\", \"25\"] =\u003e \"25\"\n ",
				"name": "MaxList",
				"tags": [
					"transformer",
					"number",
					"entirelist"
				]
			},
			{
				"description": "Converts unix time to AD Integer8 time. This is used in many AD date fields like pwdLastSet.",
				"name": "DateTimeToADTime",
				"tags": [
					"active directory",
					"date"
				]
			},
			{
				"description": "This automation is being executed by the \"GetFilePathPreProcessing\" pre-processing script that collects the paths and names of attachments of an incoming incident, then passes it to this automation that reads the files and creates them in an existing incident",
				"name": "CreateFileFromPathObject",
				"tags": []
			},
			{
				"description": "randomly select elements from a list in Python",
				"name": "RandomElementFromList",
				"tags": [
					"transformer"
				]
			},
			{
				"description": "An automation script to return address IANA information",
				"name": "IPCalcReturnAddressIANAAllocation",
				"tags": []
			},
			{
				"description": "Tests whether left side version number is equal to right side version number.\nVersion numbers need to have at least a major and minor version component to be considered valid. E.g. 1.0",
				"name": "VersionEqualTo",
				"tags": [
					"Utilities",
					"filter"
				]
			},
			{
				"description": "Tests whether left side version number is greater than right side version number.\n\nVersion numbers need to have at least a major and minor version component to be considered valid. E.g. 1.0",
				"name": "VersionGreaterThan",
				"tags": [
					"Utilities",
					"filter"
				]
			},
			{
				"description": "This transformer will invert every two items in an array.\nExample: \n[\"A\", \"B\", \"C\", \"D\"]\nResult:\n[\"B\", \"A\", \"D\", \"C\"]\n\nIf the total of items in the array is an odd number the last item will be removed\nExample:\n[\"A\", \"B\", \"C\", \"D\", \"E\"]\nResult:\n[\"B\", \"A\", \"D\", \"C\"]\n\nIf the item is not an array the output will be same passed object.",
				"name": "InvertEveryTwoItems",
				"tags": [
					"transformer",
					"list"
				]
			},
			{
				"description": "This Automation takes in a string of comma separated items and returns a dictionary of with the defined chunk size. ",
				"name": "BatchData",
				"tags": []
			},
			{
				"description": "Returns the current datetime as an epoch value for use in timestamp comparisons.",
				"name": "DateTimeNowToEpoch",
				"tags": []
			},
			{
				"description": "Converts the given time to an LDAP timestamp.",
				"name": "DateTimeToLDAPTime",
				"tags": [
					"transformer",
					"date"
				]
			},
			{
				"description": "Compares two lists.",
				"name": "CompareList",
				"tags": []
			},
			{
				"description": "Get the final verdict from the DBotScore of the context.\nProvided that it has all of the latest source verdict, this script gives you the right final verdict.",
				"name": "GetIndicatorDBotScoreFromContext",
				"tags": [
					"Utility"
				]
			},
			{
				"description": "Retrieves fields from an object using dot notation",
				"name": "GetFields",
				"tags": [
					"transformer",
					"general",
					"entirelist"
				]
			},
			{
				"description": "An Automation Script to return subnet network ID",
				"name": "IPCalcReturnSubnetNetwork",
				"tags": []
			},
			{
				"description": "deletes expired indicators.",
				"name": "delete_expired_indicator_with_exlusion",
				"tags": []
			},
			{
				"description": "This automation script will pull a random image from https://images.nasa.gov based on the search parameter provided. If the script is used within a widget, it will output an image in markdown format. If it is used anywhere else it will output an image in markdown format and also context data.",
				"name": "RandomPhotoNasa",
				"tags": [
					"dynamic-section",
					"widget"
				]
			},
			{
				"description": "Strip accent marks (diacritics) from a given string.\nFor example: \"Niño שָׁלוֹם Montréal اَلسَّلَامُ عَلَيْكُمْ‎\"\nWill return: \"Nino שלום Montreal السلام عليكم\"",
				"name": "StripAccentMarksFromString",
				"tags": [
					"transformer",
					"string"
				]
			},
			{
				"description": "Calculates the time span between two dates using Powershell's `New-TimeSpan` command.\n\nA timespan with a start date of \"2022-04-02T15:42:48\" and end date of \"2022-04-12T16:55:07\" would return the following:\n\nDays : 10\nHours : 1\nMinutes : 12\nSeconds : 19\nMilliseconds : 0\nTicks : 8683390000000\nTotalDays : 10.0502199074074\nTotalHours : 241.205277777778\nTotalMinutes : 14472.3166666667\nTotalSeconds : 868339\nTotalMilliseconds : 868339000",
				"name": "CalculateTimeSpan",
				"tags": [
					"Utilities"
				]
			},
			{
				"description": "This automation is for comparing array(list) data of context to existing lists on XSOAR server. You can avoid using loop of sub-playbook.\ninputArray: the context array/list data\nlistName: the XSOAR system list",
				"name": "isArrayItemInList",
				"tags": [
					"Condition"
				]
			},
			{
				"description": "This transformer convert the Epoch or UTC timestamp to desired stamp",
				"name": "ConvertUTCEpochTimeToTimeStamp",
				"tags": [
					"transformer",
					"date"
				]
			},
			{
				"description": "Tests whether left side version number is less than right side version number.\n\nVersion numbers need to have at least a major and minor version component to be considered valid. E.g. 1.0",
				"name": "VersionLessThan",
				"tags": [
					"Utilities",
					"filter"
				]
			},
			{
				"description": "Advanced Filter. It enables you to make filters with complex conditions.",
				"name": "ExtFilter",
				"tags": [
					"transformer",
					"general",
					"entirelist"
				]
			},
			{
				"description": "Returns indicator custom fields into the context by the given query.",
				"name": "GetIndicatorCustomFieldsByQuery",
				"tags": []
			},
			{
				"description": "An Automation Script to return subnet broadcast address",
				"name": "IPCalcReturnSubnetBroadcastAddress",
				"tags": []
			},
			{
				"description": "An automation script to return address in binary format",
				"name": "IPCalcReturnAddressBinary",
				"tags": []
			},
			{
				"description": "Display warroom entries in a dynamic section which are tagged with 'report'",
				"name": "DisplayTaggedWarroomEntries",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Converts Markdown to HTML.",
				"name": "MarkdownToHTML",
				"tags": [
					"markdown",
					"HTML"
				]
			},
			{
				"description": "Retrieves all Playbook (and Sub-Playbook) Names, Integrations, Automation Scripts, Commands not using-brand, and lists for a provided Playbook name. Also accepts inputs for incident types, layouts, incident fields, indicator fields, jobs, mappers, and pre-process rules connected to the parent playbook. Results can be output as an HTML or Markdown list.",
				"name": "RetrievePlaybookDependencies",
				"tags": []
			},
			{
				"description": "Generate a list of random dictionaries, using Faker Python library. For more information, please visit https://faker.readthedocs.io",
				"name": "GenerateRandomJSON",
				"tags": []
			},
			{
				"description": "Run JQ Query. \n\nCheck these links:\n- https://stedolan.github.io/jq/manual/#Invokingjq\n- https://jqplay.org/",
				"name": "jq",
				"tags": [
					"transformer"
				]
			},
			{
				"description": "Purpose: This automation will produce docx file detailing the tasks in the given playbook. It can produce a table or paragraph format of the report.\n\nAuthor: Mahmood Azmat\n\nInput1: Name of the playbook (Mandatory)\nInput2: Format type needed. Table or Paragraph. Paragraph is default.\nInput3: Name of the docx file that will be produced. Give the full name including the \".docx\" extension. (Mandatory)\n\nRequirements: This automation requires \"Core REST API\" integration enabled and connected to the XSOAR itself. Automation uses it to read the objects of the playbook.",
				"name": "CreatePlbkDoc",
				"tags": [
					"General",
					"Utility"
				]
			},
			{
				"description": "Display the indicator context object in markdown format in a dynamic section layout",
				"name": "DisplayIndicatorReputationContent",
				"tags": [
					"dynamic-indicator-section"
				]
			},
			{
				"description": "Will create an array object in context from a given string input , allowing for duplicate values to be retained\n\nOutput is to ContextKey.array as JSON does not permit duplicate key names\n\ne.g., ContextKey.array.value1, ContextKey.array.value2, ContextKey.array.value3, etc.",
				"name": "CreateArrayWithDuplicates",
				"tags": [
					"Utility"
				]
			},
			{
				"description": "This is a pre-processing script that is used to create the attachments of incoming incidents in an existing incident, then drop the incoming incident.\nIt should be configured as a pre-processing rule, and the logic for finding the right incident should be added to the code manually.\nThe automation collects the paths and names of the attachments of the incoming incident and passes it to the \"CreateFileFromPathObject\" automation that is being executed on the existing incident",
				"name": "GetFilePathPreProcessing",
				"tags": [
					"preProcessing"
				]
			},
			{
				"description": "Defangs IP, Mail and URL address to prevent them from being recognized.",
				"name": "Defang",
				"tags": [
					"Utilities"
				]
			},
			{
				"description": "This transformer will get list of array elements by providing keyword. List data format\n[\n    {\n    \"folder\": \"abc\",\n    \"username\": \"test\"\n    },\n    {\n    \"folder\": \"def\",\n    \"username\": \"test123\"\n    },\n    {\n    \"folder\": \"ghi\",\n    \"username\": \"admin\"\n    }\n]",
				"name": "GetListDatawithKeyword",
				"tags": [
					"general",
					"transformer"
				]
			},
			{
				"description": "Script to create a perceptual hash of an image (or file) stored in the incident. Wrapps https://pypi.org/project/ImageHash/",
				"name": "PHash",
				"tags": []
			},
			{
				"description": "Use this automation to create an EDL instance on XSOAR.",
				"name": "CreateEDLInstance",
				"tags": []
			},
			{
				"description": "Use this automation to check for validity of your SSL certificate and get the time until expiration.",
				"name": "SSLVerifier",
				"tags": []
			},
			{
				"description": "Creates external ask links for the `Ask` task with the given name.",
				"name": "GetAskLinks",
				"tags": []
			},
			{
				"description": "Redactindicator can help you to defang/redact any kind of indicator (IPv4, url, domain and email), IP addresses will be in the dotted representation like 8.8.8[.].8, all domains will be example[.]com. Optional you can define a \"searchkey\" which does not to be case sensitive, which will be replaced as \u003cREDACTED\u003e.",
				"name": "redactindicator",
				"tags": [
					"transformer"
				]
			},
			{
				"description": "Gets the minimum value from list\ne.g. [\"25\", \"10\", \"25\"] =\u003e \"10\"\n ",
				"name": "MinList",
				"tags": [
					"transformer",
					"number",
					"entirelist"
				]
			},
			{
				"description": "This transformer will take in a value and transform it based on multiple regular expressions defined in a JSON dictionary structure. The key:value pair of the JSON dictionary should be:\n\n\"desired outcome\": \"regex to match\"\n\nFor example:\n\n{\n    \"Match 1\": \".*match 1.*\",\n    \"Match 2\": \".*match 2.*\",\n    \"Catch all\": \".*\"\n}\n\nThe transformer will match in order of dictionary entries.",
				"name": "MapRegex",
				"tags": [
					"transformer",
					"string"
				]
			}
		],
		"classifier": null,
		"dashboard": null,
		"genericfield": null,
		"generictype": null,
		"incidentfield": null,
		"incidenttype": null,
		"indicatorfield": null,
		"integration": null,
		"layoutscontainer": null,
		"list": null,
		"playbook": null,
		"report": null,
		"reputation": null,
		"widget": null,
		"wizard": null
	},
	"currentVersion": "1.3.6",
	"definitionId": "",
	"dependencies": {
		"Base": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.38.0",
			"name": "Base"
		},
		"CommonScripts": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.17.0",
			"name": "Common Scripts"
		},
		"DemistoRESTAPI": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.3.63",
			"name": "Cortex REST API"
		}
	},
	"deprecated": false,
	"description": "A pack that contains community scripts",
	"disabledMonthly": false,
	"downloads": 2223,
	"eulaLink": "https://github.com/demisto/content/blob/master/LICENSE",
	"fromServerVersion": "5.0.0",
	"general": [
		"generalFieldFree"
	],
	"id": "CommunityCommonScripts",
	"installMessage": "",
	"integrations": [
		{
			"imagePath": "content/packs/DemistoRESTAPI/CoreRESTAPI_image.png",
			"name": "Core REST API"
		},
		{
			"imagePath": "content/packs/DemistoRESTAPI/DemistoRESTAPI_image.png",
			"name": "Demisto REST API (Deprecated)"
		}
	],
	"itemVersion": "1.3.6",
	"keywords": [
		"scripts",
		"community",
		"contributors",
		"automation"
	],
	"legacy": true,
	"name": "Community Common Scripts",
	"packID": "CommunityCommonScripts",
	"packName": "",
	"premium": false,
	"previewOnly": false,
	"price": 0,
	"propagationLabels": [
		"all"
	],
	"rawKeywords": null,
	"rawTags": null,
	"rawUseCases": null,
	"readme": "\n### Pack Contributors:\n\n---\n - Mandar Naik\n - nikstuckenbrock\n - Lizz Boice\n\nContributions are welcome and appreciated. For more info, visit our [Contribution Guide](https://xsoar.pan.dev/docs/contributing/contributing).",
	"searchRank": 0,
	"serverMaxVersion": "",
	"serverMinVersion": "5.0.0",
	"support": "community",
	"supportDetails": {
		"email": "",
		"url": "https://live.paloaltonetworks.com/t5/cortex-xsoar-discussions/bd-p/Cortex_XSOAR_Discussions"
	},
	"tags": [
		"Filter",
		"Transformer"
	],
	"toServerVersion": "",
	"updated": "2024-12-04T10:36:56Z",
	"useCases": [],
	"version": -1,
	"versionInfo": "1748140",
	"videos": []
}