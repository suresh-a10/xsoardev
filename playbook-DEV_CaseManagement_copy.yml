contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
id: 57e18730-02a7-4e1b-8bcf-ac0438c2ca3c
inputs:
- description: ""
  key: Incident Phase
  playbookInputQuery: null
  required: false
  value:
    simple: ${incident.investigationstage}
name: DEV/CaseManagement_copy
outputs: []
sourceplaybookid: 20a1b6c1-baca-4322-8bbd-51833dd76314
starttaskid: "0"
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: fbb9f506-c9a6-4d76-8887-0e5b804c3644
      iscommand: false
      name: ""
      version: -1
    taskid: fbb9f506-c9a6-4d76-8887-0e5b804c3644
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "9"
    note: false
    quietmode: 0
    scriptarguments:
      Ids:
        simple: shapatil
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: username
      PollingCommandName:
        simple: getUserByUsername
      Timeout:
        simple: "10"
      dt:
        simple: UserByUsername(val.name!='sha').username
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      id: f78e13f3-ef33-488e-8e17-a86fa1af641b
      iscommand: false
      name: GenericPolling
      playbookId: GenericPolling
      type: playbook
      version: -1
    taskid: f78e13f3-ef33-488e-8e17-a86fa1af641b
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 50,
          "y": 265
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    scriptarguments:
      value:
        simple: Success
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Prints text to war room (Markdown supported)
      id: 1d93e15d-3ceb-4417-8508-a8fc1037cc00
      iscommand: false
      name: Print
      script: Print
      type: regular
      version: -1
    taskid: 1d93e15d-3ceb-4417-8508-a8fc1037cc00
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 450
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 495,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
