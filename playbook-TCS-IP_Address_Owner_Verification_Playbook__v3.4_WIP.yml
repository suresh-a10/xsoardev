contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
id: 8de01856-bd27-4ed8-8038-375bede9a054
inputs:
- description: ""
  key: IP Address
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: IP
      root: ExtractedIndicators
name: TCS-IP Address Owner Verification_Playbook  v3.4_WIP
outputs: []
sourceplaybookid: 10a892d4-e4b5-4b5e-80ea-dcaccb53541a
starttaskid: "0"
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 173543fe-08b6-46bd-82d9-565ebb662120
      iscommand: false
      name: ""
      version: -1
    taskid: 173543fe-08b6-46bd-82d9-565ebb662120
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": -210,
          "y": -100
        }
      }
  "2":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ExtractedIndicators.IP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "48"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 84caf933-4eeb-4100-8a47-d4a16875a4e0
      iscommand: false
      name: Are there any IP addresses ?
      type: condition
      version: -1
    taskid: 84caf933-4eeb-4100-8a47-d4a16875a4e0
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -210,
          "y": 120
        }
      }
  "3":
    continueonerror: true
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "13"
      "yes":
      - "7"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Microsoft Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 11d94438-91f8-40e0-894c-4f073aa4f6b6
      iscommand: false
      name: Does IP Address Belong To Microsoft ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 11d94438-91f8-40e0-894c-4f073aa4f6b6
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 20,
          "y": 380
        }
      }
  "4":
    continueonerrortype: ""
    id: "4"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Microsoft IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score report.\n\nMicrosoft:\n\n${Address.MIP} \n\n\nRegards,\nCSOC
          CyberAutoBot"
      subject:
        simple: Found Microsoft IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 68f89c03-e2c3-4d32-8b40-f2f7fc65a5b2
      iscommand: true
      name: Send Email Notification That Microsoft IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 68f89c03-e2c3-4d32-8b40-f2f7fc65a5b2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1500
        }
      }
  "7":
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "40"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.MIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: fd2668f9-3ecb-4010-8692-a0d9263e9483
      iscommand: false
      name: Set Microsoft IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: fd2668f9-3ecb-4010-8692-a0d9263e9483
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 20,
          "y": 580
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "57"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address1.IP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "no"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 18764ceb-d7fe-4b64-8937-918d49866d08
      iscommand: false
      name: Set Output into Context
      script: Set
      type: regular
      version: -1
    taskid: 18764ceb-d7fe-4b64-8937-918d49866d08
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 490,
          "y": 570
        }
      }
  "11":
    continueonerror: true
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "3"
      "no":
      - "10"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Google Public IP Addresses},${lists.Microsoft Public IP Addresses},${lists.TCS
          Public IP Addresses},${lists.MasterIOC_IP Address},${lists.ZscalerIPAddresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 3c1b9c9f-918d-4f83-8eb1-aa1045cfda31
      iscommand: false
      name: Does IP Address Belong To Microsoft, Google, Zscaler, Master IOC or TCS
        ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 3c1b9c9f-918d-4f83-8eb1-aa1045cfda31
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 490,
          "y": 380
        }
      }
  "12":
    continueonerror: true
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "34"
      - "65"
      "yes":
      - "16"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.TCS Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 41ec4b13-8f4d-47d8-85a3-d91545356c96
      iscommand: false
      name: Does IP Address Belong To TCS ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 41ec4b13-8f4d-47d8-85a3-d91545356c96
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -890,
          "y": 380
        }
      }
  "13":
    continueonerror: true
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "12"
      "yes":
      - "15"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Google Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 99283add-ed5f-42b7-86eb-ed34ea1bba75
      iscommand: false
      name: Does IP Address Belong To Google ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 99283add-ed5f-42b7-86eb-ed34ea1bba75
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -440,
          "y": 380
        }
      }
  "14":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "20"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 30186d54-109a-4b05-8cd4-982c6014fa98
      iscommand: false
      name: Is There a TCS IP Address ?
      type: condition
      version: -1
    taskid: 30186d54-109a-4b05-8cd4-982c6014fa98
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 240,
          "y": 1260
        }
      }
  "15":
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "41"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.GIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: cab83684-bb84-439e-8f64-274054f7ecf0
      iscommand: false
      name: Set Google IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: cab83684-bb84-439e-8f64-274054f7ecf0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -440,
          "y": 580
        }
      }
  "16":
    continueonerrortype: ""
    id: "16"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "42"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.TIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 5486fcdd-cfbe-4528-8a94-8fb54e5c14fa
      iscommand: false
      name: Set TCS IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 5486fcdd-cfbe-4528-8a94-8fb54e5c14fa
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -890,
          "y": 580
        }
      }
  "17":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "17"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "19"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d7f9f875-ee5e-4b17-8d0f-0fe0ba7fc64b
      iscommand: false
      name: Is There a Google IP Address ?
      type: condition
      version: -1
    taskid: d7f9f875-ee5e-4b17-8d0f-0fe0ba7fc64b
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1260
        }
      }
  "18":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "4"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0fa72d10-ad80-441f-8a8f-957439785b1e
      iscommand: false
      name: Is There a  Microsoft           IP Address ?
      type: condition
      version: -1
    taskid: 0fa72d10-ad80-441f-8a8f-957439785b1e
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1260
        }
      }
  "19":
    continueonerrortype: ""
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Google IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score report.\n\nGoogle:\n\n${Address.GIP}\n\n\nRegards,\nCSOC
          CyberAutoBot"
      subject:
        simple: Found Google IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 334a8e71-a85c-4315-89f8-8088992e68c9
      iscommand: true
      name: Send Email Notification That Google IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 334a8e71-a85c-4315-89f8-8088992e68c9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1500
        }
      }
  "20":
    continueonerrortype: ""
    id: "20"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found TCS IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score report.\n\nTCS:\n\n${Address.TIP} \n\n\nRegards,\nCSOC
          CyberAutoBot"
      subject:
        simple: Found TCS IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: e5c434f4-0fd4-478f-87a8-cd1ff82f7774
      iscommand: true
      name: Send Email Notification That TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: e5c434f4-0fd4-478f-87a8-cd1ff82f7774
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 240,
          "y": 1500
        }
      }
  "21":
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Microsoft and TCS IP Addresses in this file
          ${incident.attachment.name}. \nPFA Risk Score Report.\n\nMicrosoft:\n\n${Address.MIP}
          \n\nTCS:\n\n${Address.TIP}\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found Microsoft and TCS IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: ee2e203f-f218-4236-8498-e8ff7c3a01ad
      iscommand: true
      name: Send Email Notification That TCS & Microsoft IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: ee2e203f-f218-4236-8498-e8ff7c3a01ad
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1070,
          "y": 1500
        }
      }
  "22":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "30"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 00352561-876d-4386-8d22-40ecd59d9a67
      iscommand: false
      name: Is There a Google & TCS  IP Address ?
      type: condition
      version: -1
    taskid: 00352561-876d-4386-8d22-40ecd59d9a67
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 680,
          "y": 1260
        }
      }
  "23":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "31"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 6a800abc-5f65-4a59-8485-6c2184fd6a98
      iscommand: false
      name: Is There a Google & Microsoft  IP Address ?
      type: condition
      version: -1
    taskid: 6a800abc-5f65-4a59-8485-6c2184fd6a98
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1120,
          "y": 1260
        }
      }
  "24":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "24"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "32"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0dbe0f58-75a8-4a37-8983-aaea80e453e3
      iscommand: false
      name: Is There a Google, Microsoft & TCS  IP Address ?
      type: condition
      version: -1
    taskid: 0dbe0f58-75a8-4a37-8983-aaea80e453e3
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1510,
          "y": 1260
        }
      }
  "25":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "25"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "21"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 98980ba6-50a6-46a1-8594-f6f0bd0eb009
      iscommand: false
      name: Is There a Microsoft & TCS  IP Address ?
      type: condition
      version: -1
    taskid: 98980ba6-50a6-46a1-8594-f6f0bd0eb009
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1070,
          "y": 1260
        }
      }
  "30":
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found TCS and Google IP Addresses in this file
          ${incident.attachment.name}. \nPFA Risk Score report.\n\nTCS:\n\n${Address.TIP}
          \n\nGoogle:\n\n${Address.GIP}\n\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found TCS and Google IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: c1c84f92-8c0c-434d-8406-60ca6a59eba2
      iscommand: true
      name: Send Email Notification That Google & TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: c1c84f92-8c0c-434d-8406-60ca6a59eba2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 680,
          "y": 1500
        }
      }
  "31":
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Google and Microsoft IP Addresses in this
          file ${incident.attachment.name}.\nPFA Risk Score report.\n\nMicrosoft:\n\n${Address.MIP}
          \n\nGoogle:\n\n${Address.GIP}\n\nRegards,\nCSOC CyberAutoBot "
      subject:
        simple: Found Google and Microsoft IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 40faa45a-288d-4cdf-88c2-e18be3329f54
      iscommand: true
      name: Send Email Notification That Google & Microsoft IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 40faa45a-288d-4cdf-88c2-e18be3329f54
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1120,
          "y": 1500
        }
      }
  "32":
    continueonerrortype: ""
    id: "32"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Google, Microsoft and TCS  IP Addresses in
          this file ${incident.attachment.name}. \nPFA Risk Score Report.\n\nGoogle:\n\n${Address.GIP}\n\nMicrosoft:\n\n${Address.MIP}
          \n\nTCS:\n\n${Address.TIP}\n\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found Google, Microsoft and TCS  IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 4af4729e-d357-413b-841f-521a3aec8c82
      iscommand: true
      name: Send Email Notification That Google, Microsoft & TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 4af4729e-d357-413b-841f-521a3aec8c82
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1510,
          "y": 1500
        }
      }
  "33":
    continueonerrortype: ""
    id: "33"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: efa76b72-58bd-4191-8140-3eb61629face
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: efa76b72-58bd-4191-8140-3eb61629face
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1905
        }
      }
  "34":
    continueonerrortype: ""
    id: "34"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "44"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: b779ebea-7ec4-48b3-8e3f-7fc43b344a70
      iscommand: false
      name: Generate Report & Notify
      type: title
      version: -1
    taskid: b779ebea-7ec4-48b3-8e3f-7fc43b344a70
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -200,
          "y": 930
        }
      }
  "36":
    continueonerrortype: ""
    id: "36"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI did not find any customer IP Addresses in this
          file ${incident.attachment.name}\n\n\nRegards,\nCSOC CyberAutoBot "
      subject:
        simple: No Customer IP Addresses Found In This File ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 9cb60998-25b9-4ce7-8065-c25e91af5e86
      iscommand: true
      name: Send Email Notification That No Customer IP Addresses Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 9cb60998-25b9-4ce7-8065-c25e91af5e86
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1560,
          "y": 1500
        }
      }
  "40":
    continueonerrortype: ""
    id: "40"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.MIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: 45b296a4-daeb-457e-8760-ba3e9edcfcf7
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: 45b296a4-daeb-457e-8760-ba3e9edcfcf7
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 20,
          "y": 760
        }
      }
  "41":
    continueonerrortype: ""
    id: "41"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.GIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: d1eeb59c-9630-4efe-815c-c2a664860eeb
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: d1eeb59c-9630-4efe-815c-c2a664860eeb
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -440,
          "y": 760
        }
      }
  "42":
    continueonerrortype: ""
    id: "42"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
      - "65"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.TIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: c4e54d43-f851-4422-81c4-802f1ceb1e55
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: c4e54d43-f851-4422-81c4-802f1ceb1e55
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -890,
          "y": 760
        }
      }
  "43":
    continueonerrortype: ""
    id: "43"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "24"
      - "25"
      - "18"
      - "17"
      - "14"
      - "22"
      - "23"
    note: false
    quietmode: 0
    scriptarguments:
      csvArray:
        simple: ${RecordedFuture.IP}
      fileName:
        simple: Risk Score.csv
      headers:
        simple: name,riskScore
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Export given array to csv file
      id: 2c3992b2-29e2-4407-8de0-e2453e7e70b8
      iscommand: false
      name: Generate CSV Report
      script: ExportToCSV
      type: regular
      version: -1
    taskid: 2c3992b2-29e2-4407-8de0-e2453e7e70b8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1080
        }
      }
  "44":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: RecordedFuture
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "44"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "68"
      "yes":
      - "43"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 8fdf709b-36c4-4516-8ee2-a8f2d1c01203
      iscommand: false
      name: Is There a Report To Generate
      type: condition
      version: -1
    taskid: 8fdf709b-36c4-4516-8ee2-a8f2d1c01203
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 250,
          "y": 1080
        }
      }
  "45":
    continueonerrortype: ""
    id: "45"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      columns:
        simple: IOC,Risk Score
      context_path:
        simple: RecordedFuture.IP
      grid_id:
        simple: recordedfutureriskscore
      keys:
        simple: name,riskScore
      overwrite:
        simple: "true"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Creates a Grid table from items or key-value pairs.
      id: e40b6b39-b974-40c3-8cf1-e3c18b714f3a
      iscommand: false
      name: Populate The Risk Grid
      script: SetGridField
      type: regular
      version: -1
    taskid: e40b6b39-b974-40c3-8cf1-e3c18b714f3a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -620,
          "y": 1050
        }
      }
  "47":
    continueonerrortype: ""
    id: "47"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: |-
          Hello Human,

          You are not on my authorized list of senders to block these IP address. Please contact Your XSOAR Support team.

          Regards,
          CSOC Cyber AutoBot
      subject:
        simple: Not Authorized To Send Mail For Blocking IP Address
      to:
        simple: ${incident.labels.Email/from}
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: a5082b93-45a8-4a7d-886d-4153ef487ceb
      iscommand: true
      name: Send Email Notification - Not Authorized User
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: a5082b93-45a8-4a7d-886d-4153ef487ceb
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2000,
          "y": 1500
        }
      }
  "48":
    continueonerrortype: ""
    id: "48"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "11"
      "yes":
      - "49"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        complex:
          root: inputs.InternalRange
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 6019317c-6272-4a94-85ec-1c0613bab512
      iscommand: false
      name: Are There Any Internal IP Addresses ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 6019317c-6272-4a94-85ec-1c0613bab512
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 940,
          "y": 380
        }
      }
  "49":
    continueonerrortype: ""
    id: "49"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "11"
      - "52"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: InternalAddress.IP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 709cf6ef-db8b-414b-86fd-0621166ebd13
      iscommand: false
      name: Set Internal IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 709cf6ef-db8b-414b-86fd-0621166ebd13
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 940,
          "y": 570
        }
      }
  "50":
    continueonerrortype: ""
    id: "50"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI did not find an IP Addresses in this file ${incident.attachment.name}.
          \nPlease check your attachment and send it again.\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found Google, Microsoft and TCS  IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: 0bb91724-2168-41fb-878f-960c2e5543f7
      iscommand: true
      name: Send Email Notification That Google, Microsoft & TCS IP Address Found
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: 0bb91724-2168-41fb-878f-960c2e5543f7
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -3310,
          "y": 1530
        }
      }
  "51":
    continueonerrortype: ""
    id: "51"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address2.IP
      value:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Address1.IP
              operator: notIn
              right:
                iscontext: true
                value:
                  simple: InternalAddress.IP
          root: Address1.IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 16b9cf15-66a2-4910-81a3-2512a6a38a97
      iscommand: false
      name: Set Non Customer IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 16b9cf15-66a2-4910-81a3-2512a6a38a97
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 490,
          "y": 915
        }
      }
  "52":
    continueonerrortype: ""
    id: "52"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI found the following  internal IP addresses in this
          list ${incident.attachment.name}. Will be excluding them from my tasks.\n\nInternal
          IP Address: \n\n${InternalAddress.IP}\n\n\nRegards,\nCSOC Cyber AutoBot"
      subject:
        simple: Found Internal IP Addresses In This List ${incident.attachment.name}
      to:
        simple: ${incident.labels.Email/from}
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 1834700f-875b-4c63-8e86-46f6e63983b8
      iscommand: true
      name: Send Email Notification - Internal IP Addresses Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 1834700f-875b-4c63-8e86-46f6e63983b8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2000,
          "y": 1260
        }
      }
  "53":
    continueonerrortype: ""
    id: "53"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "34"
      "yes":
      - "54"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.MasterIOC_IP Address}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 45806b82-3eaf-4eac-8b35-f194c51287b3
      iscommand: false
      name: Are There Any IP Addresses From Master IOC?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 45806b82-3eaf-4eac-8b35-f194c51287b3
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1880,
          "y": 415
        }
      }
  "54":
    continueonerrortype: ""
    id: "54"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
      - "59"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.MasterIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: d8ab9593-2f45-4832-8bf5-f763b7571297
      iscommand: false
      name: Set Master IOC IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: d8ab9593-2f45-4832-8bf5-f763b7571297
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1890,
          "y": 615
        }
      }
  "56":
    continueonerrortype: ""
    id: "56"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI found that below IP Addresses from the file ${incident.attachment.name}
          are already in the Master IOC list. I will not be performing any action
          on these IOCs.\n\nIP Address:\n\n${Address.MasterIP} \n\n\n\nRegards,\nCSOC
          CyberAutoBot "
      subject:
        simple: 'Found IP Address In This File ${incident.attachment.name} Already
          In Master IOC List '
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: e76c4454-7aab-4fa6-8f58-18930b0a1569
      iscommand: true
      name: Send Email Notification Found IP Address In Master IOC
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: e76c4454-7aab-4fa6-8f58-18930b0a1569
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2430,
          "y": 1500
        }
      }
  "57":
    continueonerrortype: ""
    id: "57"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "no":
      - "51"
      "yes":
      - "58"
    note: false
    quietmode: 0
    scriptarguments:
      left:
        complex:
          accessor: IP
          root: Address1
      right:
        complex:
          accessor: IP
          root: InternalAddress
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      id: eada9714-a42c-428b-8372-a63d1ea18287
      iscommand: false
      name: AreValuesEqual
      script: AreValuesEqual
      type: condition
      version: -1
    taskid: eada9714-a42c-428b-8372-a63d1ea18287
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 490,
          "y": 740
        }
      }
  "58":
    continueonerrortype: ""
    id: "58"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI found that all IP Addresses in the file ${incident.attachment.name}
          are from the private IP Address Range. I will not be performing any action
          on these IOCs.\n\n\nRegards,\nCSOC CyberAutoBot "
      subject:
        simple: Found All IP Address In This File ${incident.attachment.name} Are
          From The Private IP Address Range
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: d930d339-25d1-4e74-8520-d7a33608b0f4
      iscommand: true
      name: Send Email Notification All IP Address In The List Are From Private IP
        Address Range
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: d930d339-25d1-4e74-8520-d7a33608b0f4
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2860,
          "y": 1260
        }
      }
  "59":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "59"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "56"
      "yes":
      - "33"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 19221233-1cc2-485e-8aa8-4158ffde641b
      iscommand: false
      name: Is This Request From CSO?
      type: condition
      version: -1
    taskid: 19221233-1cc2-485e-8aa8-4158ffde641b
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 2430,
          "y": 1260
        }
      }
  "60":
    continueonerror: true
    continueonerrortype: ""
    id: "60"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "yes":
      - "61"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Microsoft Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: f104a6e1-0fc5-476d-8d53-004bf72345df
      iscommand: false
      name: Does IP Address Belong To Zscaler ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: f104a6e1-0fc5-476d-8d53-004bf72345df
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1450,
          "y": 320
        }
      }
  "61":
    continueonerrortype: ""
    id: "61"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "62"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.ZIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 461968f6-e97b-4293-85c5-216755c62e52
      iscommand: false
      name: Set Zscaler IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 461968f6-e97b-4293-85c5-216755c62e52
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1450,
          "y": 520
        }
      }
  "62":
    continueonerrortype: ""
    id: "62"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.ZIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: 8ec5b5be-6758-43e6-89df-2d409cad5146
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: 8ec5b5be-6758-43e6-89df-2d409cad5146
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1450,
          "y": 700
        }
      }
  "63":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      - - left:
            iscontext: true
            value:
              simple: Address.ZIP
          operator: isNotExists
      label: "yes"
    continueonerrortype: ""
    id: "63"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "yes":
      - "64"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 5e8828e0-86fd-4e05-85f0-8150162b0422
      iscommand: false
      name: Is There a Zscaler IP Address ?
      type: condition
      version: -1
    taskid: 5e8828e0-86fd-4e05-85f0-8150162b0422
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 3300,
          "y": 1275
        }
      }
  "64":
    continueonerrortype: ""
    id: "64"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found TCS and Google IP Addresses in this file
          ${incident.attachment.name}. \nPFA Risk Score report.\n\nTCS:\n\n${Address.TIP}
          \n\nGoogle:\n\n${Address.GIP}\n\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found TCS and Google IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 16d23c4e-878d-4911-89b5-4cb2ce739eed
      iscommand: true
      name: Send Email Notification That Zscaler IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 16d23c4e-878d-4911-89b5-4cb2ce739eed
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 3300,
          "y": 1500
        }
      }
  "65":
    continueonerror: true
    continueonerrortype: ""
    id: "65"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "53"
      "yes":
      - "66"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.ZscalerIPAddresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: d06ae8aa-4d2c-48d0-8c49-1774b4e13590
      iscommand: false
      name: Does IP Address Belong To Zscaler?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: d06ae8aa-4d2c-48d0-8c49-1774b4e13590
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1400,
          "y": 390
        }
      }
  "66":
    continueonerrortype: ""
    id: "66"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "67"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.ZIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 20de3b36-f74e-412c-8329-35bc4f4d7aca
      iscommand: false
      name: Set Zscaler IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 20de3b36-f74e-412c-8329-35bc4f4d7aca
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1400,
          "y": 545
        }
      }
  "67":
    continueonerrortype: ""
    id: "67"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "53"
      - "34"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.ZIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: 91cd436d-2b8a-46d3-8320-b99ff933314f
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: 91cd436d-2b8a-46d3-8320-b99ff933314f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1400,
          "y": 760
        }
      }
  "68":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.ZIP
          operator: isNotExists
      label: "yes"
    continueonerrortype: ""
    id: "68"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "36"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 230a3016-4733-47a4-83bd-d459e764837f
      iscommand: false
      name: Verify There Are No Customer IP Addresses In The List ?
      type: condition
      version: -1
    taskid: 230a3016-4733-47a4-83bd-d459e764837f
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1560,
          "y": 1260
        }
      }
  "69":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "69"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "70"
      "yes":
      - "73"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 23b5a5d6-6706-4e15-81fa-4c735a3ef08e
      iscommand: false
      name: Are there Google Ips?
      type: condition
      version: -1
    taskid: 23b5a5d6-6706-4e15-81fa-4c735a3ef08e
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1140,
          "y": 2080
        }
      }
  "70":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "70"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "71"
      "yes":
      - "74"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: e8f90190-9894-44ba-86bd-63e337afe8fe
      iscommand: false
      name: Are there Microsoft Ips?
      type: condition
      version: -1
    taskid: e8f90190-9894-44ba-86bd-63e337afe8fe
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1140,
          "y": 2455
        }
      }
  "71":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.ZIP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "71"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "72"
      "yes":
      - "75"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 1bc40450-fc5c-42c3-8bde-7852642d3689
      iscommand: false
      name: Are there ZScaler Ips?
      type: condition
      version: -1
    taskid: 1bc40450-fc5c-42c3-8bde-7852642d3689
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1130,
          "y": 2840
        }
      }
  "72":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "72"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "77"
      "yes":
      - "76"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 3a969ad8-bb4b-4a92-82dd-f622e7af3767
      iscommand: false
      name: Are there TCS Ips?
      type: condition
      version: -1
    taskid: 3a969ad8-bb4b-4a92-82dd-f622e7af3767
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1130,
          "y": 3405
        }
      }
  "73":
    continueonerrortype: ""
    id: "73"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "80"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Mail
      value:
        simple: Google
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 9242fd6f-bdb6-40ac-8888-e9e93440e45d
      iscommand: false
      name: Add Google Ips msg
      script: Set
      type: regular
      version: -1
    taskid: 9242fd6f-bdb6-40ac-8888-e9e93440e45d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2110,
          "y": 2080
        }
      }
  "74":
    continueonerrortype: ""
    id: "74"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "81"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Mail
      value:
        simple: Microsoft
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: d3cc0f8e-8a25-4390-8b0b-ef8ca2401f47
      iscommand: false
      name: Add Microsoft Ips msg
      script: Set
      type: regular
      version: -1
    taskid: d3cc0f8e-8a25-4390-8b0b-ef8ca2401f47
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2180,
          "y": 2670
        }
      }
  "75":
    continueonerrortype: ""
    id: "75"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "82"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Mail
      value:
        simple: ZScaler
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: edb41c7d-3f04-4738-879a-dbae8baca146
      iscommand: false
      name: Add Zscaler Ips msg
      script: Set
      type: regular
      version: -1
    taskid: edb41c7d-3f04-4738-879a-dbae8baca146
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2190,
          "y": 3040
        }
      }
  "76":
    continueonerrortype: ""
    id: "76"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "83"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Mail
      value:
        simple: TCS
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 6bfcb2b4-a9dd-48e5-89c2-b3c129ea6c5c
      iscommand: false
      name: Add TCS Ips msg
      script: Set
      type: regular
      version: -1
    taskid: 6bfcb2b4-a9dd-48e5-89c2-b3c129ea6c5c
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2240,
          "y": 3450
        }
      }
  "77":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Mail
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "77"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "79"
      "yes":
      - "78"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: f3a9a121-0368-41af-84f0-93e4f0658fed
      iscommand: false
      name: Is Mail Context Defined?
      type: condition
      version: -1
    taskid: f3a9a121-0368-41af-84f0-93e4f0658fed
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1680,
          "y": 3620
        }
      }
  "78":
    continueonerrortype: ""
    id: "78"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "79"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found ${Mail}  IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score Report.\n\n${Output}\n\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found ${Mail}  IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 1d67d580-ecea-4363-8f1e-e2b7e9def301
      iscommand: true
      name: Send Email Notification That Google, Microsoft & TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 1d67d580-ecea-4363-8f1e-e2b7e9def301
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1150,
          "y": 3800
        }
      }
  "79":
    continueonerrortype: ""
    id: "79"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 27ec101c-db57-45e4-80fe-128098c437c3
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 27ec101c-db57-45e4-80fe-128098c437c3
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -1660,
          "y": 4010
        }
      }
  "80":
    continueonerrortype: ""
    id: "80"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "70"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Output
      value:
        simple: 'Google IPs: ${Address.GIP} '
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 797dd77e-c95f-43ae-8037-2eaa696741b2
      iscommand: false
      name: Add Google Ips msg
      script: Set
      type: regular
      version: -1
    taskid: 797dd77e-c95f-43ae-8037-2eaa696741b2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2110,
          "y": 2240
        }
      }
  "81":
    continueonerrortype: ""
    id: "81"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "71"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Output
      value:
        simple: 'Microsoft IPs: ${Address.MIP} '
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 870fb07b-a6bb-43b6-899c-7cbc88425ca1
      iscommand: false
      name: Add Microsoft Ips msg
      script: Set
      type: regular
      version: -1
    taskid: 870fb07b-a6bb-43b6-899c-7cbc88425ca1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2180,
          "y": 2850
        }
      }
  "82":
    continueonerrortype: ""
    id: "82"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "72"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Output
      value:
        simple: 'ZScaler  IPs: ${Address.ZIP} '
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: a5400514-3d2c-4c4c-8678-6b566f173236
      iscommand: false
      name: Add Zscaler Ips msg
      script: Set
      type: regular
      version: -1
    taskid: a5400514-3d2c-4c4c-8678-6b566f173236
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2190,
          "y": 3190
        }
      }
  "83":
    continueonerrortype: ""
    id: "83"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "77"
    note: false
    quietmode: 0
    scriptarguments:
      append:
        simple: "true"
      key:
        simple: Output
      value:
        simple: 'TCS  IPs: ${Address.TIP} '
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 1ba20797-0c1f-40da-8733-9dd59060e7cd
      iscommand: false
      name: Add TCS Ips msg
      script: Set
      type: regular
      version: -1
    taskid: 1ba20797-0c1f-40da-8733-9dd59060e7cd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2240,
          "y": 3630
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 4175,
        "width": 6990,
        "x": -3310,
        "y": -100
      }
    }
  }
