contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.1.20
    packID: AWS-Enrichment-Remediation
    packName: AWS Enrichment and Remediation
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: Replace current security groups with limited access security groups.
id: AWS - Security Group Remediation
inputs:
- description: This is the VPC ID used for Security group creation.
  key: VpcID
  playbookInputQuery: null
  required: true
  value: {}
- description: This is the Network interface of Ec2 instance.
  key: NicID
  playbookInputQuery: null
  required: true
  value: {}
- description: 'The security group that will used for remediating internet exposures. '
  key: RemediationRule
  playbookInputQuery: null
  required: true
  value:
    simple: Remediation-Security-Group
name: AWS - Security Group Remediation
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "31"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 887ec5b3-a4d7-47fc-82b0-701e072c0deb
      iscommand: false
      name: ""
      version: -1
    taskid: 887ec5b3-a4d7-47fc-82b0-701e072c0deb
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 420,
          "y": -470
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 978b630a-7e00-443b-83f3-5e683144863a
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 978b630a-7e00-443b-83f3-5e683144863a
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 100,
          "y": 2510
        }
      }
  "6":
    continueonerror: true
    continueonerrortype: ""
    id: "6"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "20"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 172.16.0.0/12
      fromPort:
        simple: ${Ssh}
      groupId:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Ssh}
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: e2474001-6d68-4de4-8fbb-4e034f2c22fb
      iscommand: true
      name: Add a security group ingress rule (IP 172.16.0.0/12 & port 22) permitting
        specific traffic
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: e2474001-6d68-4de4-8fbb-4e034f2c22fb
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 970,
          "y": 1480
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "30"
    note: false
    quietmode: 0
    scriptarguments:
      description:
        simple: This is a remediation security group that has rules for basic access
          to the instance.
      groupName:
        complex:
          root: inputs.RemediationRule
      vpcId:
        complex:
          root: inputs.VpcID
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Creates a security group.
      id: 63f1d8a3-6d9d-48ab-8879-f946a51fd7b6
      iscommand: true
      name: Create remediation security group
      script: AWS - EC2|||aws-ec2-create-security-group
      type: regular
      version: -1
    taskid: 63f1d8a3-6d9d-48ab-8879-f946a51fd7b6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 720
        }
      }
  "13":
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      groups:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
          transformers:
          - operator: uniq
      networkInterfaceId:
        complex:
          root: inputs.NicID
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Modifies the specified network interface attribute. You can specify
        only one attribute at a time.
      id: 509778e3-a0cb-47c4-8748-ea8c6bf2d2ca
      iscommand: true
      name: Replace security group
      script: AWS - EC2|||aws-ec2-modify-network-interface-attribute
      type: regular
      version: -1
    taskid: 509778e3-a0cb-47c4-8748-ea8c6bf2d2ca
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 420,
          "y": 2190
        }
      }
  "14":
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "10"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: b144a4a4-1169-4671-83ee-a0ab05fc6e96
      iscommand: false
      name: Create remediation security group
      type: title
      version: -1
    taskid: b144a4a4-1169-4671-83ee-a0ab05fc6e96
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 570
        }
      }
  "17":
    continueonerror: true
    continueonerrortype: ""
    id: "17"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "20"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 10.0.0.0/8
      fromPort:
        simple: ${Ssh}
      groupId:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Ssh}
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: 63f00e72-9977-44d2-8257-d7c620cad056
      iscommand: true
      name: Add a security group ingress rule (IP 10.0.0.0/8 & port 22) permitting
        specific traffic
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 63f00e72-9977-44d2-8257-d7c620cad056
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1480
        }
      }
  "18":
    continueonerror: true
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "20"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 192.168.0.0/16
      fromPort:
        simple: ${Ssh}
      groupId:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Ssh}
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: 2ff724c1-0404-47d9-8f94-105424401d30
      iscommand: true
      name: Add a security group ingress rule (IP 192.168.0.0/16 & port 22) permitting
        specific traffic
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 2ff724c1-0404-47d9-8f94-105424401d30
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1860,
          "y": 1480
        }
      }
  "19":
    continueonerrortype: ""
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "17"
      - "6"
      - "18"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: fe2a0416-ca52-4e8c-8e19-0ff32443bdf7
      iscommand: false
      name: Add port 22 ingress rules
      type: title
      version: -1
    taskid: fe2a0416-ca52-4e8c-8e19-0ff32443bdf7
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1290
        }
      }
  "20":
    continueonerrortype: ""
    id: "20"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "21"
      - "22"
      - "23"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: f524581f-cef9-473c-84ef-84ccbb69d2e4
      iscommand: false
      name: Add port 3389 ingress rules
      type: title
      version: -1
    taskid: f524581f-cef9-473c-84ef-84ccbb69d2e4
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1700
        }
      }
  "21":
    continueonerror: true
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 172.16.0.0/12
      fromPort:
        simple: ${Rdp}
      groupId:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Rdp}
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: 748699b6-df52-4522-8578-6937459791c4
      iscommand: true
      name: Add a security group ingress rule (IP 172.16.0.0/12 & port 3389) permitting
        specific traffic
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 748699b6-df52-4522-8578-6937459791c4
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 980,
          "y": 1930
        }
      }
  "22":
    continueonerror: true
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 10.0.0.0/8
      fromPort:
        simple: ${Rdp}
      groupId:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Rdp}
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: 72d63cba-f917-4738-8e8a-4cae1173eb7c
      iscommand: true
      name: Add a security group ingress rule (IP 10.0.0.0/8 & port 3389) permitting
        specific traffic
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 72d63cba-f917-4738-8e8a-4cae1173eb7c
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1930
        }
      }
  "23":
    continueonerror: true
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 192.168.0.0/16
      fromPort:
        simple: ${Rdp}
      groupId:
        complex:
          accessor: GroupId
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AWS.EC2.SecurityGroups.GroupName
              operator: isEqualString
              right:
                value:
                  simple: Remediation-Security-Group
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: ${Rdp}
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: 0193fdb8-1188-4c5e-8d93-7502a255ceba
      iscommand: true
      name: Add a security group ingress rule (IP 192.168.0.0/16 & port 3389) permitting
        specific traffic
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 0193fdb8-1188-4c5e-8d93-7502a255ceba
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1860,
          "y": 1930
        }
      }
  "24":
    continueonerrortype: ""
    id: "24"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "25"
    note: false
    quietmode: 0
    scriptarguments:
      filters:
        complex:
          root: inputs.RemediationRule
          transformers:
          - args:
              prefix:
                value:
                  simple: Name=group-name,Values=
              suffix: {}
            operator: concat
    separatecontext: false
    skipunavailable: false
    task:
      brand: AWS - EC2
      description: Checks if the remediation security group exists.
      id: 23c67c55-a182-4308-8d76-64bcdf585034
      iscommand: true
      name: Check if Remediation-Security-Group exists?
      script: AWS - EC2|||aws-ec2-describe-security-groups
      type: regular
      version: -1
    taskid: 23c67c55-a182-4308-8d76-64bcdf585034
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 420,
          "y": 55
        }
      }
  "25":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: GroupName
                root: AWS.EC2.SecurityGroups
          operator: isExists
          right:
            value: {}
      label: "yes"
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: GroupName
                root: AWS.EC2.SecurityGroups
          operator: isNotExists
      label: "no"
    continueonerrortype: ""
    id: "25"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "2"
      "no":
      - "14"
      "yes":
      - "13"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check whether the last command returned security group information
        or not.
      id: 2e8828ac-9ef8-4e71-8f0f-9bb3eacf6bd2
      iscommand: false
      name: Was there a SG named Remediation-Security-Group?
      type: condition
      version: -1
    taskid: 2e8828ac-9ef8-4e71-8f0f-9bb3eacf6bd2
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 420,
          "y": 290
        }
      }
  "26":
    continueonerrortype: ""
    id: "26"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: Ssh
      value:
        simple: "22"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a Ssh port value in context under the key you entered.
      id: 3b1adad9-3940-4a44-84a6-18fdff61c222
      iscommand: false
      name: Ssh port
      script: Set
      type: regular
      version: -1
    taskid: 3b1adad9-3940-4a44-84a6-18fdff61c222
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1170,
          "y": 1090
        }
      }
  "29":
    continueonerrortype: ""
    id: "29"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: Rdp
      value:
        simple: "3389"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a Rdp port value in context under the key you entered.
      id: 2802aff4-84de-43e1-8b44-f8384a2000f7
      iscommand: false
      name: Rdp port
      script: Set
      type: regular
      version: -1
    taskid: 2802aff4-84de-43e1-8b44-f8384a2000f7
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1640,
          "y": 1090
        }
      }
  "30":
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
      - "29"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: e1e2dd85-0e64-454b-8712-80992ef6650d
      iscommand: false
      name: Set ports in context
      type: title
      version: -1
    taskid: e1e2dd85-0e64-454b-8712-80992ef6650d
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 940
        }
      }
  "31":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: AWS - EC2
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                root: modules
          operator: isExists
          right:
            value: {}
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.VpcID
          operator: isExists
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.NicID
          operator: isExists
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.RemediationRule
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "24"
    note: false
    quietmode: 2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determines if the AWS - EC2 integration instance is configured
        and Input values are defined in order to continue with remediating security
        groups.
      id: a7163c41-3334-4605-8aa1-d8f0edb0c161
      iscommand: false
      name: Is AWS - EC2 enabled and are Input values defined?
      type: condition
      version: -1
    taskid: a7163c41-3334-4605-8aa1-d8f0edb0c161
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 420,
          "y": -290
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3045,
        "width": 2140,
        "x": 100,
        "y": -470
      }
    }
  }
