commonfields:
  id: 06c02bec-ac84-443e-8c3d-3701a07d9f9b
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.11.61265
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CD_Incidentclosure_PROD_V1_copy
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  from datetime import datetime
  import pytz
  import time
  inc_data = demisto.incidents()[0]
  #custom_fields = inc_data.get("CustomFields",{})

  #print(demisto.args())

  # closreason=demisto.args().get('closeReason')
  # closnotes = demisto.args().get('closeNotes')
  #new_time = demisto.args()['new']
  # def convert_datetime_timezone(dt, tz1, tz2):
  #     tz1 = pytz.timezone(tz1)
  #     tz2 = pytz.timezone(tz2)
  #     dt = datetime.strptime(dt,"%Y-%m-%d %H:%M:%S")
  #     dt = tz1.localize(dt)
  #     dt = dt.astimezone(tz2)
  #     dt = dt.strftime("%Y-%m-%d %H:%M:%S")
  #     dt = datetime.strptime(dt,"%Y-%m-%d %H:%M:%S")

  #     return dt

  #custom_fields = inc_data.get("CustomFields",{})

  #resolution_code = "Solved (Work Around)"
  # resolution_code = custom_fields.get("snowresolutioncode")
  # resolution_notes = custom_fields.get('cdclosednotes')
  # sys_id = custom_fields.get("snowincidentsysid")
  # onhold_reason = custom_fields.get("snowonholdreason")
  # #demisto.results("Post-Processing")
  # #snow_id = custom_fields.get("cdsnowincidentnumber")
  # #query = "number="+str(snow_id)
  # source_brand = inc_data.get("sourceBrand")
  # cd_close_reason = custom_fields.get("cdclosereason")
  # #cd_investigation_remark = custom_fields.get("cdinvestigationremark")
  # demisto.executeCommand('stopTimer',{ 'timerField':'cdresolutionsla' })

  # demisto.executeCommand("setIncident",{"cdincidentstate":"Closed"})


  #demisto.executeCommand('stopTimer',{ 'timerField':'cdresolutionsla' })
  #demisto.executeCommand("setIncident",{"cdincidentstate":"Closed"})
  snowstates= {"Yes":"Resolved"}
  new_time= demisto.args().get("stopslatime")
  #demisto.results(demisto.executeCommand("setIncident",{"snowstate":snowstates[new_time]}))
  notes = demisto.args().get('cdclosenotes')
  users = demisto.args().get('closingUserId')
  #demisto.results(demisto.args().get['cdclosereason'])
  #demisto.results(demisto.args().get('snowresolutioncode'))

  print(new_time)
  print(notes)
  print(users)

  """
  res = ""
  new_time = custom_fields.get("stopslatime")
  if new_time == 'Yes':


      # if source_brand == "ServiceNow v2" or source_brand == "ServiceNow COSTA v2":
      #     snow_id = custom_fields.get("cdsnowincidentnumber")
      #     query = "number="+str(snow_id)

      #    try:


      new = custom_fields.get("snowstate")
      print(new)
      demisto.executeCommand("closeInvestigation", {'closeNotes': inc_data.get('closeNotes'),'closeReason':inc_data.get('closeReason')})


  else:
      return_error("StopSLATime is not set to YES")
  """







scripttarget: 0
subtype: python3
tags:
- post-processing
type: python
