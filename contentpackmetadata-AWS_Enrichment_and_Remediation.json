{
	"author": "Cortex XSOAR",
	"authorImage": "content/packs/Base/Author_image.png",
	"beta": false,
	"cacheVersn": 0,
	"categories": [
		"Data Enrichment \u0026 Threat Intelligence"
	],
	"certification": "certified",
	"contentItemTypes": [
		"automation",
		"playbook"
	],
	"contentItems": {
		"automation": [
			{
				"description": "Automation to determine which interface on an EC2 instance has an over-permissive security group, determine which security groups have over-permissive rules, and replace them with a copy of the security group that has only the over-permissive portion removed. Over-permissive is defined as sensitive ports (SSH, RDP, etc) being exposed to the internet via IPv4.",
				"name": "AWSRecreateSG",
				"tags": []
			},
			{
				"description": "Determine AWS account hierarchy by looking up parent objects until the organization level is reached.",
				"name": "AWSAccountHierarchy",
				"tags": []
			}
		],
		"classifier": null,
		"dashboard": null,
		"genericfield": null,
		"generictype": null,
		"incidentfield": null,
		"incidenttype": null,
		"indicatorfield": null,
		"integration": null,
		"layoutscontainer": null,
		"list": null,
		"playbook": [
			{
				"description": "Replace current security groups with limited access security groups.",
				"name": "AWS - Security Group Remediation"
			},
			{
				"description": "The playbook sends a HTTP get response to the hostname and validates if there is missing bucket information. ",
				"name": "AWS - Unclaimed S3 Bucket Validation"
			},
			{
				"description": "This playbook automates the removal of an AWS Lambda function and its associated resources used for managing resources within an Amazon EKS cluster. It ensures all related roles, policies, and security configurations are properly detached and deleted.\n\n### Resource Detachment and Deletion\n\n- **Get the Lambda Role**: Retrieve the IAM role associated with the Lambda function.\n- **Detach Policy from Lambda Role**: Remove the policy attached to the Lambda role.\n- **Delete IAM Role**: Delete the IAM role that was used for the Lambda function.\n- **Delete Lambda Policy**: Remove the policy specifically created for the Lambda function.\n- **Delete Security Group**: Delete the security group that was managing the Lambda function's traffic.\n\n### Access Entry Check\n\n- **Check if Access Entry was Created**: Verify if the access entry for the EKS cluster was created.\n  - **If YES**: Proceed to delete additional resources.\n  - **If NO**: Skip the deletion of additional resources.\n\n### Additional Resource Deletion\n\n- **Delete Kubernetes Layer**: Remove the Kubernetes layer that was used by the Lambda function.\n- **Delete Lambda Function**: Delete the Lambda function itself, ensuring all related code and configurations are removed.\n\n### Resolution\n\n- **Final Cleanup**: Ensure all specified resources have been deleted successfully.\n- **Completion**: Confirm that the removal process is complete, providing a clean environment free from the previously deployed Lambda function and its configurations.\n\nThis playbook provides a comprehensive, automated approach to removing an AWS Lambda function and its related resources, ensuring all configurations and dependencies are properly managed and deleted.\n\n### Required Integration\n\n#### AWS IAM (Identity and Access Management)\n- [AWS IAM API Documentation](https://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html)\n- [Cortex XSOAR AWS IAM Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSIAM/)\n\n#### AWS EC2 (Elastic Compute Cloud)\n- [AWS EC2 API Documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Welcome.html)\n- [Cortex XSOAR AWS EC2 Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSEC2/)\n\n#### AWS Lambda\n- [AWS Lambda API Documentation](https://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html)\n- [Cortex XSOAR AWS Lambda Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSLambda/).",
				"name": "Function Removal - AWS"
			},
			{
				"description": "This playbook takes in some information about an EC2 instance (ID and public_ip) and with provided port and protocol, determines what security groups on the primary interface of an EC2 instance are over-permissive.  It uses an automation to determine what interface on an EC2 instance has an over-permissive security group on, determine which security groups have over-permissive rules and to replace them with a copy of the security group that has only the over-permissive portion removed.  Over-permissive is defined as sensitive ports (SSH, RDP, etc) being exposed to the internet via IPv4.",
				"name": "AWS - Security Group Remediation v2"
			},
			{
				"description": "Given the IP address this playbook enriches EC2 and IAM information.",
				"name": "AWS - Enrichment"
			},
			{
				"description": "## **AWS Credentials Rotation Playbook**\n\n### **Identity Remediation**\nSecure compromised accounts by taking swift action:\n- **Reset Password**: Resets the user password to halt any unauthorized access.\n\n- **Access Key Deactivation**: Deactivate any suspicious or known-compromised access keys.\n\n- **Combo Action**: In some cases, you may want to reset both the password and deactivate the access key for absolute security.\n\n### **Role Remediation**\nIf a role is suspected to be compromised:\n- **Deny Policy Implementation**: Attach a deny-all policy to the compromised role, thus preventing it from performing any further actions.\n\n- **Role Cloning**: Before outright remediation, clone the role. This ensures that you have a backup with the same permissions, making transition smoother.",
				"name": "Cloud Credentials Rotation - AWS"
			},
			{
				"description": "This playbook performs an investigation on a specific user in AWS environments, using queries and logs from AWS CloudTrail to locate the following activities performed by the user:\n- Failed login attempt\n- Suspicious activities \n- API access denied\n- Administrative user activities\n- Security rules and policies changes\n- Access keys and access token activities\n- Script-based user agent usage\n- User role changes activities\n- MFA device changes activities\n",
				"name": "AWS - User Investigation"
			},
			{
				"description": "This playbook automates the deployment of an AWS Lambda function to manage resources within an Amazon EKS cluster. It ensures that all necessary configurations are created, updated, and verified.\n\n### Setup\n\n- **Describe EKS Cluster**: Gather essential details of the EKS cluster.\n- **Create IAM Role**: Set up a new IAM role for the Lambda function.\n- **Create and Attach Policy**: Define and attach a policy to the IAM role to grant necessary permissions.\n\n### Authentication Mode Check\n\n- **Verify Authentication Mode**: Ensure the current authentication mode allows API access.\n  - **If not**: Update the cluster authentication mode to permit API access.\n\n### Access Entry Configuration\n\n- **Create Access Entry**: Establish a new access entry in the EKS cluster.\n- **Associate Access Policy**: Link the access policy with the created access entry.\n- **Update Access Entry**: Apply the latest configurations to the access entry.\n\n### VPC and Security Group Setup\n\n- **Describe VPCs**: Identify the appropriate VPC for the Lambda function.\n- **Create Security Group**: Define a security group to manage Lambda function traffic.\n- **Set Ingress Rules**: Configure ingress rules for the security group.\n\n### VPC Endpoint Creation\n\n- **Create VPC Endpoint for eks-auth**: Establish a VPC endpoint for EKS authentication.\n- **Check for Errors**: Verify if there are any errors during the creation of the VPC endpoint.\n  - **If errors**: Handle and log them.\n- **Verify VPC Endpoint Existence**: Ensure the VPC endpoint already exists.\n  - **If exists**: Proceed with the next steps.\n\n### Lambda Function Deployment\n\n- **Download Kubernetes Library**: Fetch the necessary Kubernetes library.\n- **Publish AWS Lambda Layer**: Publish a new layer version for the AWS Lambda function.\n- **Create Lambda Code**: Develop the Lambda function code.\n- **Zip Lambda Code**: Compress the Lambda function code for deployment.\n- **Create AWS Lambda Function**: Deploy the Lambda function using the zipped code.\n\n### Resolution\n\n- **Final Verification**: Ensure all operations have been successfully completed.\n- **Completion**: Confirm the deployment process is finished, ensuring robust management of EKS authentication through AWS Lambda.\n\nThis playbook provides a comprehensive, automated approach to deploying an AWS Lambda function for managing resources within an EKS cluster, efficiently handling all configurations and potential errors.\n\n### Required Integration\n\n#### AWS IAM (Identity and Access Management)\n- [AWS IAM API Documentation](https://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html)\n- [Cortex XSOAR AWS IAM Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSIAM/)\n\n#### AWS EC2 (Elastic Compute Cloud)\n- [AWS EC2 API Documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Welcome.html)\n- [Cortex XSOAR AWS EC2 Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSEC2/)\n\n#### AWS EKS (Elastic Kubernetes Service)\n- [AWS EKS API Documentation](https://docs.aws.amazon.com/eks/latest/APIReference/Welcome.html)\n- [Cortex XSOAR AWS EKS Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSEKS/)\n\n#### AWS Lambda\n- [AWS Lambda API Documentation](https://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html)\n- [Cortex XSOAR AWS Lambda Integration](https://cortex.marketplace.pan.dev/marketplace/details/AWSLambda/).",
				"name": "Function Deployment - AWS"
			},
			{
				"description": "The playbook will create the unclaimed S3 bucket.",
				"name": "AWS - Unclaimed S3 Bucket Remediation"
			},
			{
				"description": "This playbook provides response actions to AWS. The following are available for execution automatically/manually:\n - Resource remediation:\n   - Terminate the instance\n   - Stop the instance\n - Identity remediation:\n   - Delete the user\n   - Revoke the user's credentials\n- Access key remediation:\n   - Disable the access key\n   - Delete the access key\n- Block indicators.",
				"name": "Cloud Response - AWS"
			}
		],
		"report": null,
		"reputation": null,
		"widget": null,
		"wizard": null
	},
	"currentVersion": "1.1.20",
	"definitionId": "",
	"dependencies": {
		"AWS-CloudTrail": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "1.1.4",
			"name": "AWS - CloudTrail"
		},
		"AWS-EC2": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.4.11",
			"name": "AWS - EC2"
		},
		"AWS-EKS": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.0.3",
			"name": "AWS - EKS"
		},
		"AWS-IAM": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.1.64",
			"name": "AWS - IAM"
		},
		"AWS-Lambda": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.3.6",
			"name": "AWS - Lambda"
		},
		"AWS-Organizations": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.0.2",
			"name": "AWS Organizations"
		},
		"AWS-S3": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.2.25",
			"name": "AWS - S3"
		},
		"AWS_SystemManager": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.0.3",
			"name": "AWS Systems Manager"
		},
		"Base": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.34.34",
			"name": "Base"
		},
		"CommonPlaybooks": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "2.6.37",
			"name": "Common Playbooks"
		},
		"CommonScripts": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.15.49",
			"name": "Common Scripts"
		},
		"FiltersAndTransformers": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.2.76",
			"name": "Filters And Transformers"
		}
	},
	"deprecated": false,
	"description": "Playbooks using multiple AWS content packs for enrichment and remediation purposes",
	"disabledMonthly": false,
	"downloads": 481,
	"eulaLink": "https://github.com/demisto/content/blob/master/LICENSE",
	"fromServerVersion": "6.5.0",
	"general": [
		"generalFieldCertified",
		"generalFieldByCortexXSOAR",
		"generalFieldFree",
		"generalFieldSupportIncluded"
	],
	"id": "AWS-Enrichment-Remediation",
	"installMessage": "",
	"integrations": [
		{
			"imagePath": "content/packs/AWS-IAM/AWS-IAM_image.png",
			"name": "AWS - Identity and Access Management"
		},
		{
			"imagePath": "content/packs/AWS-EC2/AWS-EC2_image.png",
			"name": "AWS - EC2"
		},
		{
			"imagePath": "content/packs/AWS-S3/AWS-S3_image.png",
			"name": "AWS - S3"
		},
		{
			"imagePath": "content/packs/AWS-Lambda/AWS-Lambda_image.png",
			"name": "AWS - Lambda"
		},
		{
			"imagePath": "content/packs/AWS-CloudTrail/AWS-CloudTrail_image.png",
			"name": "AWS - CloudTrail"
		},
		{
			"imagePath": "content/packs/AWS-Organizations/AWS-Organizations_image.png",
			"name": "AWS - Organizations"
		},
		{
			"imagePath": "content/packs/AWS_SystemManager/AWS-SystemManager_image.png",
			"name": "AWS - System Manager"
		},
		{
			"imagePath": "content/packs/AWS-EKS/AWS-EKS_image.png",
			"name": "AWS-EKS"
		}
	],
	"itemVersion": "1.1.20",
	"keywords": [],
	"legacy": true,
	"name": "AWS Enrichment and Remediation",
	"packID": "AWS-Enrichment-Remediation",
	"packName": "",
	"premium": false,
	"previewOnly": false,
	"price": 0,
	"propagationLabels": [
		"all"
	],
	"rawKeywords": null,
	"rawTags": null,
	"rawUseCases": null,
	"readme": "##### What does this pack do?\n\nThe pack contains AWS playbooks that conduct enrichment and/or remediation and can use multiple other AWS content packs:\n- Enrichment: Given an IP address, see if there is an associated EC2 instance and if so pull information on the associated security group. If an SSM agent is installed on the instance, pull information from the SSM agent.\n- Remediation: Given the information collected from enrichment, replace the security group with a \"quarantine\" security group until vulnerabilities are resolved.\n- Unclaimed S3 Bucket Validation: The playbook sends a HTTP get response to the domain and validates the missing bucket information.\n- Unclaimed S3 Bucket Remediation: The playbook will create the unclaimed S3 bucket.\n\nThere are multiple AWS content packs for multiple AWS products (EC2, IAM, Route53, S3, SSM, etc.).  The intent was that users can install and use only the packs they need. However, if an AWS playbook uses multiple pack integrations (such as EC2, S3, SSM, and IAM), the integrations can't reside in one of the current packs because they include content from multiple pack integrations. This pack was created as a place to put AWS playbooks that use AWS integrations from multiple packs with a focus on enrichment and remediation.\n\n### Playbooks\n\nUsers are only able to run the playbook in v6.5.0 or higher as it requires commands to execute the task.\nThis content pack includes the following playbooks: \n- AWS - Enrichment\n- AWS - Security Group Remediation\n- AWS - Security Group Remediation v2\n- Cloud Response - AWS\n- AWS - Unclaimed S3 Bucket Validation\n- AWS - Unclaimed S3 Bucket Remediation\n\n#### AWS - Enrichment\nAWS - Enrichment playbook reports EC2 information given an IP address of an EC2 instance.\n\n![AWS - Enrichment](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWS_-_Enrichment.png)\n\n#### AWS - Security Group Remediation\nAWS - Security Group Remediation playbook replaces current security groups associated to NIC with Remediation security group.\n\n![AWS - Security Group Remediation](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWS_-_Security_Group_Remediation.png)\n\n#### AWS - Security Group Remediation v2\nThe AWS - Security Group Remediation v2 playbook more selectively determines which security groups are over-permissive, copies them and removes only the over-permissive portions.\n\n![AWS - Security Group Remediation v2](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWS_-_Security_Group_Remediation_v2.png)\n\n#### AWS - Unclaimed S3 Bucket Validation\nAWS - Unclaimed S3 Bucket Validation playbook validates the unclaimed S3 bucket details.\n\n![AWS - Unclaimed S3 Bucket Validation](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWS_-_Unclaimed_S3_Bucket_Validation.png)\n\n#### AWS - Unclaimed S3 Bucket Remediation\nAWS - Unclaimed S3 Bucket Remediation playbook creates the unclaimed S3 bucket so other vectors can't claim the bucket.\n\n![AWS - Unclaimed S3 Bucket Remediation](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWS_-_Unclaimed_S3_Bucket_Remediation.png)\n\n### Automation Scripts\n\n#### AWSRecreateSG\n\nAutomation to determine which interface on an EC2 instance has an over-permissive security group, determine which security groups have over-permissive rules, and replace them with a copy of the security group that has only the over-permissive portion removed.  Over-permissive is defined as sensitive ports (SSH, RDP, etc) being exposed to the internet via IPv4.\n\n![AWSRecreateSG](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWSRecreateSG.png)\n\n#### AWSAccountHierarchy\n\nAutomation to determine AWS account hierarchy by looking up parent objects until the organization level is reached.\n\n![AWSAccountHierarchy](https://storage.googleapis.com/marketplace-dist/content/packs/AWS-Enrichment-Remediation/readme_images/AWS_-_Enrichment.png)\n",
	"searchRank": 10,
	"serverMaxVersion": "",
	"serverMinVersion": "6.5.0",
	"support": "xsoar",
	"supportDetails": {
		"email": "",
		"url": "https://www.paloaltonetworks.com/cortex"
	},
	"tags": [],
	"toServerVersion": "",
	"updated": "2024-08-11T19:21:38Z",
	"useCases": [],
	"version": -1,
	"versionInfo": "1262174",
	"videos": []
}