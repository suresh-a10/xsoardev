args:
- description: Date time in ISO Format
  name: from
- description: Date time in ISO format
  name: to
- name: query
commonfields:
  id: 9af64b92-54bc-4650-811c-b2c0f9abeb1a
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.7.33922
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CitiOffencesReport_WIP
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  from typing import Dict, Any
  import traceback


  ''' STANDALONE FUNCTION '''





  def create_widget(res):

      # data=[]
      # for keys,values in res.items():
      #     data.append({"data":[int(values)],"groups": None,"name":keys})

      # demisto.results(json.dumps(data));
      demisto.results(res);



  ''' MAIN FUNCTION '''


  def main():
      try:
          # fromDate = demisto.args()['from']
          # toDate = demisto.args()['to']
          # query = demisto.args()['query']

          res=demisto.executeCommand("SearchIncidentsV2", {'query':"id:557539",'size':1000})[0]['Contents'][0]['Contents']['data']
          print(res)
          # res=demisto.executeCommand("SearchIncidentsV2", {'query':query,'size':1000})[0]['Contents'][0]['Contents']['data']


          # create_widget(res)
          # TODO: replace the invoked command function with yours
          #return_results(basescript_dummy_command(demisto.args()))

      except Exception as ex:

          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')





  ''' ENTRY POINT '''





  if __name__ in ('__main__', '__builtin__', 'builtins'):

      main()



scripttarget: 0
subtype: python3
tags:
- widget
- dynamic-section
type: python
