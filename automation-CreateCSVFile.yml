args:
- isArray: true
  name: APIURI
  required: true
commonfields:
  id: a48c9cd6-fabb-4567-8adb-065182891825
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CreateCSVFile
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  """Base Script for Cortex XSOAR (aka Demisto)
  This is an empty script with some basic structure according
  to the code conventions.
  MAKE SURE YOU REVIEW/REPLACE ALL THE COMMENTS MARKED AS "TODO"
  Developer Documentation: https://xsoar.pan.dev/docs/welcome
  Code Conventions: https://xsoar.pan.dev/docs/integrations/code-conventions
  Linting: https://xsoar.pan.dev/docs/integrations/linting
  """

  from typing import Dict, Any
  import traceback
  import csv


  ''' STANDALONE FUNCTION '''



  # TODO: ADD HERE THE FUNCTIONS TO INTERACT WITH YOUR PRODUCT API


  ''' COMMAND FUNCTION '''


  def create_csv_file(script_uri_data,pb_uri_list):

      final_api_endpoints=script_uri_data+pb_uri_list
      #print(final_api_endpoints)
      # opening the csv file in 'w' mode
      file = open('APIData.csv', 'w', newline ='')

      with file:
      # identifying header
          header = ['API Endpoints']
          writer = csv.DictWriter(file, fieldnames = header)

      # writing data row-wise into the csv file
          writer.writeheader()
          for uri in final_api_endpoints:
              writer.writerow({'API Endpoints':uri})



  def main():
      try:
          # TODO: replace the invoked command function with yours
          return_results(basescript_dummy_command(demisto.args()))
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags: []
type: python
