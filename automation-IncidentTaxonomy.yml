args:
- description: Incident object
  name: incident
- description: Field definition object
  name: field
comment: When you apply this script to an incident field, that incident field is hidden
  for new incidents, and it displays in edit mode.
commonfields:
  id: 6ae76372-bb96-490b-8e1e-c6410e899179
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.9.4.18682
enabled: true
engineinfo: {}
mainengineinfo: {}
name: IncidentTaxonomy
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2-

  field = demisto.args()['field']['name']

  #Below is the condition to extract the Incident Classification from a Custom Field incidentclassification and provide options based on the value of Incident Classification
  if demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Abusive Content':
      demisto.results({'hidden': False, 'options': ['Spam','Harmful Speech','Child/Sexual/Violence/...']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Malicious Code':
      demisto.results({'hidden': False, 'options': ['Virus','Worm','Trojan','Spyware','Dialler','Rootkit']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Information Gathering':
      demisto.results({'hidden': False, 'options': ['Scanning','Sniffing','Social Engineering']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Intrusion Attempts':
      demisto.results({'hidden': False, 'options': ['Exploiting known vulnerabilities','Login attempts','New attack signature']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Intrusions':
      demisto.results({'hidden': False, 'options': ['Privileged account compromise','Unprivileged account compromise','Application compromise','Bot']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Availability':
      demisto.results({'hidden': False, 'options': ['DoS','DDoS','Sabotage','Outage (no malice)']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Information Content Security':
      demisto.results({'hidden': False, 'options': ['Unauthorised access to information','Unauthorised modification of information']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Fraud':
      demisto.results({'hidden': False, 'options': ['Unauthorized use of resources','Copyright','Masquerade','Phishing']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Vulnerable':
      demisto.results({'hidden': False, 'options': ['Open for abuse']})
  elif demisto.get(demisto.incidents()[0],'CustomFields.incidentclassification') == 'Other':
      demisto.results({'hidden': False, 'options': ['All incidents which do not fit in one of the given categories should be put into this class']})
  else:
      demisto.results({'hidden': False, 'options': ['Meant for testing']})
scripttarget: 0
subtype: python3
tags:
- field-display
type: python
