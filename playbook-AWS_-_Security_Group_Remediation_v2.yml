contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.1.20
    packID: AWS-Enrichment-Remediation
    packName: AWS Enrichment and Remediation
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: This playbook takes in some information about an EC2 instance (ID and
  public_ip) and with provided port and protocol, determines what security groups
  on the primary interface of an EC2 instance are over-permissive.  It uses an automation
  to determine what interface on an EC2 instance has an over-permissive security group
  on, determine which security groups have over-permissive rules and to replace them
  with a copy of the security group that has only the over-permissive portion removed.  Over-permissive
  is defined as sensitive ports (SSH, RDP, etc) being exposed to the internet via
  IPv4.
id: AWS - Security Group Remediation v2
inputs:
- description: ID of the AWS EC2 instance.
  key: InstanceID
  playbookInputQuery: null
  required: true
  value: {}
- description: TCP/UDP port to be restricted.
  key: Port
  playbookInputQuery: null
  required: true
  value:
    complex:
      accessor: remoteport
      root: alert
- description: Protocol of the port to be restricted.
  key: Protocol
  playbookInputQuery: null
  required: true
  value: {}
- description: Public IP address of the EC2 instance.
  key: PublicIP
  playbookInputQuery: null
  required: true
  value:
    complex:
      accessor: remoteip
      root: alert
- description: Name of an AWS role to assume (should be the same for all organizations).
  key: AWSAssumeArn
  playbookInputQuery: null
  required: false
  value: {}
- description: Region where EC2 instance is present.
  key: Region
  playbookInputQuery: null
  required: false
  value: {}
name: AWS - Security Group Remediation v2
outputs:
- contextPath: remediatedFlag
  description: Output key to determine if remediation was successfully done.
  type: boolean
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "31"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 7aeccd71-8a2e-47a8-8ba0-b91bac919bf4
      iscommand: false
      name: ""
      version: -1
    taskid: 7aeccd71-8a2e-47a8-8ba0-b91bac919bf4
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 420,
          "y": -470
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 57209409-3b96-48f9-865d-61de73bd6309
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 57209409-3b96-48f9-865d-61de73bd6309
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -280,
          "y": 630
        }
      }
  "31":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: AWS - EC2
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                root: modules
          operator: isExists
          right:
            value: {}
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.InstanceID
          operator: isExists
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.Port
          operator: isExists
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.Protocol
          operator: isExists
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.PublicIP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "33"
    note: false
    quietmode: 2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determines if the AWS - EC2 integration instance is configured
        and input values are defined in order to continue with remediating security
        groups.
      id: fe8c7803-f99e-4ee6-8481-fa710b622cd7
      iscommand: false
      name: Is AWS - EC2 enabled and are input values defined?
      type: condition
      version: -1
    taskid: fe8c7803-f99e-4ee6-8481-fa710b622cd7
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 420,
          "y": -290
        }
      }
  "33":
    continueonerrortype: ""
    id: "33"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
      - "34"
    note: false
    quietmode: 0
    scriptarguments:
      assume_role:
        complex:
          root: inputs.AWSAssumeArn
      instance_id:
        complex:
          root: inputs.InstanceID
      port:
        complex:
          root: inputs.Port
      protocol:
        complex:
          root: inputs.Protocol
      public_ip:
        complex:
          root: inputs.PublicIP
      region:
        complex:
          root: inputs.Region
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Automation to determine which interface on an EC2 instance has
        an over-permissive security group, determine which security groups have over-permissive
        rules, and replace them with a copy of the security group that has only the
        over-permissive portion removed.  Over-permissive is defined as sensitive
        ports (SSH, RDP, etc) being exposed to the internet via IPv4.
      id: a1cd953f-00c5-4dc2-8f89-9d0826215aa4
      iscommand: false
      name: AWSRecreateSG
      script: AWSRecreateSG
      type: regular
      version: -1
    taskid: a1cd953f-00c5-4dc2-8f89-9d0826215aa4
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 410,
          "y": -30
        }
      }
  "34":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: awssgrecreated
          operator: isTrue
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "34"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "36"
      "yes":
      - "35"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check if AWS security group was created or not.
      id: 8aa09dbe-ef6e-49fd-8a7f-a0a272df284c
      iscommand: false
      name: Was AWS security group created?
      type: condition
      version: -1
    taskid: 8aa09dbe-ef6e-49fd-8a7f-a0a272df284c
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 410,
          "y": 185
        }
      }
  "35":
    continueonerrortype: ""
    id: "35"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: remediatedFlag
      stringify:
        simple: "false"
      value:
        simple: "true"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 165c5309-8d07-4326-870b-2700af63b0b3
      iscommand: false
      name: Set remediatedFlag to true
      script: Set
      type: regular
      version: -1
    taskid: 165c5309-8d07-4326-870b-2700af63b0b3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 410,
          "y": 410
        }
      }
  "36":
    continueonerrortype: ""
    id: "36"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: remediatedFlag
      stringify:
        simple: "false"
      value:
        simple: "false"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 512be55e-4659-402a-8d81-57ef77fc1b1d
      iscommand: false
      name: Set remediatedFlag to false
      script: Set
      type: regular
      version: -1
    taskid: 512be55e-4659-402a-8d81-57ef77fc1b1d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -30,
          "y": 410
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1165,
        "width": 1080,
        "x": -280,
        "y": -470
      }
    }
  }
