comment: Returns a list of all the users marked as away in Cortex XSOAR.
commonfields:
  id: ede1e8dc-a910-4c0b-8c32-97f84853268a
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.9.8.24399
enabled: true
engineinfo: {}
mainengineinfo: {}
name: GetAbsentUsers_Dashboard_WIP
outputs:
- contextPath: AwayUsers.id
  description: Away user ID.
  type: String
- contextPath: AwayUsers.username
  description: Away user username.
  type: String
- contextPath: AwayUsers.name
  description: Away user name.
  type: String
- contextPath: AwayUsers.phone
  description: Away user phone.
  type: String
- contextPath: AwayUsers.roles
  description: Away user roles.
  type: Unknown
- contextPath: AwayUsers.email
  description: Away user email.
  type: String
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2



  def main():
      try:
          absentusers=json.loads(demisto.executeCommand('getList', {'listName':'AbsentInCurrentShift'})[0]['Contents'])
          # absentusers={'1318949': 'Komal Lugade'}, {'1838252': 'Naeema'}
          outputs = [{"EmpID":k,"Name": v} for k, v in absentusers.items()]


          readable_output = tableToMarkdown("Absent from Shift", outputs , headers=list(outputs[0].keys()) if outputs else None)

          cmd_results = {
              'Type': entryTypes['note'],
              'ContentsFormat': formats['markdown'],
              'Contents': readable_output
          }
          return_results(cmd_results)
          # return_results(absentusers)
          # print(absentusers)
      except Exception as e:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute GetAwayUsers. Error: {str(e)}')


  ''' ENTRY POINT '''

  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()
scripttarget: 0
subtype: python3
tags:
- widget
- dynamic-section
type: python
