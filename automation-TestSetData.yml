commonfields:
  id: d6aeb0a4-ae58-4e85-81fa-eb46d734bdd0
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.14.92207
enabled: true
engineinfo: {}
mainengineinfo: {}
name: TestSetData
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2+


  from typing import Dict, Any
  import traceback



  ''' MAIN FUNCTION '''
  def is_context(key):
      return bool(demisto.get(demisto.context(),key))

  def main():
      #try:
      is_domain = is_context('ExtractedIndicators.Domain')
      is_ip= is_context('ExtractedIndicators.IP')
      is_url = is_context('ExtractedIndicators.URL')
      if is_domain:
          domain_data=demisto.get(demisto.context(),'ExtractedIndicators.Domain')
          demisto.results(demisto.executeCommand("Set", {"key":"FinalIOCs","value":domain_data,"append":True}))
      if is_ip:
          ip_data=demisto.get(demisto.context(),'ExtractedIndicators.IP')
          demisto.results(demisto.executeCommand("Set", {"key":"FinalIOCs","value":ip_data,"append":True}))

      # except Exception as ex:
      #     demisto.error(traceback.format_exc())  # print the traceback
      #     return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags: []
type: python
