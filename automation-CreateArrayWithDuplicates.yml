args:
- default: true
  defaultValue: array
  description: 'This is the array data to create array from, should be in the format
    of comma separator by default: val1,val2,val3'
  name: arrayData
- defaultValue: ','
  description: Separator to use to split arrayData, by default will be comma ',' .
  name: separator
- description: The key to place result array in context, by default will be "array".
  name: contextKey
comment: |-
  Will create an array object in context from a given string input , allowing for duplicate values to be retained

  Output is to ContextKey.array as JSON does not permit duplicate key names

  e.g., ContextKey.array.value1, ContextKey.array.value2, ContextKey.array.value3, etc.
commonfields:
  id: CreateArrayWithDuplicates
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 1.3.6
    packID: CommunityCommonScripts
    packName: Community Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.14.100715
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CreateArrayWithDuplicates
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('CreateArrayWithDuplicates', 'start', __line__())
  demisto.debug('pack name = Community Common Scripts, pack version = 1.3.6')


  data = demisto.args().get('arrayData')

  separator = demisto.args().get('separator')
  contextKey = demisto.args().get('contextKey')
  newArray = []
  results = {}

  for item in data.split(separator):
      newArray.append(item.strip())

  results['array'] = newArray

  results = CommandResults(
      outputs_prefix=contextKey,
      outputs_key_field=contextKey,
      outputs=results
  )

  return_results(results)

  register_module_line('CreateArrayWithDuplicates', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- Utility
type: python
