args:
- description: First list name to compare.
  name: list1_name
  required: true
- description: Second list name to compare.
  name: list2_name
  required: true
comment: Compares two lists.
commonfields:
  id: CompareList
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.3.6
    packID: CommunityCommonScripts
    packName: Community Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.14.100715
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CompareList
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('CompareList', 'start', __line__())
  demisto.debug('pack name = Community Common Scripts, pack version = 1.3.6')


  list1_name = demisto.args().get("list1_name")
  list2_name = demisto.args().get("list2_name")

  list1_res = demisto.executeCommand("getList", {"listName": list1_name})
  list2_res = demisto.executeCommand("getList", {"listName": list2_name})

  if list1_res[0]["Type"] == 1 and list2_res[0]["Type"] == 1:
      list1 = list1_res[0]["Contents"].split(",")
      list2 = list2_res[0]["Contents"].split(",")

      for ip in list1:
          if ip not in list2:
              demisto.results(ip)
  else:
      demisto.results("Error getting lists")


  # ip1 = 10.1.1.1,10.2.2.2
  # ip2 = 10.1.1.1,10.1.1.2,10.1.1.3

  # !compare_list list1_name=ip1 list2_name=ip2
  # DBot Result
  #  10.2.2.2

  register_module_line('CompareList', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python
