commonfields:
  id: bc1f0c68-abaa-419d-8af7-9bb3681e37e7
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.47713
enabled: true
engineinfo: {}
mainengineinfo: {}
name: FileEntryDisplay
pswd: ""
runas: DBotWeakRole
runonce: false
script: |-
  incident = demisto.incidents()[0]
  #field = demisto.args()['field']['filentrydetails']
  #new = demisto.args()['new']
      #if new:
  """
  Entry_ID=[]
  attachment_details = incident.get('CustomFields').get('demoattachement')
  if len(attachment_details) == 0:
      print('No Attachment')
  else:

      res = demisto.context().get('File')[-1]
      if res['Name'] == attachment_details[-1]['name']:
          Entry_ID.append(res['EntryID'])
      demisto.results({'hidden': False, 'options':Entry_ID})
      #demisto.results(demisto.executeCommand('setIncident',{'customFields': {'fileentrydetails':Entry_ID}}))
  """

  res = demisto.context().get('File')
  headers = ["Name", "EntryID"]
  md = tableToMarkdown(name="File Details", headers=headers,t=res)

  demisto.results({
      "Contents":res,
      "ContentsFormat":formats['markdown'],
      "Type":entryTypes["note"],
      "HumanReadable":md,
      "ReadableContentsFormat":formats['markdown']
  })
  demisto.results(demisto.executeCommand("setIncident",{'fileentrydetails':md}))
scripttarget: 0
subtype: python3
tags:
- field-display
- dynamic-section
type: python
