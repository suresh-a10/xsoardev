args:
- defaultValue: No entries
  description: String that if found in the entry of an evidence- the evidence will
    be removed. The default value is "No entries".
  name: removeIfContains
comment: |-
  The automation removes evidence based on a query performed on the evidence content,
  if the provided string is found within the evidence- it will be removed.
commonfields:
  id: RemoveEmptyEvidence
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.3.6
    packID: CommunityCommonScripts
    packName: Community Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.115186
enabled: true
engineinfo: {}
mainengineinfo: {}
name: RemoveEmptyEvidence
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('RemoveEmptyEvidence', 'start', __line__())
  demisto.debug('pack name = Community Common Scripts, pack version = 1.3.6')



  removeIfContains = demisto.args()["removeIfContains"]
  incID = demisto.incidents()[0]["id"]

  bodyGet = {"incidentID": incID}
  res = demisto.executeCommand("core-api-post", {"uri": "/evidence/search", "body": bodyGet})[0]["Contents"]["response"]
  entries = res["entries"]
  evidences = res["evidences"]
  evidencesDict = {}

  for evidence in evidences:
      evidencesDict[evidence["entryId"]] = evidence["id"]

  for entry in entries:
      if removeIfContains in entry["contents"]:
          bodyDelete = {"evidenceID": evidencesDict[entry["id"]]}
          demisto.executeCommand("core-api-post", {"uri": "/evidence/delete", "body": bodyDelete})
  demisto.results("Done removing empty evidence")

  register_module_line('RemoveEmptyEvidence', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python
