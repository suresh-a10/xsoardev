contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 4.3.12
    packID: PrismaCloud
    packName: Prisma Cloud by Palo Alto Networks
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: This playbook remediates Prisma Cloud AWS IAM policy alerts. It uses
  sub-playbooks that perform the remediation steps.
id: Prisma Cloud Remediation - AWS IAM Policy Misconfiguration v2
inputs:
- description: Get the Prisma Cloud policy ID.
  key: policyId
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: labels.policy
      root: incident
      transformers:
      - operator: ParseJSON
      - args:
          field:
            value:
              simple: policyId
        operator: getField
- description: Update AWS IAM password policy automatically?
  key: AutoUpdatePasswordPolicy
  playbookInputQuery: null
  required: false
  value:
    simple: "no"
name: Prisma Cloud Remediation - AWS IAM Policy Misconfiguration v2
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
      iscommand: false
      name: ""
      version: -1
    taskid: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 690,
          "y": -180
        }
      }
  "1":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: brand
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: AWS - IAM
                root: modules
          operator: isEqualString
          right:
            value:
              simple: AWS - IAM
      label: "yes"
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "2"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Verifies that AWS - IAM integration is enabled.
      id: 5da95853-5c28-4f84-824d-38b0e1c0e9c9
      iscommand: false
      name: Is AWS - IAM integration enabled?
      type: condition
      version: -1
    taskid: 5da95853-5c28-4f84-824d-38b0e1c0e9c9
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 690,
          "y": -50
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Get AWS account's password policy.
      id: aff07456-1840-40d5-8b24-53c75bf75e62
      iscommand: true
      name: Get IAM password policy
      script: '|||aws-iam-get-account-password-policy'
      type: regular
      version: -1
    taskid: aff07456-1840-40d5-8b24-53c75bf75e62
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 120
        }
      }
  "3":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.AutoUpdatePasswordPolicy
                transformers:
                - operator: toLowerCase
          operator: isEqualString
          right:
            value:
              simple: "yes"
      label: "yes"
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "10"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Should we auto-remediate?
      id: 711289d0-3db3-43d7-8527-39112d8bae61
      iscommand: false
      name: Update IAM password policy automatically?
      type: condition
      version: -1
    taskid: 711289d0-3db3-43d7-8527-39112d8bae61
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 150,
          "y": 290
        }
      }
  "5":
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    message:
      bcc: null
      body:
        simple: ${incident.id} Autoremediate?
      cc: null
      format: ""
      methods: []
      replyOptions:
      - "Yes"
      - "No"
      subject: null
      timings:
        completeafterreplies: 1
        completeaftersla: false
        completeafterv2: false
        retriescount: 2
        retriesinterval: 360
      to: null
    nexttasks:
      '#default#':
      - "6"
      "Yes":
      - "10"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determine whether or not to auto-remediate?
      id: d7495e19-5781-4bbf-88e1-7c4be19f9ad8
      iscommand: false
      name: Auto remediate?
      type: condition
      version: -1
    taskid: d7495e19-5781-4bbf-88e1-7c4be19f9ad8
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 480,
          "y": 460
        }
      }
  "6":
    continueonerrortype: ""
    id: "6"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        1. Login to the AWS console and navigate to the IAM dashboard
        2. On the left navigation panel, click on Account Settings
        3. Check Prevent password reuse and enter remember 5 passwords
        4. Click on Apply password policy
      id: 1214b667-e9c5-4efe-8503-d92b4f36cc0a
      iscommand: false
      name: Manually update IAM password policy
      type: regular
      version: -1
    taskid: 1214b667-e9c5-4efe-8503-d92b4f36cc0a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 800
        }
      }
  "7":
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    scriptarguments:
      id:
        complex:
          accessor: id
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident.
      id: 599730fe-9f1e-4a63-89c5-e941732683b6
      iscommand: true
      name: Close investigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 599730fe-9f1e-4a63-89c5-e941732683b6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1350
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: a8d06dc1-f186-4459-87b6-3d05d85f70d0
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: a8d06dc1-f186-4459-87b6-3d05d85f70d0
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 690,
          "y": 1520
        }
      }
  "9":
    continueonerror: true
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    quietmode: 0
    scriptarguments:
      alert_ids:
        complex:
          accessor: labels
          root: incident
          transformers:
          - args:
              field:
                value:
                  simple: id
            operator: getField
      dismissal_note:
        simple: ${incident.labels.id} has been remediated by Cortex XSOAR.
      policy_ids:
        complex:
          accessor: labels.policy
          root: incident
          transformers:
          - operator: ParseJSON
          - args:
              field:
                value:
                  simple: policyId
            operator: getField
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Dismiss or snooze the alerts matching the given filter. Either
        policy IDs or alert IDs must be provided. When no absolute time nor relative
        time arguments are provided, the default time range is all times. For snoozing,
        provide "snooze_unit" and "snooze_value" arguments.
      id: 84a57f97-7df7-43e4-8ef4-b7abee45a9fe
      iscommand: true
      name: Dismiss Prisma Cloud alert
      script: '|||prisma-cloud-alert-dismiss'
      type: regular
      version: -1
    taskid: 84a57f97-7df7-43e4-8ef4-b7abee45a9fe
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 60,
          "y": 1180
        }
      }
  "10":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.policyId
          operator: isNotEqualString
          right:
            value:
              simple: e809c246-2ef5-4319-bba9-2c5735d88aa8
      label: passwdPolicy
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.policyId
          operator: isEqualString
          right:
            value:
              simple: e809c246-2ef5-4319-bba9-2c5735d88aa8
      label: userPolicy
    continueonerrortype: ""
    defaultassigneecomplex: {}
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "6"
      passwdPolicy:
      - "11"
      userPolicy:
      - "12"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Verify that a Prisma Cloud policy ID exists.
      id: 47348d70-6e0a-4efc-80d8-4f1f37d9561a
      iscommand: false
      name: Get Prisma Cloud policy id
      type: condition
      version: -1
    taskid: 47348d70-6e0a-4efc-80d8-4f1f37d9561a
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 150,
          "y": 630
        }
      }
  "11":
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      policyId:
        complex:
          root: inputs.policyId
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        This playbook remediates the following Prisma Cloud AWS IAM password policy alerts.

        Prisma Cloud policies remediated:
        - AWS IAM password policy allows password reuse
        - AWS IAM password policy does not expire in 90 days
        - AWS IAM password policy does not have a lowercase character
        - AWS IAM password policy does not have a minimum of 14 characters
        - AWS IAM password policy does not have a number
        - AWS IAM password policy does not have a symbol
        - AWS IAM password policy does not have a uppercase character
        - AWS IAM password policy does not have password expiration period
        - AWS IAM Password policy is insecure
      id: 95edff8c-bcac-4296-80c9-293d77209f66
      iscommand: false
      name: Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration
      playbookId: Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration
      type: playbook
      version: -1
    taskid: 95edff8c-bcac-4296-80c9-293d77209f66
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 10,
          "y": 840
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      policyId:
        complex:
          root: inputs.policyId
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |-
        This playbook remediates the following Prisma Cloud AWS IAM User alerts.

        Prisma Cloud policies remediated:

         - AWS IAM user has two active Access Keys
      id: ac6bdd4a-0d17-49b5-8d5e-ca830175b5a9
      iscommand: false
      name: Prisma Cloud Remediation - AWS IAM User Policy Misconfiguration
      playbookId: Prisma Cloud Remediation - AWS IAM User Policy Misconfiguration
      type: playbook
      version: -1
    taskid: ac6bdd4a-0d17-49b5-8d5e-ca830175b5a9
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -450,
          "y": 800
        }
      }
  "13":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: brand
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: PrismaCloud v2
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                root: modules
          operator: isExists
      label: "yes"
    continueonerror: true
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "7"
      "yes":
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: PrismaCloud v2
      description: Is Prisma Cloud v2 integration enabled?
      id: 06bdb957-83d6-4613-8589-376daa6136c1
      iscommand: false
      name: Is Prisma Cloud v2 integration enabled?
      type: condition
      version: -1
    taskid: 06bdb957-83d6-4613-8589-376daa6136c1
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1010
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "10_11_passwdPolicy": 0.39,
      "10_6_#default#": 0.54,
      "1_2_yes": 0.49,
      "1_8_#default#": 0.21,
      "3_10_yes": 0.48,
      "3_5_#default#": 0.48,
      "5_10_Yes": 0.51,
      "5_6_#default#": 0.42
    },
    "paper": {
      "dimensions": {
        "height": 1765,
        "width": 1520,
        "x": -450,
        "y": -180
      }
    }
  }
