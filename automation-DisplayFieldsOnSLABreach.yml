commonfields:
  id: eb87e2fb-dcf0-4a34-8774-7ba503906b0b
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.9.7.24076
enabled: true
engineinfo: {}
mainengineinfo: {}
name: DisplayFieldsOnSLABreach
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2


  def get_owner_email():
      owner_username = demisto.incidents()[0].get("owner")
      if owner_username:
          try:
              owner_info = demisto.executeCommand('getUserByUsername', {"username": owner_username})[0]
              owner_email = owner_info.get("EntryContext").get("UserByUsername").get("email")
              return owner_email
          except Exception as ex:
              demisto.results({
                  "Type": entryTypes["error"],
                  "ContentsFormat": formats["text"],
                  "Contents": "Could not retrieve user email. Maybe the user has no associated email to it.\
              Error: {}".format(ex)

              })
              return
      else:
          demisto.results({
              "Type": entryTypes["error"],
              "ContentsFormat": formats["text"],
              "Contents": "An email can't be sent to the owner of the incident, because no owner was assigned."
          })


  def get_subject():
      incident_name = demisto.incidents()[0].get("name")
      incident_id = demisto.incidents()[0].get("id")
      subject = "SLA Breached in incident \"{}\" #{}".format(incident_name, incident_id)
      return subject


  def send_email(to, subject, body):
      demisto.results(demisto.executeCommand('send-mail', {
          "to": to,
          "subject": subject,
          "body": body}))


  def get_body(field_name):

      sla = demisto.args().get("fieldValue").get("sla")
      start_date = demisto.args().get("fieldValue").get("startDate")
      body = "We have detected a breach in your SLA \"{}\".\nThe SLA was set to {} minute and was started on {}.".format(
          field_name, sla, start_date.split(".")[0])
      return body


  def main():

      field_name = demisto.args().get("field").get("cliName")
      incident=demisto.incidents()[0]

      if incident.get("CustomFields").get("whichslabreached"):
          sla=incident.get("CustomFields").get("whichslabreached")
          sla.append(field_name)
          demisto.results(demisto.executeCommand("setIncident",{"whichslabreached":sla}))
      else:
          demisto.results(demisto.executeCommand("setIncident",{"whichslabreached":field_name}))

      if field_name=="closuresla":
          email_to = get_owner_email()
          email_subject = get_subject()
          email_body = get_body(field_name)

          if email_to:
              send_email(email_to, email_subject, email_body)


  if __name__ == "__builtin__" or __name__ == "builtins":
      main()
scripttarget: 0
subtype: python3
tags:
- sla
type: python
