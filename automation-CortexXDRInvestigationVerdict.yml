comment: This widget displays the incident verdict based on the 'Verdict' field.
commonfields:
  id: CortexXDRInvestigationVerdict
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.9.0
    itemVersion: 6.1.98
    packID: CortexXDR
    packName: Cortex XDR by Palo Alto Networks
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.116439
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CortexXDRInvestigationVerdict
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('CortexXDRInvestigationVerdict', 'start', __line__())
  demisto.debug('pack name = Cortex XDR by Palo Alto Networks, pack version = 6.1.98')


  RED_HTML_STYLE = "color:#FF1744;text-align:center;font-size:300%;>"
  GREEN_HTML_STYLE = "color:#00CD33;text-align:center;font-size:300%;>"
  GREY_HTML_STYLE = "color:#808080;text-align:center;font-size:300%;>"


  def main():
      investigationverdict = demisto.context().get('Verdict')

      if investigationverdict == 'Malicious':
          html = f"<h1 style={RED_HTML_STYLE}Malicious</h1>"

      elif investigationverdict == 'Benign':
          html = f"<h1 style={GREEN_HTML_STYLE}Benign</h1>"

      else:
          html = f"<h1 style={GREY_HTML_STYLE}Not Determined</h1>"

      demisto.results({
          'ContentsFormat': formats['html'],
          'Type': entryTypes['note'],
          'Contents': html
      })


  if __name__ in ["__main__", "builtin", "builtins"]:
      main()

  register_module_line('CortexXDRInvestigationVerdict', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
