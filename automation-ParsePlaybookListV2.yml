args:
- description: Provide the REST API brand name
  name: BrandName
  required: true
commonfields:
  id: 84ae8bcf-d86e-4e5c-8135-a334fe26c87c
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: ParsePlaybookListV2
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2+


  from typing import Dict, Any
  import traceback
  import re


  ''' COMMON VARIABLES'''

  playbook_api_endpoints=[]
  BrandNameList={'Core REST API':'core-api-post','Demisto REST API':'demisto-api-post'}


  ''' MAIN FUNCTION '''


  def load_playbook(playbooks_list,brand_name):
      for i in range(len(playbooks_list)):
          for task_list in playbooks_list[i]['tasks'].values():
                  for task_item in task_list.values():
                      if type(task_item) == dict:
                          for key,value in task_item.items():
                              if key == 'uri':
                                  playbook_api_endpoints.append(value['simple'])
                              else:
                                  pass


      return playbook_api_endpoints

  def table_to_markdown(API_URI_LIST):



      md = tableToMarkdown(name="List of API Endpoints",t=API_URI_LIST,headers=["url","count"])

      demisto.results({
        "Contents":API_URI_LIST,
        "ContentsFormat":formats['markdown'],
        "Type":entryTypes["note"],
        "HumanReadable":md,
        "ReadableContentsFormat":formats['markdown'],
        'EntryContext': {'PlaybookAPIEnpoints':API_URI_LIST}
    })

  def main():
      #try:
      occurrence={}
      API_URI_LIST=[]
      brand_name = demisto.args()['BrandName']
      playbooks_list=demisto.executeCommand(BrandNameList[brand_name], {"uri":"/playbook/search","body":{"query":"hidden:F AND deprecated:F"}})[0]['Contents']['response']['playbooks']
      if len(playbooks_list)>0:
          uri_list=load_playbook(playbooks_list,brand_name)
          for uri in uri_list:
              count=dict()
              if uri in count:
                  count[uri]+=1
                  occurrence = {'url':uri, 'count':count}
              else:
                  count[uri]=1
                  occurrence = {'url':uri, 'count':count}
              API_URI_LIST.append(occurrence)
          table_to_markdown(API_URI_LIST)
      else:
          print('No Custom Playbooks')


      #except Exception as ex:
          #demisto.error(traceback.format_exc())  # print the traceback
          #return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags: []
type: python
