contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.1.20
    packID: AWS-Enrichment-Remediation
    packName: AWS Enrichment and Remediation
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: 'The playbook sends a HTTP get response to the hostname and validates
  if there is missing bucket information. '
id: AWS - Unclaimed S3 Bucket Validation
inputs:
- description: 'Remote hostname in an incident/alert. '
  key: RemoteHostname
  playbookInputQuery: null
  required: true
  value:
    complex:
      accessor: hostname
      root: alert
name: AWS - Unclaimed S3 Bucket Validation
outputs:
- contextPath: S3BucketName
  description: This is the bucket name extracted from HTTP response body.
  type: unknown
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: b2ceb86f-6ced-4a14-89e5-41a0962301e2
      iscommand: false
      name: ""
      version: -1
    taskid: b2ceb86f-6ced-4a14-89e5-41a0962301e2
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
  "1":
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      method:
        simple: GET
      url:
        complex:
          root: inputs.RemoteHostname
          transformers:
          - args:
              prefix:
                value:
                  simple: http://
              suffix: {}
            operator: concat
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Sends http request. Returns the response as json.
      id: 85d3a4fc-9007-4df5-8ff4-53a9bcadde5a
      iscommand: false
      name: Get request to the RemoteHostname
      script: http
      type: regular
      version: -1
    taskid: 85d3a4fc-9007-4df5-8ff4-53a9bcadde5a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 210
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: f415235a-3b49-4d7d-8e9f-5f8d95d9d743
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: f415235a-3b49-4d7d-8e9f-5f8d95d9d743
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 450,
          "y": 960
        }
      }
  "5":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: StatusCode
                root: HttpRequest.Response
                transformers:
                - operator: uniq
          operator: isEqualString
          right:
            value:
              simple: "404"
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Body
                root: HttpRequest.Response
                transformers:
                - operator: uniq
                - operator: toLowerCase
          operator: containsString
          right:
            value:
              simple: nosuchbucket
      label: "yes"
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "8"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks where the response was a 404 error and the html body of
        the response has S3 bucket not found.
      id: bafc447d-6203-402f-8769-6c630454c5d7
      iscommand: false
      name: Was there a 404 and S3 bucket not found?
      type: condition
      version: -1
    taskid: bafc447d-6203-402f-8769-6c630454c5d7
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 380
        }
      }
  "8":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Body
                root: HttpRequest.Response
                transformers:
                - args:
                    error_if_no_match: {}
                    ignore_case: {}
                    multi_line: {}
                    period_matches_newline: {}
                    regex:
                      value:
                        simple: \<li\>BucketName:\s+(.*?)\<\/li\>
                    unpack_matches: {}
                  operator: RegexExtractAll
          operator: isNotEmpty
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "yes":
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks if there was an S3 bucket mentioned in the http response
        body.
      id: bfd287d9-04c5-4ef2-8e02-73a9581e5e99
      iscommand: false
      name: Was there S3 bucket name mentioned?
      type: condition
      version: -1
    taskid: bfd287d9-04c5-4ef2-8e02-73a9581e5e99
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 590
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: S3BucketName
      value:
        complex:
          accessor: Body
          root: HttpRequest.Response
          transformers:
          - args:
              error_if_no_match: {}
              ignore_case: {}
              multi_line: {}
              period_matches_newline: {}
              regex:
                value:
                  simple: \<li\>BucketName:\s+(.*?)\<\/li\>
              unpack_matches: {}
            operator: RegexExtractAll
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a bucket name in context under BucketName
      id: f3f7ba7c-a15a-4d5f-8ce6-3f17fe9ddd45
      iscommand: false
      name: Set bucket name from HTTP response
      script: Set
      type: regular
      version: -1
    taskid: f3f7ba7c-a15a-4d5f-8ce6-3f17fe9ddd45
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 790
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 975,
        "width": 380,
        "x": 450,
        "y": 50
      }
    }
  }
