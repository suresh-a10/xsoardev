{
	"author": "Cortex XSOAR Customer Success",
	"authorImage": "",
	"beta": false,
	"cacheVersn": 0,
	"categories": [
		"Utilities"
	],
	"certification": "",
	"contentItemTypes": [
		"automation",
		"incidentfield",
		"incidenttype",
		"dashboard",
		"playbook",
		"layoutscontainer"
	],
	"contentItems": {
		"automation": [
			{
				"description": "Read the license_data.log file extracted from the log bundle",
				"name": "HealthCheckReadConf",
				"tags": []
			},
			{
				"description": "Get the count of Available, Busy and Total workers.",
				"name": "getWorkersCount",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Presenting Outdated Packs",
				"name": "HealthCheckOutdatedPacks",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Get the count of big workplan, big tasks playbooks and the playbooks which automatically turned in to quiet mode.",
				"name": "getPlaybooksHealthStatus",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Get the count of Marketplace content packs update status.",
				"name": "getContentPackStatus",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Get the count of custom, OOTB and deprecated playbooks.",
				"name": "getPlaybooksCount",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Returns inputs and outputs larger than 1 MB from all Cortex XSOAR investigations in the last 1 / 2 months.",
				"name": "HealthCheckGetLargestInputsAndOutputsInIncidents",
				"tags": []
			},
			{
				"description": "Collect server configurations and save that into a table field.",
				"name": "HealthCheckServerConfiguration",
				"tags": []
			},
			{
				"description": "Present or analyze workers usage.",
				"name": "HealthCheckWorkers",
				"tags": [
					"dynamic-section",
					"widget"
				]
			},
			{
				"description": "Number of dropped incidents.",
				"name": "HealthCheckNumberOfDroppedIncidents",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Export all Incident, Context and Widget data into Json format output.",
				"name": "HealthCheckExportSummary",
				"tags": []
			},
			{
				"description": "Get the count of slow searches, web socket disconnects(in last 12hrs).",
				"name": "getSystemHealthStatus",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Get the count of OOTB, custom and deprecated automations.",
				"name": "getAutomationsCount",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Get the list of deprecated automations.",
				"name": "getDeprecatedAutomations",
				"tags": [
					"statusreview"
				]
			},
			{
				"description": "Get the Disk Space details.",
				"name": "getDiskSpaceStatus",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Read Docker log file.",
				"name": "HealthCheckDockerLog",
				"tags": []
			},
			{
				"description": "Get the list of detached OOTB playbooks.",
				"name": "getDetachedPlaybooks",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Present or parse CPU usage stats.",
				"name": "HealthCheckCPU",
				"tags": [
					"widget",
					"dynamic-section"
				]
			},
			{
				"description": "Read panic log file line by line and display warnings, fatal errors and keyword results in a table in the War Room.",
				"name": "HealthCheckPanicLog",
				"tags": []
			},
			{
				"description": "Get the list of custom playbooks created in last 30 days.",
				"name": "getCustomPlaybooks",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Extract files from log bundle - supports tar.gz \u0026 tar \n\nhandle unsupported use cases and unextracted files. ",
				"name": "HealthCheckUnpack",
				"tags": [
					"Condition"
				]
			},
			{
				"description": "Present or analyze memory usage.",
				"name": "HealthCheckMemory",
				"tags": [
					"widget",
					"dynamic-section"
				]
			},
			{
				"description": "Collect data from System Diagnostics tool.",
				"name": "HealthCheckSystemDiagnostics",
				"tags": []
			},
			{
				"description": "Collect integrations name and count number of engines.",
				"name": "HealthCheckIntegrations",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Get the list of deprecated integrations.",
				"name": "getDeprecatedIntegrations",
				"tags": [
					"statusreview"
				]
			},
			{
				"description": "Validate if API Integration was defined correctly.\nIf not detect what is the problem and warn about it.",
				"name": "HealthCheckAPIvalidation",
				"tags": []
			},
			{
				"description": "Presenting Number of engines",
				"name": "HealthCheckNumberOfEngines",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Get the list of deprecated playbooks.",
				"name": "getDeprecatedPlaybooks",
				"tags": [
					"statusreview"
				]
			},
			{
				"description": "Analyze large incidents.",
				"name": "HealthCheckAnalyzeLargeInvestigations",
				"tags": []
			},
			{
				"description": "Widget Script to present the number of incidents with large input and outputs.",
				"name": "HealthCheckNumberOfLargeIOIncidents",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Reports on common indicators.",
				"name": "HealthCheckCommonIndicators",
				"tags": []
			},
			{
				"description": "Present or parse Disk usage stats.",
				"name": "HealthCheckDiskUsage",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Get the count of big incidents, incidents with big context and big indicators.",
				"name": "getInvHealthStatus",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Get the list of custom automations modified in last 30 days.",
				"name": "getCustomAutomations",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Parsing custom fields to detect indexed fields for risky field types.",
				"name": "HealthCheckFields",
				"tags": []
			},
			{
				"description": "Widget Script to present the number of large incidents.",
				"name": "HealthCheckNumberOfLargeIncidents",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Widget Script to present the number of BoltDB partitions.",
				"name": "HealthCheckNumberOfPartitions",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Presenting numbers of packs installed",
				"name": "HealthCheckPacksInstalled",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Read Telemtry log",
				"name": "HealthCheckReadTemeletryLog",
				"tags": []
			},
			{
				"description": "Containers status.",
				"name": "HealthCheckContainersStatus",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Read the installedpacks.json. \n\nCount and get packs names.",
				"name": "HealthCheckInstalledPacks",
				"tags": []
			},
			{
				"description": "Parsing playbooks.",
				"name": "HealthCheckPlaybookAnalysis",
				"tags": []
			},
			{
				"description": "Get the count of docker containers.",
				"name": "getDockerContainersCount",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Trend graph for incident creation.",
				"name": "HealthCheckIncidentsCreatedWeekly",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "read and parse filesystem.log",
				"name": "HealthCheckFileSystem",
				"tags": []
			},
			{
				"description": "Trend graph for incidents created per day.",
				"name": "HealthCheckIncidentsCreatedDaily",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Read server log file line by line and display warnings, fatal errors and keyword results in a table to the war room",
				"name": "HealthCheckServerLog",
				"tags": []
			},
			{
				"description": "Read the license_data.log file extracted from the log bundle.",
				"name": "HealthCheckLicenseData",
				"tags": []
			},
			{
				"description": "Get the list of detached automations.",
				"name": "getDetachedAutomations",
				"tags": [
					"statusreview",
					"widget"
				]
			},
			{
				"description": "Identify custom and detached system incidents type \nChecking if 'Auto Extraction' is turned on for:\nExtract from all\nExtract from specific indicators doesn't have any settings.",
				"name": "HealthCheckIncidentTypes",
				"tags": []
			},
			{
				"description": "Present Disk usage stats line widget.",
				"name": "HealthCheckDiskUsageLine",
				"tags": [
					"dynamic-section"
				]
			},
			{
				"description": "Read the version_control.log file extracted from the log bundle",
				"name": "HealthCheckReadVC",
				"tags": []
			},
			{
				"description": "Trend graph for incidents created per month.",
				"name": "HealthCheckIncidentsCreatedMonthly",
				"tags": [
					"dynamic-section"
				]
			}
		],
		"classifier": null,
		"dashboard": [
			{
				"name": "XSOAR Status Review Dashboard v6"
			}
		],
		"genericfield": null,
		"generictype": null,
		"incidentfield": [
			{
				"description": "",
				"name": "XSOAR Memory",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR Number Of DB Partitions",
				"type": "number"
			},
			{
				"description": "",
				"name": "XSOAR Customer Name",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Investigations With Large Input / Output",
				"type": "grid"
			},
			{
				"description": "Filesystem directory non empty paths ",
				"name": "Health Check File System Directories",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XSOAR OS",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Permitted Users",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR Telemetry Status",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR Content Version",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR Multi-Tenant",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Number of investigations bigger than 1MB",
				"type": "number"
			},
			{
				"description": "",
				"name": "Health Check Docker Containers",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Actionable Items",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XSOAR Server Configuration",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Number Of Engines",
				"type": "number"
			},
			{
				"description": "",
				"name": "Health Check Workers Busy",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR CPU",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR DR",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Docker Version",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Workers Total",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR Build",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR License",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Total Outdated Packs",
				"type": "number"
			},
			{
				"description": "",
				"name": "XSOAR Elastic Search",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Panics",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Used Users",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Docker Running",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Docker Containers Stats",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XSOAR Dev-Prod Mode",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Docker Images",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Total Packs Installed",
				"type": "number"
			},
			{
				"description": "",
				"name": "Health Check Number of investigations input / output bigger than 1MB",
				"type": "number"
			},
			{
				"description": "",
				"name": "XSOAR Architecture",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Installed Packs",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Large Investigations",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XSOAR License Valid Till",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Risky Indexed Fields",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Top Used Playbooks",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Auto Extraction based Incident Type",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Docker Paused",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Large Files",
				"type": "grid"
			},
			{
				"description": "",
				"name": "XSOAR Version",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Incidents Large Number Of Entries",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Log Since",
				"type": "shortText"
			},
			{
				"description": "XSOAR Multi Repo Flag",
				"name": "XSOAR Multi-Repo",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Number Of Dropped Incidents",
				"type": "number"
			},
			{
				"description": "",
				"name": "Health Check Docker Stop",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Enabled Instances",
				"type": "grid"
			},
			{
				"description": "",
				"name": "Health Check Log Until",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "XSOAR Dev-Prod",
				"type": "shortText"
			},
			{
				"description": "",
				"name": "Health Check Restart Count",
				"type": "shortText"
			}
		],
		"incidenttype": [
			{
				"closureScript": "",
				"days": 0,
				"hours": 0,
				"name": "System Diagnostics and Health Check",
				"playbook": "HealthCheck",
				"weeks": 0
			}
		],
		"indicatorfield": null,
		"integration": null,
		"layoutscontainer": [
			{
				"description": "",
				"name": "System Diagnostics and Health Check"
			}
		],
		"list": null,
		"playbook": [
			{
				"description": "New version for HealthCheck main playbook.",
				"name": "HealthCheck"
			},
			{
				"description": "Parse files from log bundle output.",
				"name": "Health Check - Log Analysis Read All files"
			},
			{
				"description": "Collect Log bundle and parse data.",
				"name": "Health Check - Collect Log Bundle"
			}
		],
		"report": null,
		"reputation": null,
		"widget": null,
		"wizard": null
	},
	"currentVersion": "3.0.2",
	"definitionId": "",
	"dependencies": {
		"Base": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.38.0",
			"name": "Base"
		},
		"CommonScripts": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.17.0",
			"name": "Common Scripts"
		},
		"DemistoRESTAPI": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.3.63",
			"name": "Cortex REST API"
		},
		"FiltersAndTransformers": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": true,
			"minVersion": "1.2.85",
			"name": "Filters And Transformers"
		},
		"Zendesk": {
			"author": "Cortex XSOAR",
			"certification": "certified",
			"mandatory": false,
			"minVersion": "2.1.4",
			"name": "Zendesk"
		}
	},
	"deprecated": false,
	"description": "CS Health Check",
	"disabledMonthly": false,
	"downloads": 7356,
	"eulaLink": "https://github.com/demisto/content/blob/master/LICENSE",
	"fromServerVersion": "5.5.0",
	"general": [
		"generalFieldFree"
	],
	"id": "HealthCheck",
	"installMessage": "",
	"integrations": [
		{
			"imagePath": "content/packs/DemistoRESTAPI/CoreRESTAPI_image.png",
			"name": "Core REST API"
		},
		{
			"imagePath": "content/packs/DemistoRESTAPI/DemistoRESTAPI_image.png",
			"name": "Demisto REST API (Deprecated)"
		},
		{
			"imagePath": "content/packs/Zendesk/Zendesk_image.png",
			"name": "Zendesk - (Deprecated)"
		},
		{
			"imagePath": "content/packs/Zendesk/Zendeskv2_image.png",
			"name": "Zendesk v2"
		}
	],
	"itemVersion": "3.0.2",
	"keywords": [],
	"legacy": true,
	"name": "System Diagnostics and Health Check",
	"packID": "HealthCheck",
	"packName": "",
	"premium": false,
	"previewOnly": false,
	"price": 0,
	"propagationLabels": [
		"all"
	],
	"rawKeywords": null,
	"rawTags": null,
	"rawUseCases": null,
	"readme": "The XSOAR Health Check pack automatically reviewing the current server and content for issues and best practices. \nThe pack goal is to identify potential issues and remediate them before they become a real issue.\n\nThe resulting layout tabs will provide the current system status and system diagnostics to identify issues to resolve.\nThe actionable items report will contain recommendations based on errors found or best practices.\n\n##Prerequisites\n**Single Server Deployment**\n\n1. Configure **\"Core REST API\"** Integration Instance with **Admin** user\n\n**Multi-Tenants Deployment**\n\n1. Create API Key on Main Tenant\n2. Create **Core REST API** integration on Main Tenant and use the API Key you created in previous step.\n   On instance settings define in URL field *https://127.0.0.1*\n   make sure not to set the tenant name in the URL.\n2. Propogate **Core REST API** instance to All tenants or to the required tenant using propogation labels.\n\n\n**How to**:\n1. Create new manual Incident\n2. pick **System Diagnostics and Health Check** incident type and **create new incident**.\n3. Once the playbook is completed, the incident layout will contain the collected data and some improvement suggestions.\n\n\n",
	"searchRank": 0,
	"serverMaxVersion": "",
	"serverMinVersion": "5.5.0",
	"support": "community",
	"supportDetails": {
		"email": "",
		"url": "https://live.paloaltonetworks.com/t5/cortex-xsoar-discussions/bd-p/Cortex_XSOAR_Discussions"
	},
	"tags": [
		"Core"
	],
	"toServerVersion": "",
	"updated": "2024-12-04T10:35:37Z",
	"useCases": [],
	"version": -1,
	"versionInfo": "1748140",
	"videos": []
}