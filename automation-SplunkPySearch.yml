args:
- default: true
  description: Splunk query to execute
  name: query
  required: true
- defaultValue: "10"
  description: Return up to X first rows. If omitted, defaults to 10.
  name: rows
comment: Deprecated. No available replacement. Run a query through Splunk and format
  the results as a table.
commonfields:
  id: SplunkPySearch
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 3.1.48
    packID: SplunkPy
    packName: Splunk
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dependson:
  must:
  - splunk-search
deprecated: true
dockerimage: demisto/python:2.7.18.27799
enabled: true
engineinfo: {}
mainengineinfo: {}
name: SplunkPySearch
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('SplunkPySearch', 'start', __line__())
  demisto.debug('pack name = Splunk, pack version = 3.1.48')



  query = demisto.args()['query']
  rows = demisto.args()['rows']

  headers = ""
  query = query + ' | head ' + rows
  res = demisto.executeCommand('splunk-search', {'using-brand': 'splunkpy', 'query': query})
  contents = res[0]['Contents']

  if isError(res[0]):
      return_error("Error occured. " + str(contents))

  if (res and len(res) > 0 and contents):
      if not isinstance(contents[0], dict):
          headers = "results"
      demisto.results({"Type": 1, "Contents": contents, "ContentsFormat": "json", "EntryContext": {},
                       "HumanReadable": tableToMarkdown("Splunk Search results for: " + query, contents, headers)})
  else:
      demisto.results('No results.')

  register_module_line('SplunkPySearch', 'end', __line__())
scripttarget: 0
subtype: python2
system: true
tags:
- enhancement
- splunk
type: python
