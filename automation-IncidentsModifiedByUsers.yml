args:
- name: from
  required: true
- name: to
  required: true
commonfields:
  id: 6d1247ee-03ff-4a7a-8357-4038907380bb
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.7.33922
enabled: true
engineinfo: {}
mainengineinfo: {}
name: IncidentsModifiedByUsers
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2+


  def get_incident_data(fromDate,toDate):
      query_res = "modified=>\""+fromDate+"\"""modified=<\""+toDate+"\""

      res= demisto.executeCommand('SearchIncidentsV2',{'query':query_res})
      #res=demisto.executeCommand("SearchIncidentsV2_Updated", {'id':111036})
      for content in res:
          for item in content['Contents']:
              for inc in item['Contents']['data']:
                  print(inc)
  ''' MAIN FUNCTION '''


  def main():
      try:
          fromDate = demisto.args()['from']
          toDate = demisto.args()['to']
          get_incident_data(fromDate,toDate)

          # TODO: replace the invoked command function with yours
          #return_results(basescript_dummy_command(demisto.args()))
      except Exception as ex:
          #demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags: []
type: python
