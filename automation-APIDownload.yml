commonfields:
  id: d3ad6214-77a8-4b8a-8779-61ea3a3cff16
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.89873
enabled: true
engineinfo: {}
mainengineinfo: {}
name: APIDownload
pswd: ""
runas: DBotRole
runonce: false
script: |2+


  from typing import Dict, Any
  import traceback,time



  ''' MAIN FUNCTION '''


  def main():

      # new= demisto.args()['new']

      # if new:
      #     url= "/markdown/image/3652_ae90a84d-b285-4ed0-85fa-413cc672155c.png"
      #     instance="Core REST API_instance_1"

      #     # res=demisto.executeCommand("core-api-download", {"uri":"/markdown/image/3663_334c5ae8-cf08-4b69-87ed-2612551ee692.png","using":"Core REST API_instance_1","IgnoreAutoExtract":False})[0]
      #     # demisto.results({'Type' : entryTypes['file'],
      #     #         'File':res['File'],
      #     #         'FileID':res['FileID']
      #     #         })


          #demisto.executeCommand("DownloadFileAPI",{"url":url,"instance":instance})
          #try:
      demisto.results(demisto.executeCommand("core-api-download", {"uri":"/markdown/image/1_8209f7d1-c443-4215-884d-ac700abbfb88.png","using":"Core REST API_instance_1","IgnoreAutoExtract":False}))

             #return fileResult(res['File'],res['FileID'])
          # except Exception as ex:
      #     demisto.error(traceback.format_exc())  # print the traceback
      #     return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags:
- field-change-triggered
type: python
