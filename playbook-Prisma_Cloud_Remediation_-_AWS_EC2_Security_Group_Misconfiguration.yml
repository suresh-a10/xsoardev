contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 4.3.16
    packID: PrismaCloud
    packName: Prisma Cloud by Palo Alto Networks
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: |-
  This playbook remediates the Prisma Cloud AWS EC2 alerts generated by the following policies:
   - AWS Default Security Group Does Not Restrict All Traffic
   - AWS Security Group allows all traffic on SSH port (22).
id: Prisma Cloud Remediation - AWS EC2 Security Group Misconfiguration
inputs:
- description: Provides the Prisma Cloud policy Id.
  key: policyId
  playbookInputQuery: null
  required: true
  value: {}
name: Prisma Cloud Remediation - AWS EC2 Security Group Misconfiguration
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "28"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 92a448cc-b058-4323-8821-bd598d893d29
      iscommand: false
      name: ""
      version: -1
    taskid: 92a448cc-b058-4323-8821-bd598d893d29
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 710,
          "y": -270
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "15"
    note: false
    quietmode: 0
    scriptarguments:
      groupIds:
        complex:
          accessor: labels.resource
          root: incident
          transformers:
          - operator: ParseJSON
          - args:
              field:
                value:
                  simple: data
            operator: getField
          - args:
              field:
                value:
                  simple: groupId
            operator: getField
      region:
        complex:
          accessor: labels.resource
          root: incident
          transformers:
          - operator: ParseJSON
          - args:
              field:
                value:
                  simple: regionId
            operator: getField
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Describes one or more of the security groups.
      id: d0b6286b-9877-4b2b-84c7-90c6e2a0c1e8
      iscommand: true
      name: Get security group details
      script: '|||aws-ec2-describe-security-groups'
      type: regular
      version: -1
    taskid: d0b6286b-9877-4b2b-84c7-90c6e2a0c1e8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1210,
          "y": 100
        }
      }
  "3":
    continueonerror: true
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        complex:
          accessor: EC2.SecurityGroups.IpPermissions.IpRanges.CidrIp
          root: AWS
      fromPort:
        complex:
          accessor: EC2.SecurityGroups.IpPermissions.FromPort
          root: AWS
      groupId:
        complex:
          accessor: EC2.SecurityGroups.GroupId
          root: AWS
      ipProtocol:
        complex:
          accessor: EC2.SecurityGroups.IpPermissions.IpProtocol
          root: AWS
      region:
        complex:
          accessor: labels.resource
          root: incident
          transformers:
          - operator: ParseJSON
          - args:
              field:
                value:
                  simple: regionId
            operator: getField
      sourceSecurityGroupName:
        complex:
          accessor: EC2.SecurityGroups.IpPermissions.UserIdGroupPairs.GroupName
          root: AWS
      toPort:
        complex:
          accessor: EC2.SecurityGroups.IpPermissions.ToPort
          root: AWS
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Removes ingress rules from a security group. To remove a rule,
        the values that you specify (for example, ports) must match the existing rules'
        values exactly.
      id: 5a0fe336-4d38-4c7d-8250-b7165f183d8e
      iscommand: true
      name: Revoke all security group ingress rules
      script: '|||aws-ec2-revoke-security-group-ingress-rule'
      type: regular
      version: -1
    taskid: 5a0fe336-4d38-4c7d-8250-b7165f183d8e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 950,
          "y": 825
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 1cf94ac2-9dfe-48c6-8fef-8deabb65238a
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 1cf94ac2-9dfe-48c6-8fef-8deabb65238a
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 710,
          "y": 1610
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "no":
      - "9"
      "yes":
      - "20"
    note: false
    quietmode: 0
    scriptarguments:
      entryId:
        simple: ${lastCompletedTaskEntries}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether given entries returned an error. Use ${lastCompletedTaskEntries}
        to check the previous task entries. If an array is provided, a value of yes
        indicates that one of the entries returned an error.
      id: bb7658d0-6f23-46c1-8b3d-ad0cbbee43ef
      iscommand: false
      name: Did we encounter an error?
      script: isError
      type: condition
      version: -1
    taskid: bb7658d0-6f23-46c1-8b3d-ad0cbbee43ef
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 950,
          "y": 1015
        }
      }
  "14":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: EC2.SecurityGroups.GroupName
                root: AWS
          operator: isEqualString
          right:
            value:
              simple: default
      label: "yes"
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "20"
      "yes":
      - "3"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check whether the VPC security group is the default.  If not, manually
        define a default security group.
      id: 8576666e-db4d-465f-825e-4b105d48068d
      iscommand: false
      name: Is there a default security group?
      type: condition
      version: -1
    taskid: 8576666e-db4d-465f-825e-4b105d48068d
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 950,
          "y": 605
        }
      }
  "15":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.policyId
          operator: isEqualString
          right:
            value:
              simple: 2378dbf4-b104-4bda-9b05-7417affbba3f
      label: defaultSG
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.policyId
          operator: isEqualString
          right:
            value:
              simple: 617b9138-584b-4e8e-ad15-7fbabafbed1a
      label: alltraffic-port22
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      alltraffic-port22:
      - "29"
      defaultSG:
      - "27"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Remediate the appropriate Prisma Cloud policy based on the policy
        Id.
      id: 13c8b02d-09b5-4315-8a3e-19b25b716632
      iscommand: false
      name: Execute remediation
      type: condition
      version: -1
    taskid: 13c8b02d-09b5-4315-8a3e-19b25b716632
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1210,
          "y": 270
        }
      }
  "20":
    continueonerrortype: ""
    id: "20"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        1. Sign into the AWS console.
        2. Select the specific region from the region drop down on the top right corner.
        3. Navigate to the VPC Dashboard.
        4. Click on Security Groups in the left window pane.
        5. Click on the security group in question.
        6. Make the appropriate changes..
        7. Click Save rules.
      id: 3681e8ec-3ee0-4a3d-8258-4c221cea314a
      iscommand: false
      name: Manually update security group
      type: regular
      version: -1
    taskid: 3681e8ec-3ee0-4a3d-8258-4c221cea314a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 950,
          "y": 1340
        }
      }
  "27":
    continueonerrortype: ""
    id: "27"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "14"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 20a0adc7-86c1-42c0-839a-3148bbafca74
      iscommand: false
      name: Default SG Does Not Restrict All Traffic
      type: title
      version: -1
    taskid: 20a0adc7-86c1-42c0-839a-3148bbafca74
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 950,
          "y": 455
        }
      }
  "28":
    continueonerrortype: ""
    id: "28"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "9"
      "yes":
      - "2"
    note: false
    quietmode: 0
    results:
    - brandInstances
    scriptarguments:
      brandname:
        simple: AWS - EC2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns 'yes' if integration brand is available. Otherwise returns
        'no'
      id: bf81822b-44d6-4a0d-8798-1308b75a90be
      iscommand: false
      name: Is AWS - EC2 integration available?
      script: IsIntegrationAvailable
      type: condition
      version: -1
    taskid: bf81822b-44d6-4a0d-8798-1308b75a90be
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 710,
          "y": -120
        }
      }
  "29":
    continueonerrortype: ""
    id: "29"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "30"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 41280bdc-7d46-431f-80bc-9b5e0efa82b1
      iscommand: false
      name: All Traffic Allowed on SSH Port
      type: title
      version: -1
    taskid: 41280bdc-7d46-431f-80bc-9b5e0efa82b1
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1530,
          "y": 455
        }
      }
  "30":
    continueonerror: true
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "31"
    note: false
    quietmode: 0
    scriptarguments:
      cidrIp:
        simple: 0.0.0.0/0
      fromPort:
        simple: "22"
      groupId:
        complex:
          accessor: GroupId
          root: AWS.EC2.SecurityGroups
      ipProtocol:
        simple: tcp
      toPort:
        simple: "22"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Removes egress rule from a security group. To remove a rule, the
        values that you specify (for example, ports) must match the existing rule's
        values exactly.
      id: 749cbfcb-24a1-4f9e-84dd-30577d851ff0
      iscommand: true
      name: Revoke the 22 ingress rule
      script: '|||aws-ec2-revoke-security-group-ingress-rule'
      type: regular
      version: -1
    taskid: 749cbfcb-24a1-4f9e-84dd-30577d851ff0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1530,
          "y": 605
        }
      }
  "31":
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      "no":
      - "9"
      "yes":
      - "20"
    note: false
    quietmode: 0
    scriptarguments:
      entryId:
        simple: ${lastCompletedTaskEntries}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether given entries returned an error. Use ${lastCompletedTaskEntries}
        to check the previous task entries. If an array is provided, a value of yes
        indicates that one of the entries returned an error.
      id: 020c1d19-094f-4a3c-8206-7d6573e48f51
      iscommand: false
      name: Did we encounter an error?
      script: isError
      type: condition
      version: -1
    taskid: 020c1d19-094f-4a3c-8206-7d6573e48f51
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1530,
          "y": 1015
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "12_20_yes": 0.65,
      "12_9_no": 0.26,
      "14_20_#default#": 0.18,
      "14_3_yes": 0.52,
      "15_27_defaultSG": 0.66,
      "31_20_yes": 0.48,
      "31_9_no": 0.36
    },
    "paper": {
      "dimensions": {
        "height": 1945,
        "width": 1200,
        "x": 710,
        "y": -270
      }
    }
  }
