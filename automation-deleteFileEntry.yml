args:
- name: entryID
  required: true
commonfields:
  id: 59592f1c-faaa-4334-897c-7f4dfe2fc151
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.8.37233
enabled: true
engineinfo: {}
mainengineinfo: {}
name: deleteFileEntry
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  ## WARNING: This script deletes any war room entry so be mindful with sharing this script with everyone

  def DeleteEntry(entryID):
      return demisto.executeCommand("demisto-api-post", {
          'uri': "/entry/delete/v2",
          'body': {
              'id': entryID,
              'deleteArtifact': True
          }
      })


  ## WARNING: This script deletes any war room entry with file artifact
  def main():
      try:
          entryID = demisto.args()['entryID']
          demisto.results(DeleteEntry(entryID))

      except Exception as ex:
          demisto.error(traceback.format_exc())
          return_error(f"deleteFileEntry: Exception failed to execute. Error: {str(ex)}")


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()
scripttarget: 0
subtype: python3
tags: []
type: python
