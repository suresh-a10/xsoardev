args:
- name: Hostname
- default: true
  defaultValue: CrowdstrikeFalcon_Detections
  name: Instance
commonfields:
  id: 8755ef21-e302-4572-8d71-b908c06c1360
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.9.7.24076
enabled: true
engineinfo: {}
mainengineinfo: {}
name: Get_HostManagement_Details_WIP
outputs:
- contextPath: Data
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  args=demisto.args()
  hostname=args.get("Hostname").strip()  #this will contain tactics fetched if malware playbook and rule name if qradar playbook
  instance=args.get("Instance").strip()

  details=[]
  try:
      # res=demisto.executeCommand("cs-falcon-search-device",{"hostname":hostname,"raw-response":True,"using":instance})
      res=demisto.executeCommand("cs-falcon-search-device",{"hostname":hostname,"using":instance})
      for i in res['resources']:
              details.append(i)
      demisto.setContext("Data", details)
      # if isError(res):
      #     print(f'{str(get_error(res))}')
      #     raise exception
      # else:
      #     for i in res['resources']:
      #         details.append(i)
      #     demisto.setContext("Data", details)
  except:
      demisto.results("Task has gone in exception. Owner details not reflected in CrowdStrike")
scripttarget: 0
subtype: python3
tags: []
type: python
