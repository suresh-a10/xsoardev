commonfields:
  id: cf653207-5d31-4bb8-8c55-b7215d5267f9
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.9.7.24076
enabled: true
engineinfo: {}
mainengineinfo: {}
name: AI_Intel_IP
pswd: ""
runas: DBotWeakRole
runonce: false
script: |+
  from typing import Dict, Any
  import traceback


  from CommonServerPython import *

  def main():
      # Get the 'entity' argument
      entity = demisto.args().get('entity')

      # Set the hardcoded parameters
      params = {
          'profile': 'All',
          'entity_type': 'ip',
          'fetch_analyst_notes': 'no',
          'fetch_riskyCIDRips': 'no',
          'using': 'Recorded Future v2_instance_1'
      }

      # Add the 'entity' argument to the parameters
      params['entity'] = entity

      # Run the 'recordedfuture-intelligence' command
      response = demisto.executeCommand('recordedfuture-intelligence', params)

      # Output the results
      for item in response:
          if isError(item):
              return_error(get_error(item))
          else:
              demisto.results(item)

  if __name__ in ['__main__', 'builtin', 'builtins']:
      main()


scripttarget: 0
subtype: python3
tags: []
type: python
