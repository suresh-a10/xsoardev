contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.1.19
    packID: Azure-Enrichment-Remediation
    packName: Azure Enrichment and Remediation
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: |-
  This playbook adds new Azure Network Security Groups (NSG) rules to NSGs attached to a NIC. The new rules will give access only to a private IP address range and block traffic that's exposed to the public internet ([using the private IP of the VM as stated in Azure documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview)). For example, if RDP is exposed to the public internet, this playbook adds new firewall rules that only allow traffic from private IP addresses and blocks the rest of the RDP traffic.

  Conditions and limitations:
  - Limited to one resource group.
  - 200 Azure rules viewed at once to find offending rule.
  - 2 priorities lower than the offending rule priority must be available.
  - Adds rules to NSGs associated to NICs.
id: Azure - Network Security Group Remediation
inputs:
- description: The Azure Network Security Group that will have new rules created or
    updated.
  key: AzureSecurityGroup
  playbookInputQuery: null
  required: true
  value: {}
- description: The private IP of the Azure Virtual Machine.
  key: AzureVMPrivateIP
  playbookInputQuery: null
  required: true
  value: {}
- description: The remote protocol that is publicly exposed.
  key: RemoteProtocol
  playbookInputQuery: null
  required: true
  value: {}
- description: The remote port that is publicly exposed.
  key: RemotePort
  playbookInputQuery: null
  required: true
  value: {}
- description: The Azure subscription ID (optional).
  key: SubscriptionID
  playbookInputQuery: null
  required: false
  value: {}
- description: The Azure resource group (optional).
  key: ResourceGroup
  playbookInputQuery: null
  required: false
  value: {}
- description: Azure Network Security Groups integration instance to use if you have
    multiple instances configured (optional).
  key: InstanceName
  playbookInputQuery: null
  required: false
  value: {}
- description: Comma-separated list of IPv4 network ranges to be used as source addresses
    for the `remediation-allow-port-<port#>-<tcp|udp>` rule to be created.  Typically
    this will be private IP ranges (to allow access within the vnet and bastion hosts)
    but other networks can be added as needed.
  key: RemediationAllowRanges
  playbookInputQuery: null
  required: false
  value:
    simple: 172.16.0.0/12,10.0.0.0/8,192.168.0.0/16
name: Azure - Network Security Group Remediation
outputs:
- contextPath: remediatedFlag
  description: Output key to determine if remediation was successfully done.
  type: boolean
- contextPath: remediatedReason
  description: Reason remediation was done or not done.
  type: string
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 6ce17739-3f39-4681-8310-fd45ba54b9bb
      iscommand: false
      name: ""
      version: -1
    taskid: 6ce17739-3f39-4681-8310-fd45ba54b9bb
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 510,
          "y": -700
        }
      }
  "1":
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "22"
    note: false
    quietmode: 0
    scriptarguments:
      limit:
        simple: "200"
      offset:
        simple: "1"
      resource_group_name:
        complex:
          root: inputs.ResourceGroup
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      security_group_name:
        simple: ${inputs.AzureSecurityGroup}
      subscription_id:
        complex:
          root: inputs.SubscriptionID
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      using:
        simple: ${inputs.InstanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Azure Network Security Groups
      description: List all rules of the specified security groups.
      id: 1adc8ea1-823e-440b-82da-b83a8d7451d2
      iscommand: true
      name: Retrieve Rules from NSG Associated to Public IP
      script: Azure Network Security Groups|||azure-nsg-security-rules-list
      type: regular
      version: -1
    taskid: 1adc8ea1-823e-440b-82da-b83a8d7451d2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 510,
          "y": -380
        }
      }
  "4":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: containsGeneral
                    right:
                      value:
                        simple: Azure Network Security Groups
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: containsGeneral
                    right:
                      value:
                        simple: active
                root: modules
          operator: isNotEmpty
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "4"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "47"
      "yes":
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determines if the Azure Network Security Groups integration instance
        is configured and input values are defined to pull in data required for remediation.
      id: 55bbd540-d880-4a5a-8a0a-4cb49be396ba
      iscommand: false
      name: Is Azure Network Security Groups and Input Value Defined?
      type: condition
      version: -1
    taskid: 55bbd540-d880-4a5a-8a0a-4cb49be396ba
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 510,
          "y": -570
        }
      }
  "5":
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 7482a072-0101-4618-83f9-1dd8189b715e
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 7482a072-0101-4618-83f9-1dd8189b715e
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 710,
          "y": 2410
        }
      }
  "22":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.access
                    operator: isEqualString
                    right:
                      value:
                        simple: Allow
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.direction
                    operator: isEqualString
                    right:
                      value:
                        simple: Inbound
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationPortRange
                    operator: isEqualString
                    right:
                      iscontext: true
                      value:
                        simple: inputs.RemotePort
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationPortRange
                    operator: isEqualString
                    right:
                      value:
                        simple: '*'
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.protocol
                    operator: isEqualString
                    right:
                      iscontext: true
                      value:
                        simple: inputs.RemoteProtocol
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.protocol
                    operator: isEqualString
                    right:
                      value:
                        simple: '*'
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.sourceAddressPrefix
                    operator: isEqualString
                    right:
                      value:
                        simple: '*'
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.sourceAddressPrefix
                    operator: isEqualString
                    right:
                      value:
                        simple: Internet
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.sourceAddressPrefix
                    operator: isEqualString
                    right:
                      value:
                        simple: 0.0.0.0/0
                root: AzureNSG.Rule
                transformers:
                - args:
                    field:
                      value:
                        simple: name
                  operator: getField
          operator: isExists
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "47"
      "yes":
      - "43"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the last command returned rules or not.
      id: 8b08e2be-7090-4530-8d81-840e906cbbff
      iscommand: false
      name: Does offending rule exist?
      type: condition
      version: -1
    taskid: 8b08e2be-7090-4530-8d81-840e906cbbff
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 510,
          "y": -220
        }
      }
  "30":
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "31"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 84c801f2-2f65-4cac-851c-50e9feabd680
      iscommand: false
      name: Retrieve and Update Allow Rule
      type: title
      version: -1
    taskid: 84c801f2-2f65-4cac-851c-50e9feabd680
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 250,
          "y": 890
        }
      }
  "31":
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "32"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: existingAllowRule
      value:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.direction
              operator: isEqualString
              right:
                value:
                  simple: Inbound
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.access
              operator: isEqualString
              right:
                value:
                  simple: Allow
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.name
              operator: containsGeneral
              right:
                value:
                  simple: remediation-allow-port
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.name
              operator: containsGeneral
              right:
                iscontext: true
                value:
                  simple: ${inputs.RemotePort}
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.name
              operator: containsGeneral
              right:
                iscontext: true
                value:
                  simple: ${inputs.RemoteProtocol}
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.destinationAddressPrefix
              operator: notContainsGeneral
              right:
                iscontext: true
                value:
                  simple: ${inputs.AzureVMPrivateIP}
          root: AzureNSG.Rule
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a variable for the existing allow rule.
      id: 7f84ef2a-e391-4f94-828f-3eff285e8fd3
      iscommand: false
      name: Set variable for existing allow rule name
      script: Set
      type: regular
      version: -1
    taskid: 7f84ef2a-e391-4f94-828f-3eff285e8fd3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 250,
          "y": 1030
        }
      }
  "32":
    continueonerrortype: ""
    id: "32"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
    note: false
    quietmode: 0
    scriptarguments:
      destination:
        complex:
          accessor: destinationAddressPrefix
          root: existingAllowRule
          transformers:
          - args:
              item:
                iscontext: true
                value:
                  simple: existingAllowRule.destinationAddressPrefixes
              raw: {}
            operator: AppendIfNotEmpty
          - args:
              separator:
                value:
                  simple: ','
            operator: join
          - args:
              prefix: {}
              suffix:
                value:
                  simple: ','
            operator: concat
          - args:
              prefix: {}
              suffix:
                iscontext: true
                value:
                  simple: ${inputs.AzureVMPrivateIP}
            operator: concat
      resource_group_name:
        complex:
          root: inputs.ResourceGroup
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      security_group_name:
        complex:
          root: inputs.AzureSecurityGroup
      security_rule_name:
        complex:
          accessor: name
          root: existingAllowRule
      subscription_id:
        complex:
          root: inputs.SubscriptionID
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      using:
        simple: ${inputs.InstanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Azure Network Security Groups
      description: |-
        Update an existing security allow rule that denies all internet traffic to exposed public IPs (using the private IP) with an additional public IP (using the private IP). If one does not exist, it will be created.

        Private IPs are used in NSG rules in place of public IPs, as explained in [Microsoft Azure's documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview).
      id: b5146806-4b94-4d33-8277-5ea7d3e51bdf
      iscommand: true
      name: Update existing remediation allow rule
      script: Azure Network Security Groups|||azure-nsg-security-rule-update
      type: regular
      version: -1
    taskid: b5146806-4b94-4d33-8277-5ea7d3e51bdf
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 250,
          "y": 1195
        }
      }
  "34":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.access
                    operator: isEqualString
                    right:
                      value:
                        simple: Deny
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      value:
                        simple: remediation-deny-port
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemotePort}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemoteProtocol}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefix
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefixes
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                root: AzureNSG.Rule
                transformers:
                - args:
                    field:
                      value:
                        simple: name
                  operator: getField
          operator: isExists
          right:
            value: {}
      label: "yes"
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.access
                    operator: isEqualString
                    right:
                      value:
                        simple: Deny
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      value:
                        simple: remediation-deny-port
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemotePort}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemoteProtocol}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefix
                    operator: notContainsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefixes
                    operator: notContainsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                root: AzureNSG.Rule
          operator: isExists
      label: Update
    continueonerrortype: ""
    id: "34"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "45"
      Update:
      - "35"
      "yes":
      - "46"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determines whether a remediation deny rule already exists or not.
      id: 6584ec00-606f-4979-88e1-ad8445501150
      iscommand: false
      name: Does remediation deny rule exist?
      type: condition
      version: -1
    taskid: 6584ec00-606f-4979-88e1-ad8445501150
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 510,
          "y": 1365
        }
      }
  "35":
    continueonerrortype: ""
    id: "35"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "36"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: a2f218f3-4fab-4c9b-8790-9f2e92756735
      iscommand: false
      name: Retrieve and Update Deny Rule
      type: title
      version: -1
    taskid: a2f218f3-4fab-4c9b-8790-9f2e92756735
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 510,
          "y": 1585
        }
      }
  "36":
    continueonerrortype: ""
    id: "36"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "37"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: existingDenyRule
      value:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.direction
              operator: isEqualString
              right:
                value:
                  simple: Inbound
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.access
              operator: isEqualString
              right:
                value:
                  simple: Deny
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.name
              operator: containsGeneral
              right:
                value:
                  simple: remediation-deny-port
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.name
              operator: containsGeneral
              right:
                iscontext: true
                value:
                  simple: inputs.RemotePort
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.name
              operator: containsGeneral
              right:
                iscontext: true
                value:
                  simple: inputs.RemoteProtocol
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.destinationAddressPrefix
              operator: notContainsGeneral
              right:
                iscontext: true
                value:
                  simple: ${inputs.AzureVMPrivateIP}
          root: AzureNSG.Rule
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a variable for the existing deny rule.
      id: 21448315-bcc9-4e2c-865b-483a82cc882d
      iscommand: false
      name: Set variable for existing deny rule name
      script: Set
      type: regular
      version: -1
    taskid: 21448315-bcc9-4e2c-865b-483a82cc882d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 510,
          "y": 1720
        }
      }
  "37":
    continueonerrortype: ""
    id: "37"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "46"
    note: false
    quietmode: 0
    scriptarguments:
      destination:
        complex:
          accessor: destinationAddressPrefix
          root: existingDenyRule
          transformers:
          - args:
              item:
                iscontext: true
                value:
                  simple: existingAllowRule.destinationAddressPrefixes
              raw: {}
            operator: AppendIfNotEmpty
          - args:
              separator:
                value:
                  simple: ','
            operator: join
          - args:
              prefix: {}
              suffix:
                value:
                  simple: ','
            operator: concat
          - args:
              prefix: {}
              suffix:
                iscontext: true
                value:
                  simple: ${inputs.AzureVMPrivateIP}
            operator: concat
      resource_group_name:
        complex:
          root: inputs.ResourceGroup
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      security_group_name:
        complex:
          root: inputs.AzureSecurityGroup
      security_rule_name:
        complex:
          accessor: name
          root: existingDenyRule
      subscription_id:
        complex:
          root: inputs.SubscriptionID
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      using:
        simple: ${inputs.InstanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Azure Network Security Groups
      description: |-
        Update an existing security rule that denies all internet traffic to exposed public IPs (using the private IP) with an additional public IP (using the private IP). If one does not exist, it will be created.

        Private IPs are used in NSG rules in place of public IPs, as explained in [Microsoft Azure's documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview).
      id: 1a7d4cac-6979-4cf3-8705-ec356925dda6
      iscommand: true
      name: Update existing remediation deny rule
      script: Azure Network Security Groups|||azure-nsg-security-rule-update
      type: regular
      version: -1
    taskid: 1a7d4cac-6979-4cf3-8705-ec356925dda6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 510,
          "y": 1880
        }
      }
  "38":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.access
                    operator: isEqualString
                    right:
                      value:
                        simple: Allow
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      value:
                        simple: remediation-allow-port
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemotePort}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemoteProtocol}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefix
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefixes
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                root: AzureNSG.Rule
                transformers:
                - args:
                    field:
                      value:
                        simple: name
                  operator: getField
          operator: isExists
          right:
            value: {}
      label: "yes"
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.access
                    operator: isEqualString
                    right:
                      value:
                        simple: Allow
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      value:
                        simple: remediation-allow-port
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemotePort}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.name
                    operator: containsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: ${inputs.RemoteProtocol}
                - - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefix
                    operator: notContainsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                  - left:
                      iscontext: true
                      value:
                        simple: AzureNSG.Rule.destinationAddressPrefixes
                    operator: notContainsGeneral
                    right:
                      iscontext: true
                      value:
                        simple: inputs.AzureVMPrivateIP
                root: AzureNSG.Rule
          operator: isExists
      label: Update
    continueonerrortype: ""
    id: "38"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "39"
      Update:
      - "30"
      "yes":
      - "34"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Determines whether a remediation allow rule already exists or not.
      id: e982f863-79e1-4b9e-8916-38eafb22159e
      iscommand: false
      name: Does remediation allow rule exist?
      type: condition
      version: -1
    taskid: e982f863-79e1-4b9e-8916-38eafb22159e
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 510,
          "y": 720
        }
      }
  "39":
    continueonerrortype: ""
    id: "39"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "42"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 62d2b0b1-5d6c-4218-86c9-2b8babd7b23d
      iscommand: false
      name: Create Allow Rule
      type: title
      version: -1
    taskid: 62d2b0b1-5d6c-4218-86c9-2b8babd7b23d
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 780,
          "y": 890
        }
      }
  "40":
    continueonerrortype: ""
    id: "40"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "41"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: prioritiesAzureRules
      value:
        complex:
          accessor: priority
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.direction
              operator: isEqualString
              right:
                value:
                  simple: Inbound
          root: AzureNSG.Rule
          transformers:
          - args:
              descending: {}
            operator: sort
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Creates a list of priorities from the list of rules found.
      id: 9bb91f4f-7790-482c-8671-d9e0b22bdf49
      iscommand: false
      name: Create list of priorities of all returned Azure rules
      script: Set
      type: regular
      version: -1
    taskid: 9bb91f4f-7790-482c-8671-d9e0b22bdf49
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 510,
          "y": 400
        }
      }
  "41":
    continueonerrortype: ""
    id: "41"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "38"
    note: false
    quietmode: 0
    scriptarguments:
      list_of_priorities_from_rules:
        simple: ${prioritiesAzureRules}
      number_of_available_priorities_to_retrieve:
        simple: "2"
      target_rule_priority:
        simple: ${azureOffendingRulePriority}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: This script takes in a list of numbers that represent Azure priorities
        for NSG rules, a target priority number, and a number available priorities
        to return available priorities from the provided list.
      id: fa68287b-bca8-4561-8034-1383ce60869a
      iscommand: false
      name: Retrieve available priorities
      script: AzureFindAvailableNSGPriorities
      type: regular
      version: -1
    taskid: fa68287b-bca8-4561-8034-1383ce60869a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 510,
          "y": 560
        }
      }
  "42":
    continueonerrortype: ""
    id: "42"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
    note: false
    quietmode: 0
    scriptarguments:
      action:
        simple: Allow
      destination:
        complex:
          accessor: AzureVMPrivateIP}
          root: ${inputs
      destination_ports:
        complex:
          root: inputs.RemotePort
      direction:
        simple: Inbound
      priority:
        complex:
          root: AvailableAzureNSGPriorities
          transformers:
          - args:
              index:
                value:
                  simple: "1"
            operator: atIndex
      protocol:
        complex:
          root: inputs.RemoteProtocol
      resource_group_name:
        complex:
          root: inputs.ResourceGroup
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      security_group_name:
        complex:
          root: inputs.AzureSecurityGroup
      security_rule_name:
        complex:
          root: inputs.RemotePort
          transformers:
          - args:
              prefix:
                value:
                  simple: remediation-allow-port-
              suffix:
                value:
                  simple: '-'
            operator: concat
          - args:
              prefix: {}
              suffix:
                iscontext: true
                value:
                  simple: ${inputs.RemoteProtocol}
            operator: concat
      source:
        simple: ${inputs.RemediationAllowRanges}
      subscription_id:
        complex:
          root: inputs.SubscriptionID
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      using:
        simple: ${inputs.InstanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Azure Network Security Groups
      description: |-
        Create a security allow rule that denies all internet traffic to exposed public IPs (using the private IP) with an additional public IP (using the private IP). If one does not exist, it will be created.

        Private IPs are used in NSG rules in place of public IPs, as explained in [Microsoft Azure's documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview).
      id: f871b58d-6155-4b03-880a-1889551b6b00
      iscommand: true
      name: Add allow rule for port ${inputs.RemotePort} and ${inputs.RemoteProtocol}
      script: Azure Network Security Groups|||azure-nsg-security-rule-create
      type: regular
      version: -1
    taskid: f871b58d-6155-4b03-880a-1889551b6b00
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 780,
          "y": 1020
        }
      }
  "43":
    continueonerrortype: ""
    id: "43"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "48"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: azureOffendingRulePriority
      value:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.direction
              operator: isEqualString
              right:
                value:
                  simple: Inbound
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.destinationPortRange
              operator: isEqualString
              right:
                iscontext: true
                value:
                  simple: inputs.RemotePort
            - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.destinationPortRange
              operator: isEqualString
              right:
                value:
                  simple: '*'
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.protocol
              operator: isEqualString
              right:
                iscontext: true
                value:
                  simple: inputs.RemoteProtocol
            - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.protocol
              operator: isEqualString
              right:
                value:
                  simple: '*'
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.sourceAddressPrefix
              operator: isEqualString
              right:
                value:
                  simple: '*'
            - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.sourceAddressPrefix
              operator: isEqualString
              right:
                value:
                  simple: Internet
            - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.sourceAddressPrefix
              operator: isEqualString
              right:
                value:
                  simple: 0.0.0.0/0
          - - left:
                iscontext: true
                value:
                  simple: AzureNSG.Rule.access
              operator: isEqualString
              right:
                value:
                  simple: Allow
          root: AzureNSG.Rule
          transformers:
          - args:
              field:
                value:
                  simple: priority
            operator: getField
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Sets variable for the offending rule priority in the list of rules
        returned.
      id: c98dc204-241c-4c23-8de5-f9e778ac7395
      iscommand: false
      name: Set variable for offending rule priority
      script: Set
      type: regular
      version: -1
    taskid: c98dc204-241c-4c23-8de5-f9e778ac7395
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 510,
          "y": -40
        }
      }
  "44":
    continueonerrortype: ""
    id: "44"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "46"
    note: false
    quietmode: 0
    scriptarguments:
      action:
        simple: Deny
      destination:
        complex:
          root: inputs.AzureVMPrivateIP
      destination_ports:
        complex:
          root: inputs.RemotePort
      direction:
        simple: Inbound
      priority:
        complex:
          root: AvailableAzureNSGPriorities
          transformers:
          - args:
              index:
                value:
                  simple: "0"
            operator: atIndex
      protocol:
        complex:
          root: inputs.RemoteProtocol
      resource_group_name:
        complex:
          root: inputs.ResourceGroup
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      security_group_name:
        complex:
          root: inputs.AzureSecurityGroup
      security_rule_name:
        complex:
          root: inputs.RemotePort
          transformers:
          - args:
              prefix:
                value:
                  simple: remediation-deny-port-
              suffix:
                value:
                  simple: '-'
            operator: concat
          - args:
              prefix: {}
              suffix:
                value:
                  simple: ${inputs.RemoteProtocol}
            operator: concat
      source:
        simple: Internet
      source_ports:
        simple: '*'
      subscription_id:
        complex:
          root: inputs.SubscriptionID
          transformers:
          - args:
              applyIfEmpty: {}
              defaultValue: {}
            operator: SetIfEmpty
      using:
        simple: ${inputs.InstanceName}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Azure Network Security Groups
      description: |-
        Create a security rule that denies all internet traffic to exposed public IPs (using the private IP) with an additional public IP (using the private IP). If one does not exist, it will be created.

        Private IPs are used in NSG rules in place of public IPs, as explained in [Microsoft Azure's documentation](https://learn.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview).
      id: 76be7dd2-448b-47b5-8ad1-8e5197e74bc8
      iscommand: true
      name: Add block rule for port ${inputs.RemotePort}
      script: Azure Network Security Groups|||azure-nsg-security-rule-create
      type: regular
      version: -1
    taskid: 76be7dd2-448b-47b5-8ad1-8e5197e74bc8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 960,
          "y": 1720
        }
      }
  "45":
    continueonerrortype: ""
    id: "45"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "44"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: f9dd66ef-8a63-4f79-855a-c33bf6f69ebc
      iscommand: false
      name: Create Deny Rule
      type: title
      version: -1
    taskid: f9dd66ef-8a63-4f79-855a-c33bf6f69ebc
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 960,
          "y": 1585
        }
      }
  "46":
    continueonerrortype: ""
    id: "46"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: remediatedFlag
      stringify:
        simple: "false"
      value:
        simple: "true"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: cfbd8031-0897-427a-8801-aa8784d41da1
      iscommand: false
      name: Set remediatedFlag to true
      script: Set
      type: regular
      version: -1
    taskid: cfbd8031-0897-427a-8801-aa8784d41da1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 210,
          "y": 2230
        }
      }
  "47":
    continueonerrortype: ""
    id: "47"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: remediatedFlag
      stringify:
        simple: "false"
      value:
        simple: "false"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: cfcf7d60-5bea-4f24-8b19-3a8b5f7f926e
      iscommand: false
      name: Set remediatedFlag to false
      script: Set
      type: regular
      version: -1
    taskid: cfcf7d60-5bea-4f24-8b19-3a8b5f7f926e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1370,
          "y": 2240
        }
      }
  "48":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ${azureOffendingRulePriority}
          operator: isEqualString
          right:
            value:
              simple: "100"
      label: "yes"
    continueonerrortype: ""
    id: "48"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "40"
      "yes":
      - "49"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the the offending rule's priority is 100 (highest).
      id: a398e163-bf7b-4353-8492-43da8d89fca2
      iscommand: false
      name: Is offending rule priority 100?
      type: condition
      version: -1
    taskid: a398e163-bf7b-4353-8492-43da8d89fca2
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 510,
          "y": 150
        }
      }
  "49":
    continueonerrortype: ""
    id: "49"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "47"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: remediatedReason
      value:
        simple: Offending rule priority of 100
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 11568067-90be-45c1-81a7-f22d1e6cd356
      iscommand: false
      name: Set remediatedReason
      script: Set
      type: regular
      version: -1
    taskid: 11568067-90be-45c1-81a7-f22d1e6cd356
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 910,
          "y": 400
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "22_43_yes": 0.63,
      "22_47_#default#": 0.34,
      "34_35_Update": 0.65,
      "38_39_#default#": 0.58,
      "4_1_yes": 0.46,
      "4_47_#default#": 0.35
    },
    "paper": {
      "dimensions": {
        "height": 3175,
        "width": 1540,
        "x": 210,
        "y": -700
      }
    }
  }
