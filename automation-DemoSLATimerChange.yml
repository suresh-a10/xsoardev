args:
- name: new
- name: old
commonfields:
  id: 73c4d1a5-b702-401c-8984-ba1028cbb1fe
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.8.36650
enabled: true
engineinfo: {}
mainengineinfo: {}
name: DemoSLATimerChange
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2

  from typing import Dict, Any
  import traceback
  #from datetime import datetime, timedelta




  #updated_time = current_time + timedelta(minutes = value)
  #print(datetime.strftime(updated_time,"%B %d, %Y %I:%M %p"))

  # TODO: ADD additional command functions that translate XSOAR inputs/outputs


  ''' MAIN FUNCTION '''

  severity_dict = {'Low':1440,'Medium':2880,'High':4320}
  def main():
      try:
          new = demisto.args()['new']
          for key,value in severity_dict.items():
              if new in key:
                  #demisto.results('startTimer',{'timerField':'demoslatimer'})
                  demisto.executeCommand("setIncident", {"slaField":"demoslatimer","sla":value})
          #return_results(basescript_dummy_command(demisto.args()))
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()
scripttarget: 0
subtype: python3
tags:
- field-change-triggered
type: python
