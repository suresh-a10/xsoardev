comment: Export all Incident, Context and Widget data into Json format output.
commonfields:
  id: HealthCheckExportSummary
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 3.0.0
    packID: HealthCheck
    packName: System Diagnostics and Health Check
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.14.100715
enabled: true
engineinfo: {}
mainengineinfo: {}
name: HealthCheckExportSummary
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('HealthCheckExportSummary', 'start', __line__())
  demisto.debug('pack name = System Diagnostics and Health Check, pack version = 3.0.0')


  import json

  ctx = demisto.context()
  incident = demisto.incidents()[0]

  main = {
      'incident': incident,
      'ctx': ctx,
      'widgets': {}
  }

  # Save data from widgets

  # Disk Usage Percentage
  res = demisto.executeCommand("HealthCheckDiskUsage", {})[0]['Contents']
  json.loads(res).get('stats')
  main['widgets']['DiskUsagePerCentage'] = json.loads(res).get('stats')

  # Disk Usage Line
  res = demisto.executeCommand("HealthCheckDiskUsageLine", {})[0]['Contents']
  json.loads(res).get('stats')
  main['widgets']['DiskUsagePerLine'] = json.loads(res).get('stats')

  # Memory Usage
  res = demisto.executeCommand("HealthCheckMemory", {})[0]['Contents']
  json.loads(res).get('stats')
  main['widgets']['MemoryUsage'] = json.loads(res).get('stats')

  # CPU Usage
  res = demisto.executeCommand("HealthCheckCPU", {})[0]['Contents']
  main['widgets']['CPUUsage'] = json.loads(res).get('stats')

  # HealthCheckIncidentsCreatedMonthly
  res = demisto.executeCommand("HealthCheckIncidentsCreatedMonthly", {})[0]['Contents']
  main['widgets']['IncidentsCreatedMonthly'] = json.loads(res).get('stats')


  # HealthCheckIncidentsCreatedWeekly
  res = demisto.executeCommand("HealthCheckIncidentsCreatedWeekly", {})[0]['Contents']
  main['widgets']['IncidentsCreatedWeekly'] = json.loads(res).get('stats')

  # HealthCheckIncidentsCreatedDaily
  res = demisto.executeCommand("HealthCheckIncidentsCreatedDaily", {})[0]['Contents']
  main['widgets']['IncidentsCreatedDaily'] = json.loads(res).get('stats')


  variables = json.dumps(main).encode('utf-8')
  variables2 = json.loads(variables)
  demisto.results(fileResult('HealthCheckDataExport.txt', variables))

  register_module_line('HealthCheckExportSummary', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags: []
type: python
