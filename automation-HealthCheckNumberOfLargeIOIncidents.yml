comment: Widget Script to present the number of incidents with large input and outputs.
commonfields:
  id: HealthCheckNumberOfLargeIOIncidents
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.0.0
    itemVersion: 3.0.2
    packID: HealthCheck
    packName: System Diagnostics and Health Check
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.11.10.113941
enabled: true
engineinfo: {}
mainengineinfo: {}
name: HealthCheckNumberOfLargeIOIncidents
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('HealthCheckNumberOfLargeIOIncidents', 'start', __line__())
  demisto.debug('pack name = System Diagnostics and Health Check, pack version = 3.0.2')



  GREEN_HTML_STYLE = "color:#00CD33;text-align:center;font-size:800%;>"
  XSOARV8_HTML_STYLE = "color:#FFBE98;text-align:center;font-size:150%;>"


  def main():
      if is_demisto_version_ge("8.0.0"):
          msg = "Not Available for XSOAR v8"
          html = f"<h3 style={XSOARV8_HTML_STYLE}{str(msg)}</h3>"
          demisto.results({"ContentsFormat": formats["html"], "Type": entryTypes["note"], "Contents": html})
          sys.exit()
      else:
          incident = demisto.incidents()
          query = incident[0].get("CustomFields", {}).get("healthchecknumberofinvestigationsinputoutputbiggerthan1mb", 0)

          html = f"<h1 style={GREEN_HTML_STYLE}{str(query)}</h1>"

          demisto.results({"ContentsFormat": formats["html"], "Type": entryTypes["note"], "Contents": html})


  if __name__ in ["__main__", "builtin", "builtins"]:
      main()

  register_module_line('HealthCheckNumberOfLargeIOIncidents', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
