args:
- description: The JSON object that should be converted to a HTML table.
  name: value
  required: true
comment: Converts JSON objects to HTML tables.
commonfields:
  id: Json2HtmlTable
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.5.0
    itemVersion: 1.3.8
    packID: CommunityCommonScripts
    packName: Community Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/py3-tools:1.0.0.114656
engineinfo: {}
mainengineinfo: {}
name: Json2HtmlTable
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('Json2HtmlTable', 'start', __line__())
  demisto.debug('pack name = Community Common Scripts, pack version = 1.3.8')


  """Converts a JSON object into a HTML table"""


  import json
  from json2html import json2html
  from typing import Any


  ''' STANDALONE FUNCTION '''


  def get_json_from_string(value: Any) -> dict | str | None:
      """Returns the JSON content from a string if possible

      Args:
          value (Any): The input to be parsed

      Returns:
          dict | str: The parsed JSON content if possible
      """

      json_string: str | None = None

      if isinstance(value, str):
          json_string = value

      if isinstance(value, list) and len(value) == 1 and isinstance(value[0], str):
          json_string = value[0]

      try:
          return json.loads(json_string) if json_string else None
      except json.JSONDecodeError:
          return json_string


  def json_to_html(value: str) -> str:
      """Converts the given JSON string into a HTML table

      Args:
          value (str): The JSON object string to convert

      Returns:
          str: The HTML table string
      """

      json_value: dict | str | None = get_json_from_string(value=value)

      return json2html.convert(json=json_value)


  ''' COMMAND FUNCTION '''


  def json_to_html_command(args: dict[str, Any]) -> CommandResults:

      json_value = args.get('value', None)
      if not json_value:
          raise ValueError('JSON object was not specified!')

      result = json_to_html(value=json_value)

      return CommandResults(
          outputs_prefix='Json2HtmlTable',
          outputs_key_field='',
          outputs=result,
      )


  ''' MAIN FUNCTION '''


  def main():
      try:
          return_results(json_to_html_command(demisto.args()))
      except Exception as ex:
          return_error(f'Failed to execute Json2HtmlTable. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('Json2HtmlTable', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- basescript
- tansformer
type: python
