contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
id: c01ebac0-6831-454a-8f5b-ff5a2f6d086a
inputs:
- description: ""
  key: IP Address
  playbookInputQuery: null
  required: false
  value:
    complex:
      accessor: IP
      root: ExtractedIndicators
name: TCS-IP Address  Verification_IOC Blocking v1.0_WIP_KK
outputs: []
sourceplaybookid: 10a892d4-e4b5-4b5e-80ea-dcaccb53541a
starttaskid: "0"
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: a3311858-346b-407a-8ef1-db659d88762e
      iscommand: false
      name: ""
      version: -1
    taskid: a3311858-346b-407a-8ef1-db659d88762e
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": -210,
          "y": -100
        }
      }
  "2":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ExtractedIndicators.IP
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "48"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 07f4cc1f-2bb6-4633-802a-8b455d6bc376
      iscommand: false
      name: Are there any IP addresses ?
      type: condition
      version: -1
    taskid: 07f4cc1f-2bb6-4633-802a-8b455d6bc376
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -210,
          "y": 120
        }
      }
  "3":
    continueonerror: true
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "13"
      "yes":
      - "7"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Microsoft Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 42240e00-e0f4-4c07-868e-cced4577d872
      iscommand: false
      name: Does IP Address Belong To Microsoft ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 42240e00-e0f4-4c07-868e-cced4577d872
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 20,
          "y": 380
        }
      }
  "4":
    continueonerrortype: ""
    id: "4"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Microsoft IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score report.\n\nMicrosoft:\n\n${Address.MIP} \n\n\nRegards,\nCSOC
          CyberAutoBot"
      subject:
        simple: Found Microsoft IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: baf1cfe1-bb1d-4b39-8765-e0c9e8db5dbd
      iscommand: true
      name: Send Email Notification That Microsoft IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: baf1cfe1-bb1d-4b39-8765-e0c9e8db5dbd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1500
        }
      }
  "7":
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "40"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.MIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: b684b23f-f6b7-4eed-845f-0a4e007ef10a
      iscommand: false
      name: Set Microsoft IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: b684b23f-f6b7-4eed-845f-0a4e007ef10a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 20,
          "y": 580
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "57"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address1.IP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "no"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 286f7783-141d-45bf-868f-56db580deae1
      iscommand: false
      name: Set Output into Context
      script: Set
      type: regular
      version: -1
    taskid: 286f7783-141d-45bf-868f-56db580deae1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 490,
          "y": 570
        }
      }
  "11":
    continueonerror: true
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "3"
      "no":
      - "10"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Google Public IP Addresses},${lists.Microsoft Public IP Addresses},${lists.TCS
          Public IP Addresses},${lists.MasterIOC_IP Address}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 25df985e-2f06-4129-8923-65fd9c9c329a
      iscommand: false
      name: Does IP Address Belong To Microsoft, Google or TCS ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 25df985e-2f06-4129-8923-65fd9c9c329a
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 490,
          "y": 380
        }
      }
  "12":
    continueonerror: true
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "34"
      - "53"
      "yes":
      - "16"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.TCS Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: aae0ecdf-65ff-43a8-867d-5de203d5959f
      iscommand: false
      name: Does IP Address Belong To TCS ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: aae0ecdf-65ff-43a8-867d-5de203d5959f
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -890,
          "y": 380
        }
      }
  "13":
    continueonerror: true
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "12"
      "yes":
      - "15"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.Google Public IP Addresses}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 52b710bf-e58a-4a8e-83fc-95c94aa08ceb
      iscommand: false
      name: Does IP Address Belong To Google ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 52b710bf-e58a-4a8e-83fc-95c94aa08ceb
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -440,
          "y": 380
        }
      }
  "14":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "20"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 6a488cef-6b43-4c67-8b8b-436d4ebbebe3
      iscommand: false
      name: Is There a TCS IP Address ?
      type: condition
      version: -1
    taskid: 6a488cef-6b43-4c67-8b8b-436d4ebbebe3
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 240,
          "y": 1260
        }
      }
  "15":
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "41"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.GIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 73fc9e88-43c5-494e-8a25-787a75ac4eb0
      iscommand: false
      name: Set Google IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 73fc9e88-43c5-494e-8a25-787a75ac4eb0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -440,
          "y": 580
        }
      }
  "16":
    continueonerrortype: ""
    id: "16"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "42"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.TIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 398edfff-f2ec-448e-8d4c-7ec4f4e02264
      iscommand: false
      name: Set TCS IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 398edfff-f2ec-448e-8d4c-7ec4f4e02264
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -890,
          "y": 580
        }
      }
  "17":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "17"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "19"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: a45c7f3b-da7a-4dcd-8429-c363dd532425
      iscommand: false
      name: Is There a Google IP Address ?
      type: condition
      version: -1
    taskid: a45c7f3b-da7a-4dcd-8429-c363dd532425
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1260
        }
      }
  "18":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "4"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 54acbf8f-7ccc-4155-8e68-a2610a6200c6
      iscommand: false
      name: Is There a  Microsoft           IP Address ?
      type: condition
      version: -1
    taskid: 54acbf8f-7ccc-4155-8e68-a2610a6200c6
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -630,
          "y": 1260
        }
      }
  "19":
    continueonerrortype: ""
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Google IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score report.\n\nGoogle:\n\n${Address.GIP}\n\n\nRegards,\nCSOC
          CyberAutoBot"
      subject:
        simple: Found Google IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: f32e7291-73b3-45e8-8fad-1892e8223cbd
      iscommand: true
      name: Send Email Notification That Google IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: f32e7291-73b3-45e8-8fad-1892e8223cbd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1500
        }
      }
  "20":
    continueonerrortype: ""
    id: "20"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found TCS IP Addresses in this file ${incident.attachment.name}.
          \nPFA Risk Score report.\n\nTCS:\n\n${Address.TIP} \n\n\nRegards,\nCSOC
          CyberAutoBot"
      subject:
        simple: Found TCS IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: dccbe83e-edac-4dad-8a75-4632535aba9a
      iscommand: true
      name: Send Email Notification That TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: dccbe83e-edac-4dad-8a75-4632535aba9a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 240,
          "y": 1500
        }
      }
  "21":
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Microsoft and TCS IP Addresses in this file
          ${incident.attachment.name}. \nPFA Risk Score Report.\n\nMicrosoft:\n\n${Address.MIP}
          \n\nTCS:\n\n${Address.TIP}\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found Microsoft and TCS IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: e2cf5497-28f6-4aac-802a-ae915f7f10c0
      iscommand: true
      name: Send Email Notification That TCS & Microsoft IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: e2cf5497-28f6-4aac-802a-ae915f7f10c0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1070,
          "y": 1500
        }
      }
  "22":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "30"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2f09a2a3-6e31-4f72-89ce-bcf61b25ca4d
      iscommand: false
      name: Is There a Google & TCS  IP Address ?
      type: condition
      version: -1
    taskid: 2f09a2a3-6e31-4f72-89ce-bcf61b25ca4d
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 680,
          "y": 1260
        }
      }
  "23":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "31"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: ba1f2a97-6ebd-4fe7-89f3-91647d17bd9e
      iscommand: false
      name: Is There a Google & Microsoft  IP Address ?
      type: condition
      version: -1
    taskid: ba1f2a97-6ebd-4fe7-89f3-91647d17bd9e
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1120,
          "y": 1260
        }
      }
  "24":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "24"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "32"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2cf9ae17-51ea-43b1-8143-098ac0f9ffd2
      iscommand: false
      name: Is There a Google, Microsoft & TCS  IP Address ?
      type: condition
      version: -1
    taskid: 2cf9ae17-51ea-43b1-8143-098ac0f9ffd2
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1510,
          "y": 1260
        }
      }
  "25":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isNotEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "25"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "21"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: ad1e6595-2f65-4fe4-81b9-e924480ec037
      iscommand: false
      name: Is There a Microsoft & TCS  IP Address ?
      type: condition
      version: -1
    taskid: ad1e6595-2f65-4fe4-81b9-e924480ec037
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1070,
          "y": 1260
        }
      }
  "30":
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found TCS and Google IP Addresses in this file
          ${incident.attachment.name}. \nPFA Risk Score report.\n\nTCS:\n\n${Address.TIP}
          \n\nGoogle:\n\n${Address.GIP}\n\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found TCS and Google IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: ab755c34-c2d6-4bf9-8f44-b862ad43ee24
      iscommand: true
      name: Send Email Notification That Google & TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: ab755c34-c2d6-4bf9-8f44-b862ad43ee24
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 680,
          "y": 1500
        }
      }
  "31":
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Google and Microsoft IP Addresses in this
          file ${incident.attachment.name}.\nPFA Risk Score report.\n\nMicrosoft:\n\n${Address.MIP}
          \n\nGoogle:\n\n${Address.GIP}\n\nRegards,\nCSOC CyberAutoBot "
      subject:
        simple: Found Google and Microsoft IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 785c776c-3e80-4edc-8925-b19c444e9938
      iscommand: true
      name: Send Email Notification That Google & Microsoft IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 785c776c-3e80-4edc-8925-b19c444e9938
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1120,
          "y": 1500
        }
      }
  "32":
    continueonerrortype: ""
    id: "32"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      attachIDs:
        simple: ${.=val.File.filter(function(f){return f.EntryID;}).reduce(function(acc,
          f) {return f;}, null).EntryID}
      body:
        simple: "Hello Human,\n\nI found Google, Microsoft and TCS  IP Addresses in
          this file ${incident.attachment.name}. \nPFA Risk Score Report.\n\nGoogle:\n\n${Address.GIP}\n\nMicrosoft:\n\n${Address.MIP}
          \n\nTCS:\n\n${Address.TIP}\n\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found Google, Microsoft and TCS  IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 7daac75c-a2f5-4fe2-871a-08a46b2ea491
      iscommand: true
      name: Send Email Notification That Google, Microsoft & TCS IP Address Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 7daac75c-a2f5-4fe2-871a-08a46b2ea491
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1510,
          "y": 1500
        }
      }
  "33":
    continueonerrortype: ""
    id: "33"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d07fe471-93da-4b13-85f1-bb4adb71da12
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: d07fe471-93da-4b13-85f1-bb4adb71da12
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1905
        }
      }
  "34":
    continueonerrortype: ""
    id: "34"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "44"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: ffea73fb-d67c-4aa6-884c-d868a151f9ab
      iscommand: false
      name: Generate Report & Notify
      type: title
      version: -1
    taskid: ffea73fb-d67c-4aa6-884c-d868a151f9ab
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": -200,
          "y": 930
        }
      }
  "35":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Address.GIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.MIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              simple: Address.TIP
          operator: isNotExists
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Email/subject
                root: incident.labels
                transformers:
                - operator: toLowerCase
          operator: isEqualString
          right:
            value:
              simple: check for trusted ioc
      label: "yes"
    continueonerrortype: ""
    id: "35"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "yes":
      - "36"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 98047ab6-7d3b-41fe-8a4a-d6bd5573f653
      iscommand: false
      name: Verify There Are No Customer IP Addresses In The List ?
      type: condition
      version: -1
    taskid: 98047ab6-7d3b-41fe-8a4a-d6bd5573f653
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1560,
          "y": 1260
        }
      }
  "36":
    continueonerrortype: ""
    id: "36"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI did not find any customer IP Addresses in this
          file ${incident.attachment.name}\n\n\nRegards,\nCSOC CyberAutoBot "
      subject:
        simple: No Customer IP Addresses Found In This File ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 98dab7d0-b16d-44e8-8e7f-470f7c3207cc
      iscommand: true
      name: Send Email Notification That No Customer IP Addresses Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 98dab7d0-b16d-44e8-8e7f-470f7c3207cc
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1560,
          "y": 1500
        }
      }
  "40":
    continueonerrortype: ""
    id: "40"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.MIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: eff74358-210a-4ed8-89dd-e565bd140398
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: eff74358-210a-4ed8-89dd-e565bd140398
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 20,
          "y": 760
        }
      }
  "41":
    continueonerrortype: ""
    id: "41"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.GIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: 7ec24617-23e0-4d91-880b-76f965a3b198
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: 7ec24617-23e0-4d91-880b-76f965a3b198
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -440,
          "y": 760
        }
      }
  "42":
    continueonerrortype: ""
    id: "42"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
      - "53"
    note: false
    quietmode: 0
    scriptarguments:
      ip:
        simple: ${Address.TIP}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Recorded Future v2
      description: Gets a quick indicator of the risk associated with an IP address.
      id: 8d462858-b9f3-409b-8d29-88bc684eec75
      iscommand: true
      name: Get Risk Score
      script: Recorded Future v2|||ip
      type: regular
      version: -1
    taskid: 8d462858-b9f3-409b-8d29-88bc684eec75
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -890,
          "y": 760
        }
      }
  "43":
    continueonerrortype: ""
    id: "43"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "24"
      - "25"
      - "18"
      - "17"
      - "14"
      - "22"
      - "23"
    note: false
    quietmode: 0
    scriptarguments:
      csvArray:
        simple: ${RecordedFuture.IP}
      fileName:
        simple: Risk Score.csv
      headers:
        simple: name,riskScore
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Export given array to csv file
      id: 0e55ed99-ed64-4acf-8736-25db502a2c0e
      iscommand: false
      name: Generate CSV Report
      script: ExportToCSV
      type: regular
      version: -1
    taskid: 0e55ed99-ed64-4acf-8736-25db502a2c0e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1080
        }
      }
  "44":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: RecordedFuture
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "44"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "35"
      "yes":
      - "43"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0532e42f-d093-421f-827f-b1c5d48e91e7
      iscommand: false
      name: Is There a Report To Generate
      type: condition
      version: -1
    taskid: 0532e42f-d093-421f-827f-b1c5d48e91e7
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 250,
          "y": 1080
        }
      }
  "45":
    continueonerrortype: ""
    id: "45"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      columns:
        simple: IOC,Risk Score
      context_path:
        simple: RecordedFuture.IP
      grid_id:
        simple: recordedfutureriskscore
      keys:
        simple: name,riskScore
      overwrite:
        simple: "true"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Creates a Grid table from items or key-value pairs.
      id: 5fe27e07-4f37-427d-8b9f-f5d4d5a1e3e9
      iscommand: false
      name: Populate The Risk Grid
      script: SetGridField
      type: regular
      version: -1
    taskid: 5fe27e07-4f37-427d-8b9f-f5d4d5a1e3e9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -640,
          "y": 1080
        }
      }
  "47":
    continueonerrortype: ""
    id: "47"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: |-
          Hello Human,

          You are not on my authorized list of senders to block these IP address. Please contact Your XSOAR Support team.

          Regards,
          CSOC Cyber AutoBot
      subject:
        simple: Not Authorized To Send Mail For Blocking IP Address
      to:
        simple: ${incident.labels.Email/from}
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 9ca2b8d0-fbf3-4898-8d97-e9b407b3dabb
      iscommand: true
      name: Send Email Notification - Not Authorized User
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 9ca2b8d0-fbf3-4898-8d97-e9b407b3dabb
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2000,
          "y": 1500
        }
      }
  "48":
    continueonerrortype: ""
    id: "48"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "11"
      "yes":
      - "49"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        complex:
          root: inputs.InternalRange
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: 248f4b18-f6c6-4af1-8169-34333991eaae
      iscommand: false
      name: Are There Any Internal IP Addresses ?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: 248f4b18-f6c6-4af1-8169-34333991eaae
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 940,
          "y": 380
        }
      }
  "49":
    continueonerrortype: ""
    id: "49"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "11"
      - "52"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: InternalAddress.IP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: eff7baa9-35e2-4cd3-8b2f-7af03178fce5
      iscommand: false
      name: Set Internal IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: eff7baa9-35e2-4cd3-8b2f-7af03178fce5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 940,
          "y": 570
        }
      }
  "50":
    continueonerrortype: ""
    id: "50"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI did not find an IP Addresses in this file ${incident.attachment.name}.
          \nPlease check your attachment and send it again.\n\nRegards,\nCSOC CyberAutoBot"
      subject:
        simple: Found Google, Microsoft and TCS  IP Addresses in this file ${incident.attachment.name}
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: 083bb39d-cd05-4127-8d71-1aeb555b3a31
      iscommand: true
      name: Send Email Notification That Google, Microsoft & TCS IP Address Found
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: 083bb39d-cd05-4127-8d71-1aeb555b3a31
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -2420,
          "y": 1500
        }
      }
  "51":
    continueonerrortype: ""
    id: "51"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address2.IP
      value:
        complex:
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Address1.IP
              operator: notIn
              right:
                iscontext: true
                value:
                  simple: InternalAddress.IP
          root: Address1.IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: e4970c7d-3248-45ec-81a1-9a34e6d0c891
      iscommand: false
      name: Set Non Customer IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: e4970c7d-3248-45ec-81a1-9a34e6d0c891
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 490,
          "y": 915
        }
      }
  "52":
    continueonerrortype: ""
    id: "52"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI found the following  internal IP addresses in this
          list ${incident.attachment.name}. Will be excluding them from my tasks.\n\nInternal
          IP Address: \n\n${InternalAddress.IP}\n\n\nRegards,\nCSOC Cyber AutoBot"
      subject:
        simple: Found Internal IP Addresses In This List ${incident.attachment.name}
      to:
        simple: ${incident.labels.Email/from}
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 847d24d6-0cc5-4f93-8e42-77a0d7f60e6e
      iscommand: true
      name: Send Email Notification - Internal IP Addresses Found
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 847d24d6-0cc5-4f93-8e42-77a0d7f60e6e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2000,
          "y": 1260
        }
      }
  "53":
    continueonerrortype: ""
    id: "53"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "34"
      "yes":
      - "54"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      ip:
        complex:
          accessor: IP
          root: ExtractedIndicators
      ipRanges:
        simple: ${lists.MasterIOC_IP Address}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns yes if the IP is in one of the ranges provided, returns
        no otherwise.
      id: ec018de8-e1bc-41a0-8cd9-f8f78e8e036b
      iscommand: false
      name: Are There Any IP Addresses From Master IOC?
      script: b502efb7-b0a1-449b-8d9e-31e8fe70f470
      type: condition
      version: -1
    taskid: ec018de8-e1bc-41a0-8cd9-f8f78e8e036b
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": -1340,
          "y": 380
        }
      }
  "54":
    continueonerrortype: ""
    id: "54"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "34"
      - "59"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      key:
        simple: Address.MasterIP
      value:
        complex:
          accessor: Address
          filters:
          - - left:
                iscontext: true
                value:
                  simple: IP.InRange
              operator: isEqualString
              right:
                value:
                  simple: "yes"
          root: IP
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 5899720a-ad7d-48e9-815e-15239c599634
      iscommand: false
      name: Set Master IOC IP Address into Context
      script: Set
      type: regular
      version: -1
    taskid: 5899720a-ad7d-48e9-815e-15239c599634
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -1340,
          "y": 580
        }
      }
  "56":
    continueonerrortype: ""
    id: "56"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI found that below IP Addresses from the file ${incident.attachment.name}
          are already in the Master IOC list. I will not be performing any action
          on these IOCs.\n\nIP Address:\n\n${Address.MasterIP} \n\n\n\nRegards,\nCSOC
          CyberAutoBot "
      subject:
        simple: 'Found IP Address In This File ${incident.attachment.name} Already
          In Master IOC List '
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 8a255dce-0fa7-431a-893a-9c044f64595b
      iscommand: true
      name: Send Email Notification Found IP Address In Master IOC
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 8a255dce-0fa7-431a-893a-9c044f64595b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2430,
          "y": 1500
        }
      }
  "57":
    continueonerrortype: ""
    id: "57"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "33"
      "no":
      - "51"
      "yes":
      - "58"
    note: false
    quietmode: 0
    scriptarguments:
      left:
        complex:
          accessor: IP
          root: Address1
      right:
        complex:
          accessor: IP
          root: InternalAddress
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check whether the values provided in arguments are equal. If either
        of the arguments are missing, no is returned.
      id: dece9460-fccf-417e-8380-a36137958ba5
      iscommand: false
      name: AreValuesEqual
      script: AreValuesEqual
      type: condition
      version: -1
    taskid: dece9460-fccf-417e-8380-a36137958ba5
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 490,
          "y": 740
        }
      }
  "58":
    continueonerrortype: ""
    id: "58"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    reputationcalc: 1
    scriptarguments:
      body:
        simple: "Hello Human,\n\nI found that all IP Addresses in the file ${incident.attachment.name}
          are from the private IP Address Range. I will not be performing any action
          on these IOCs.\n\n\nRegards,\nCSOC CyberAutoBot "
      subject:
        simple: Found All IP Address In This File ${incident.attachment.name} Are
          From The Private IP Address Range
      to:
        complex:
          accessor: labels.Email/from
          root: incident
    separatecontext: false
    skipunavailable: false
    task:
      brand: EWS Mail Sender
      description: Sends an email using EWS.
      id: 7b823116-ec35-4542-8330-5f2305ca801c
      iscommand: true
      name: Send Email Notification All IP Address In The List Are From Private IP
        Address Range
      script: EWS Mail Sender|||send-mail
      type: regular
      version: -1
    taskid: 7b823116-ec35-4542-8330-5f2305ca801c
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2860,
          "y": 1260
        }
      }
  "59":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: ${incident.emailfrom}
          operator: isEqualString
          right:
            value:
              simple: ajit.menon@tcs.com
      label: "yes"
    continueonerrortype: ""
    id: "59"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "56"
      "yes":
      - "33"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 8aea69dc-6b0f-44a5-86cb-6c8c1f184099
      iscommand: false
      name: Is This Request From CSO?
      type: condition
      version: -1
    taskid: 8aea69dc-6b0f-44a5-86cb-6c8c1f184099
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 2430,
          "y": 1260
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2070,
        "width": 5660,
        "x": -2420,
        "y": -100
      }
    }
  }
