contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: Migration Playbook Contribution Pack
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
id: 847f9217-aaea-4d1a-8faa-0eb81d1d7322
inputs: []
name: Migration Playbook
outputs: []
starttaskid: "0"
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "21"
      - "22"
      - "23"
      - "24"
      - "17"
      - "34"
      - "35"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 26fb9ccb-fe95-4046-8d19-eabe10e11cb1
      iscommand: false
      name: ""
      version: -1
    taskid: 26fb9ccb-fe95-4046-8d19-eabe10e11cb1
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 50
        }
      }
  "1":
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 2
    scriptarguments:
      body:
        simple: '{"size":500}'
      extend-context:
        simple: |
          integration=response.instances={"brand":val.brand || "None","name":val.name || "None", "modified":val.modified|| "None", "fetch": val.configvalues.isFetch || "False", "islongrunning":val.islongRunning || "False", "enginegroup" :val.engineGroup || "None"}
      ignore-outputs:
        simple: "true"
      uri:
        simple: /settings/integration/search
      using:
        simple: ${incident.coreapiinstance}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: send HTTP POST request.
      id: 8babc4f6-e85d-43e6-8b14-2289f8943304
      iscommand: true
      name: Get integrations
      script: '|||core-api-post'
      type: regular
      version: -1
    taskid: 8babc4f6-e85d-43e6-8b14-2289f8943304
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 690
        }
      }
  "2":
    continueonerrortype: ""
    id: "2"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: integrationinstances
      keys:
        simple: brand,name,modified,fetch,islongrunning,enginegroup
      val1:
        simple: ${integration.brand}
      val2:
        simple: ${integration.name}
      val3:
        simple: ${integration.modified}
      val4:
        simple: ${integration.fetch}
      val5:
        simple: ${integration.islongrunning}
      val6:
        simple: ${integration.enginegroup}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 06436088-fe03-45d3-81fc-70b96f051504
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 06436088-fe03-45d3-81fc-70b96f051504
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1040
        }
      }
  "3":
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "2"
    note: false
    quietmode: 0
    scriptarguments:
      integrationinstances:
        simple: ''''''
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: 1e62625f-2374-4384-8beb-46d10c160831
      iscommand: true
      name: Set Grid Field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 1e62625f-2374-4384-8beb-46d10c160831
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 865
        }
      }
  "4":
    continueonerrortype: ""
    id: "4"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: 'incidentInfo=Contents.data={"type": val.type, "name": val.name}'
      ignore-outputs:
        simple: "true"
      query:
        simple: status:active
      size:
        simple: "2000"
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: "Searches Cortex XSOAR Incidents and returnrs the most relevant
        fields. Default search range is the last 30 days, if you want to change this,
        use the fromDate argument. \n\nReturns the id, name, type, severity, status,
        owner, and created/closed times to context.  You can add additional fields
        using the add_field_to_context argument.\n\nThis automation runs using the
        default Limited User role, unless you explicitly change the permissions.  Based
        on the SearchIncidentsV2 from the Common Scripts pack, but more efficient."
      id: e6ec1b29-7558-4644-86bb-091a009ca3de
      iscommand: false
      name: Get Incidents
      script: SearchIncidentsSummary
      type: regular
      version: -1
    taskid: e6ec1b29-7558-4644-86bb-091a009ca3de
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 340
        }
      }
  "5":
    continueonerrortype: ""
    id: "5"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: uniqueTypes
      value:
        complex:
          accessor: type
          root: incidentInfo
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Set a value in context under the key you entered.
      id: 254b68a7-6e59-4fa6-880b-11d5c0de5655
      iscommand: false
      name: Set Incident  Unique Type
      script: Set
      type: regular
      version: -1
    taskid: 254b68a7-6e59-4fa6-880b-11d5c0de5655
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 515
        }
      }
  "7":
    continueonerrortype: ""
    id: "7"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    scriptarguments:
      my_dict_list:
        simple: ${incidentInfo}
      my_list:
        simple: ${uniqueTypes}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 1409795a-4c83-4efb-8bc6-dd292b209b49
      iscommand: false
      name: Calculate Number of Incidents Per Type
      script: 501d9489-63e2-4f90-8c4f-7b183584e997
      type: regular
      version: -1
    taskid: 1409795a-4c83-4efb-8bc6-dd292b209b49
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 690
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    quietmode: 0
    scriptarguments:
      incidentinfo:
        simple: ''''''
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: fb522f8b-46d5-4747-8c95-f448bb8c62d9
      iscommand: true
      name: Set Grid Field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: fb522f8b-46d5-4747-8c95-f448bb8c62d9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 865
        }
      }
  "9":
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: incidentinfo
      keys:
        simple: name,count
      val1:
        simple: ${incidentsNo.name}
      val2:
        simple: ${incidentsNo.count}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 833bbdca-99a5-4b6a-8cce-9d15bbc1f9cf
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 833bbdca-99a5-4b6a-8cce-9d15bbc1f9cf
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1040
        }
      }
  "10":
    continueonerrortype: ""
    id: "10"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "11"
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: users=.={"name":val.name,"email":val.email || "N/A", "roles":val.roles.demisto.join(',')}
      ignore-outputs:
        simple: "true"
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.get.users
      id: f80d6d1b-e520-4475-8621-2a6296b59849
      iscommand: true
      name: Get Users
      script: Builtin|||getUsers
      type: regular
      version: -1
    taskid: f80d6d1b-e520-4475-8621-2a6296b59849
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 910,
          "y": 690
        }
      }
  "11":
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      getusers:
        simple: ''''''
      getusres:
        simple: ''''''
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: a426309b-3702-468f-859d-412300f3b634
      iscommand: true
      name: Set Grid Field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: a426309b-3702-468f-859d-412300f3b634
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 910,
          "y": 865
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: getusers
      keys:
        simple: name,mail,roles
      val1:
        simple: ${users.name}
      val2:
        simple: ${users.email}
      val3:
        simple: ${users.roles}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 99cc9570-d3f1-4103-8415-ac09587a6ad2
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 99cc9570-d3f1-4103-8415-ac09587a6ad2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 910,
          "y": 1040
        }
      }
  "14":
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "15"
    note: false
    quietmode: 0
    scriptarguments:
      incidenttypes:
        simple: ''''''
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: 28919129-9a90-4c89-8fdb-31a3ac25b7ea
      iscommand: true
      name: Set Grid Field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 28919129-9a90-4c89-8fdb-31a3ac25b7ea
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 865
        }
      }
  "15":
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: incidenttypes
      keys:
        simple: closurescript,created,isdisabled,layout,modified,name,playbookname
      val1:
        simple: ${incTypes.closurescript}
      val2:
        simple: ${incTypes.created}
      val3:
        simple: ${incTypes.isdisabled}
      val4:
        simple: ${incTypes.layout}
      val5:
        simple: ${incTypes.modified}
      val6:
        simple: ${incTypes.name}
      val7:
        simple: ${incTypes.playbookname}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 9f6a0e92-65f2-4edf-8c6e-0ee8c55dc4f8
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 9f6a0e92-65f2-4edf-8c6e-0ee8c55dc4f8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1040
        }
      }
  "16":
    continueonerrortype: ""
    id: "16"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "14"
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: incTypes=response={"name":val.name,"playbookname":val.playbookId  ||
          "None","layout":val.layout,"created":val.created || "None","modified":val.modified
          || "None","isdisabled":val.disabled || "None", "closurescript":val.closureScript  ||
          "None"}
      ignore-outputs:
        simple: "false"
      uri:
        simple: /incidenttype
      using:
        simple: ${incident.coreapiinstance}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: send HTTP GET requests.
      id: e5acb08b-d07f-4df8-84f5-ec168ef2a261
      iscommand: true
      name: Get Incident Types Configuration
      script: '|||core-api-get'
      type: regular
      version: -1
    taskid: e5acb08b-d07f-4df8-84f5-ec168ef2a261
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 690
        }
      }
  "17":
    continueonerrortype: ""
    id: "17"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "18"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0998ed4d-ab1c-4f8a-8ee6-1c82ed80fd91
      iscommand: false
      name: Get PreProcess Rules Summary
      type: title
      version: -1
    taskid: 0998ed4d-ab1c-4f8a-8ee6-1c82ed80fd91
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1892.5,
          "y": 195
        }
      }
  "18":
    continueonerrortype: ""
    id: "18"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "37"
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: 'preProcess=response={"name": val.name,"created": val.created || "None","modified":
          val.modified,"filters": val.newEventFilters,"action": val.action,"linkto":
          val.linkTo,"scriptid": val.scriptID || "None","enabled": val.enabled}'
      uri:
        simple: /preprocess/rules
      using:
        simple: ${incident.coreapiinstance}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: send HTTP GET requests.
      id: ff0c663b-1588-47cd-8ade-cbdb21b56176
      iscommand: true
      name: Get PreProcess Rules
      script: '|||core-api-get'
      type: regular
      version: -1
    taskid: ff0c663b-1588-47cd-8ade-cbdb21b56176
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1892.5,
          "y": 340
        }
      }
  "19":
    continueonerrortype: ""
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "20"
    note: false
    quietmode: 0
    scriptarguments:
      getusres:
        simple: ''''''
      preprocess:
        simple: ''''''
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: 5ebe54cd-3ead-49af-80b6-b7dc82864a53
      iscommand: true
      name: Set Grid Field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 5ebe54cd-3ead-49af-80b6-b7dc82864a53
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1892.5,
          "y": 865
        }
      }
  "20":
    continueonerrortype: ""
    id: "20"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: preprocess
      keys:
        simple: name, created,modified,filters,action,linkto,scriptid,enabled
      val1:
        simple: ${preProcess.name}
      val2:
        simple: ${preProcess.created}
      val3:
        simple: ${preProcess.modified}
      val4:
        complex:
          accessor: filters
          root: preProcess
          transformers:
          - operator: StringifyArray
      val5:
        simple: ${preProcess.action}
      val6:
        simple: ${preProcess.linkto}
      val7:
        simple: ${preProcess.scriptid}
      val8:
        simple: ${preProcess.enabled}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 515e4d32-37c9-4907-8d6d-a0aadc54530b
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 515e4d32-37c9-4907-8d6d-a0aadc54530b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1892.5,
          "y": 1040
        }
      }
  "21":
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 6f502ffa-833c-46ea-82a3-d5e290dd68dd
      iscommand: false
      name: Get Integration Summary
      type: title
      version: -1
    taskid: 6f502ffa-833c-46ea-82a3-d5e290dd68dd
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 50,
          "y": 530
        }
      }
  "22":
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 9e6dc626-ba2d-45ec-8bcc-386253b184cc
      iscommand: false
      name: Get Active Incidents Summary
      type: title
      version: -1
    taskid: 9e6dc626-ba2d-45ec-8bcc-386253b184cc
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 480,
          "y": 195
        }
      }
  "23":
    continueonerrortype: ""
    id: "23"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "10"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 46483840-4632-468c-8bd7-d546938d2c3d
      iscommand: false
      name: Get Users Summary
      type: title
      version: -1
    taskid: 46483840-4632-468c-8bd7-d546938d2c3d
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 910,
          "y": 530
        }
      }
  "24":
    continueonerrortype: ""
    id: "24"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "16"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: edb5161e-ebaa-410c-8c1c-95e711d3d0dc
      iscommand: false
      name: Get Incident Type Configuration Summary
      type: title
      version: -1
    taskid: edb5161e-ebaa-410c-8c1c-95e711d3d0dc
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 530
        }
      }
  "26":
    continueonerrortype: ""
    id: "26"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 26a4d243-8131-4bc8-8465-76165b0132ba
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 26a4d243-8131-4bc8-8465-76165b0132ba
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1780,
          "y": 1215
        }
      }
  "27":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: preProcess
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "27"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "26"
      "yes":
      - "19"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 10da584d-1f55-4a02-8365-956d526e2acb
      iscommand: false
      name: PreProcess Exists?
      type: condition
      version: -1
    taskid: 10da584d-1f55-4a02-8365-956d526e2acb
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1780,
          "y": 690
        }
      }
  "28":
    continueonerrortype: ""
    id: "28"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "36"
    note: false
    quietmode: 0
    scriptarguments:
      body:
        simple: '{"page": 0, "size": 50, "query": "", "sort": [{"field": "id", "asc":
          false}]}'
      extend-context:
        simple: 'jobs=response.data={ "type" : val.rawType || "False", "closeprevrun"
          : val.closePrevRun || "False", "lastruntime" : val.closePrevRun || "False","prevrunstatus":
          val.previousRunStatus || "False", "isrecurrent" : val.recurrent || "False",
          "isfeed": val.isFeed || "False", "created": val.created || "False", "modified"
          : val.modified || "False"}'
      uri:
        simple: /jobs/search
      using:
        simple: ${incident.coreapiinstance}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: send HTTP POST request.
      id: 2109b8e8-37d2-4ce7-86e3-92fe928fce34
      iscommand: true
      name: Get Jobs
      script: '|||core-api-post'
      type: regular
      version: -1
    taskid: 2109b8e8-37d2-4ce7-86e3-92fe928fce34
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2455,
          "y": 515
        }
      }
  "29":
    continueonerrortype: ""
    id: "29"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "30"
    note: false
    quietmode: 0
    scriptarguments:
      jobs:
        simple: '""'
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: 0cdabc3d-478c-4c74-80bb-74bd6c102b57
      iscommand: true
      name: Set Grid
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 0cdabc3d-478c-4c74-80bb-74bd6c102b57
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2342.5,
          "y": 865
        }
      }
  "30":
    continueonerrortype: ""
    id: "30"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: jobs
      keys:
        simple: type,closeprevrun,lustruntime,prerunstatus,isrecurrent,isfeed,created,modified
      val1:
        simple: ${jobs.type}
      val2:
        simple: ${jobs.closeprevrun}
      val3:
        simple: ${jobs.lastruntime}
      val4:
        simple: ${jobs.prevrunstatus}
      val5:
        simple: ${jobs.isrecurrent}
      val6:
        simple: ${jobs.isfeed}
      val7:
        simple: ${jobs.created}
      val8:
        simple: ${jobs.modified}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: c3f3f04d-ab40-4a96-812b-1a18628dee95
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: c3f3f04d-ab40-4a96-812b-1a18628dee95
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2342.5,
          "y": 1040
        }
      }
  "31":
    continueonerrortype: ""
    id: "31"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "32"
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: 'list=response={"name": val.id || "None", "modified": val.modified
          || "None", "created" : val.created || "None", "size": val.sizeInBytes ||
          "None", "issystem": val.system || "False", "type": val.type, "description":
          val.description || "None", "datalength":val.data || "None"}'
      uri:
        simple: /lists
      using:
        simple: ${incident.coreapiinstance}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: send HTTP GET requests.
      id: 071318cd-92a8-4452-813a-2a41af0dbc4d
      iscommand: true
      name: Get Lists
      script: '|||core-api-get'
      type: regular
      version: -1
    taskid: 071318cd-92a8-4452-813a-2a41af0dbc4d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2895,
          "y": 690
        }
      }
  "32":
    continueonerrortype: ""
    id: "32"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "33"
    note: false
    quietmode: 0
    scriptarguments:
      lists:
        simple: '""'
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.set.incident
      id: a12569de-975b-43c1-8188-b8c635071c9d
      iscommand: true
      name: Set Grid Field
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: a12569de-975b-43c1-8188-b8c635071c9d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2895,
          "y": 865
        }
      }
  "33":
    continueonerrortype: ""
    id: "33"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "26"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: lists
      keys:
        simple: name,modified,created,size,issystem,type,description,datalength
      val1:
        simple: ${list.name}
      val2:
        simple: ${list.modified}
      val3:
        simple: ${list.created}
      val4:
        simple: ${list.size}
      val5:
        simple: ${list.issystem}
      val6:
        simple: ${list.type}
      val7:
        simple: ${list.description}
      val8:
        complex:
          accessor: datalength
          root: list
          transformers:
          - operator: strLength
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Automation used to more easily populate a grid field.  This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: cb972c9e-cfea-4dbb-8f35-644b67735553
      iscommand: false
      name: Grid Field Setup
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: cb972c9e-cfea-4dbb-8f35-644b67735553
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2895,
          "y": 1040
        }
      }
  "34":
    continueonerrortype: ""
    id: "34"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "28"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: da8fe3a4-8bb6-4ec5-8cf8-a845c87bc4f3
      iscommand: false
      name: Get Jobs Summary
      type: title
      version: -1
    taskid: da8fe3a4-8bb6-4ec5-8cf8-a845c87bc4f3
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 2455,
          "y": 355
        }
      }
  "35":
    continueonerrortype: ""
    id: "35"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "31"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: bcf57ae0-8d7b-4af9-84cd-5b26c5ddaf11
      iscommand: false
      name: Get Lists Summary
      type: title
      version: -1
    taskid: bcf57ae0-8d7b-4af9-84cd-5b26c5ddaf11
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 2895,
          "y": 530
        }
      }
  "36":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: jobs
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "36"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "26"
      "yes":
      - "29"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 2bb767bc-1f12-4678-80b6-c2ffe584e009
      iscommand: false
      name: jobs exist?
      type: condition
      version: -1
    taskid: 2bb767bc-1f12-4678-80b6-c2ffe584e009
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 2455,
          "y": 690
        }
      }
  "37":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: preProcess
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "37"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "26"
      "yes":
      - "27"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 0fc13083-ff55-4836-8caa-9a9b80599a9b
      iscommand: false
      name: any rule exist?
      type: condition
      version: -1
    taskid: 0fc13083-ff55-4836-8caa-9a9b80599a9b
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 1892.5,
          "y": 515
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1230,
        "width": 3225,
        "x": 50,
        "y": 50
      }
    }
  }
