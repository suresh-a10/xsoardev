comment: This script can be used to get user id who modified the incident lastly.
commonfields:
  id: 55d371c1-542c-461a-8c5f-42fae8392aac
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.9.40422
enabled: true
engineinfo: {}
mainengineinfo: {}
name: GetUserOfLastIncidentModified_v1
pswd: ""
runas: DBotRole
runonce: false
script: |2+


  from typing import Dict, Any
  import traceback



  ''' MAIN FUNCTION '''
  def get_user_id(user_id):
      if user_id == '':
          user_id='Dbot'
      else:
          pass
      return user_id

  def main():
      try:
          incident_data=demisto.incidents()[0]
          #new = demisto.args()['new']
          inc_custom_data = incident_data.get('CustomFields').get('demolongtext')

          entries_list=[]
          if len(inc_custom_data)>0:
              entries= demisto.executeCommand("getEntries", {'id':incident_data['id'],"filter":{"categories":['procedural']}})

              for ele in range(len(entries)):
                  entries_list.append({"ID":entries[ele]['ID'],"User":entries[ele]['Metadata']['user']})

              userID=entries_list[-1]["User"]
              #demisto.results({'hidden': False, 'options': [userID]})
              demisto.executeCommand("setIncident",{"lastmodifieduser":userID})
              #print(res)
              """
              entries_list = demisto.executeCommand('GetEntries',{'id':incident_data['id'],'category':'procedural'})[0]['Contents']
              Entry_IDs=[]
              for entry_id in entries_list:
                  Entry_IDs.append(entry_id['Metadata']['id'])

              #print(Entry_IDs)

              user_name = demisto.executeCommand("getEntry", {"id":Entry_IDs[-1]})
              user_id= user_name[0]['Metadata']['user']

              userID = get_user_id(user_id)
              #demisto.executeCommand("setIncident",{"lastmodifieduser":userID})
              demisto.results({'hidden': False, 'options': [userID]})
              """

              md = tableToMarkdown('Modified User Details',userID,headers=['id'],removeNull=True)
              entry_context = {'Modified.User(val.ID == obj.ID)':userID}
              demisto.results({
                  'Type': entryTypes['note'],
                  "Contents" : md,
                  'ContentsFormat': formats['json'],
                  'HumanReadable': md,
                  'ReadableContentsFormat' : formats['markdown'],
                  'EntryContext':entry_context
              })


      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags:
- dynamic-section
type: python
