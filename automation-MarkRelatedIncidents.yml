args:
- default: true
  description: The list of related incident IDs we want to mark.
  isArray: true
  name: related
  required: true
comment: "Marks given incidents as related to current incident.\n\nThis automation
  runs using the default Limited User role, unless you explicitly change the permissions.\nFor
  more information, see the section about permissions here:\n- For Cortex XSOAR 6
  see https://docs-cortex.paloaltonetworks.com/r/Cortex-XSOAR/6.x/Cortex-XSOAR-Playbook-Design-Guide/Automations
  \n- For Cortex XSOAR 8 Cloud see https://docs-cortex.paloaltonetworks.com/r/Cortex-XSOAR/8/Cortex-XSOAR-Cloud-Documentation/Create-a-script\n-
  For Cortex XSOAR 8.7 On-prem see https://docs-cortex.paloaltonetworks.com/r/Cortex-XSOAR/8.7/Cortex-XSOAR-On-prem-Documentation/Create-a-script"
commonfields:
  id: MarkRelatedIncidents
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 5.0.0
    itemVersion: 1.18.2
    packID: CommonScripts
    packName: Common Scripts
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
enabled: true
engineinfo: {}
mainengineinfo: {}
name: MarkRelatedIncidents
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  // pack version: 1.18.2
  var related = argToList(args.related);
  var openIncidents = [];
  var md = '### Related incidents found\n';
  for (var i=0; i<related.length; i++) {
      var incidentDetails = executeCommand('getIncidents', {id: related[i]});
      if (isValidRes(incidentDetails)) {
          md += '- ' + incidentDetails[0].Contents.data[0].name + ' [' + related[i] + '](/#/Details/' + related[i] + ')\n';
      }
      if (incidentDetails[0].Contents.data[0].status === 0 || incidentDetails[0].Contents.data[0].status === 1) {
          openIncidents.push(related[i]);
      }
  }
  var entry = {Type: entryTypes.note, Contents: related, ContentsFormat: formats.json,
      HumanReadable: '### Related incident found\n- ' + incidents[0].name + ' [' + incidents[0].id + '](/#/Details/' + incidents[0].id + ')\n', Note: true};
  var entryJson = JSON.stringify([entry]);
  for (var i=0; i<openIncidents.length; i++) {
      executeCommand('addEntries', {id: openIncidents[i], entries: entryJson});
  }

  return {Type: entryTypes.note, Contents: related, ContentsFormat: formats.json, HumanReadable: md, Note: true};
scripttarget: 0
system: true
tags:
- Utility
type: javascript
