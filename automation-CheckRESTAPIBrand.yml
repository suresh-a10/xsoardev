commonfields:
  id: e68ee5d1-04c3-4bc5-88b2-87848befb278
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: GetAllAPIEndpointsV1 Contribution Pack
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.10.10.48392
enabled: true
engineinfo: {}
mainengineinfo: {}
name: CheckRESTAPIBrand
outputs:
- contextPath: RESTAPIInstaceDetails.InstanceName
  description: Insatance Name
  type: string
- contextPath: RESTAPIInstaceDetails.Brand
  description: Brand Name
  type: string
pswd: ""
runas: DBotWeakRole
runonce: false
script: |2+


  from typing import Dict, Any
  import traceback




  def get_rest_api_instances():

      active_instances=[]

      instances = demisto.getModules()
      for instance_name, data in instances.items():
          if data.get('state') == 'active':
              if data.get('brand') == 'Demisto REST API' or data.get('brand') == 'Core REST API':
                  active_instances.append({
                      'InstanceName': instance_name,
                      'Brand': data.get('brand')
                  })
          else:
              print('No Integration is enabled')


      demisto.results({
                      "Contents":active_instances,
                      "ContentsFormat":formats['markdown'],
                      "Type":entryTypes["note"],
                      "HumanReadable":tableToMarkdown('Active Instances', active_instances),
                      "ReadableContentsFormat":formats['markdown'],
                      'EntryContext': {'RESTAPIInstaceDetails':active_instances}
                      })

  ''' MAIN FUNCTION '''


  def main():
      try:
          get_rest_api_instances()
      except Exception as ex:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(f'Failed to execute BaseScript. Error: {str(ex)}')


  ''' ENTRY POINT '''


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

scripttarget: 0
subtype: python3
tags: []
type: python
