commonfields:
  id: 7ffb7897-79e4-40fb-892e-fc845c9d204b
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: ""
    itemVersion: ""
    packID: ""
    packName: ""
    prevname: ""
    propagationLabels:
    - all
    toServerVersion: ""
dockerimage: demisto/python3:3.9.1.15759
enabled: true
engineinfo: {}
mainengineinfo: {}
name: test_dynamic_qradar
pswd: ""
runas: DBotWeakRole
runonce: false
script: |-
  context = demisto.context()
  demisto.results(context)
  try:
      res = demisto.executeCommand("ToTable", {"data":context["QRadar"]["Search"]})
      demisto.results({
          "Contents": res[0]['Contents'],
          "ContentsFormat": formats["markdown"],
          "Type": entryTypes["note"],
          "HumanReadable": res[0]['Contents'],
          "ReadableContentsFormat": formats["markdown"]
      })
  except:
      demisto.results({
          "Contents": "No Qradar Search",
          "ContentsFormat": formats["text"],
          "Type": entryTypes["note"],
          "HumanReadable": "No Qradar Search" ,
          "ReadableContentsFormat": formats["text"]
      })

      demisto.results({
      "Contents": inc_data['labels'],
      "ContentsFormat": formats["markdown"],
      "Type": entryTypes["note"],
      "HumanReadable": tableToMarkdown("Indicator Results", inc_data['labels']),
      "ReadableContentsFormat": formats["markdown"]
  })
scripttarget: 0
subtype: python3
tags:
- dynamic-section
type: python
